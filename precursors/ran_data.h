// ran_data.h - Auto-Generated (Wed Jan 3 16:53:43 2018): Data for the 'ran' module. Include in your module source file.

#define ran_a_state 0x8U // Size: Modified Fishman-20 64 state size.

// Bootstrap/Integral Function (RAN_A_RAND - opcode 0xE6DF): Modified Fishman-20 64 generate.
#define ran_a_rand_key e8dffcb810bae69a
#define ran_a_rand_size f96ab2965b08ef5d
#define ran_a_rand_crc a419de3ef14fa27e
#define ran_a_rand_data db75921da15fab33
static uint64_t ran_a_rand_key = UINT64_C(0x4F79D6DDF2BF1381);
static uint64_t ran_a_rand_size = UINT64_C(0x243);
static uint64_t ran_a_rand_crc = UINT64_C(0x87163B101A29FDBA);
static uint8_t ran_a_rand_data[] = { 
	0xDE, 0x54, 0x37, 0x70, 0x21, 0x3E, 0x88, 0x7E, 0x0A, 0xE7, 0x0B, 0x42, 0x84, 0xCB, 0x91, 0x3A, 0x39, 
	0x72, 0xC0, 0x73, 0x39, 0x99, 0xB6, 0x95, 0x40, 0xED, 0x7C, 0x1D, 0xE3, 0xF0, 0x26, 0x79, 0xF5, 
	0x5F, 0x99, 0x60, 0xB6, 0x7B, 0x39, 0x43, 0xE2, 0x37, 0xFD, 0xFB, 0x2E, 0xE8, 0xF8, 0xBF, 0xFA, 
	0xA3, 0x4E, 0x22, 0xE8, 0x31, 0x82, 0xE5, 0x86, 0xFD, 0xDA, 0xF4, 0xD2, 0xED, 0xEA, 0xE9, 0xCA, 
	0x80, 0xFC, 0xBD, 0xD0, 0x8D, 0x4F, 0x19, 0x20, 0xF3, 0x75, 0x20, 0xE5, 0x30, 0x28, 0x3E, 0x50, 
	0x71, 0x57, 0xF6, 0xC0, 0x74, 0xB4, 0xAF, 0x8A, 0xE6, 0x6C, 0x0D, 0x5C, 0x7D, 0x59, 0x44, 0x0A, 
	0x9A, 0x7A, 0x15, 0x2F, 0x26, 0xE4, 0xE7, 0x35, 0xA7, 0xE9, 0xC6, 0x3A, 0x4E, 0xB9, 0x4A, 0xE5, 
	0x54, 0x41, 0xB4, 0x05, 0x1E, 0x43, 0xF1, 0x06, 0xB8, 0x9A, 0x06, 0x74, 0x83, 0x2C, 0x1E, 0x00, 
	0x03, 0xE0, 0x5E, 0x88, 0x85, 0x22, 0x72, 0x09, 0xA3, 0xAB, 0x86, 0x5A, 0x87, 0xD3, 0x7E, 0x53, 
	0xBE, 0xA7, 0x98, 0xD6, 0xEF, 0xE2, 0x73, 0x63, 0x4C, 0x4D, 0x2B, 0xA8, 0x01, 0x6F, 0xB0, 0x8A, 
	0xE6, 0x67, 0xFD, 0xCC, 0x59, 0xF2, 0x66, 0xF7, 0x60, 0x52, 0xAE, 0xA7, 0x92, 0xE5, 0x4B, 0x2C, 
	0x72, 0x10, 0x64, 0xB9, 0x3A, 0xE3, 0xEB, 0x1A, 0x73, 0x64, 0xC0, 0xCA, 0x70, 0x9F, 0x61, 0xC1, 
	0x04, 0x25, 0x01, 0x29, 0x97, 0xBA, 0x3E, 0x06, 0xAD, 0x05, 0x2B, 0x59, 0x20, 0x88, 0x44, 0x17, 
	0x65, 0xB1, 0xA1, 0x09, 0x6C, 0x96, 0x36, 0xD0, 0x53, 0xAC, 0xD6, 0xFE, 0xC6, 0xFF, 0x56, 0x9D, 
	0xF2, 0x3A, 0x55, 0x62, 0x61, 0xC3, 0xAD, 0x03, 0x63, 0x42, 0x6F, 0xD4, 0xE9, 0x60, 0xD6, 0x3B, 
	0x8A, 0x85, 0x70, 0xFB, 0x55, 0x08, 0x1B, 0x0E, 0xA8, 0x13, 0xD1, 0x74, 0x25, 0x31, 0xBE, 0x9B, 
	0x79, 0xA3, 0x72, 0x31, 0x66, 0x10, 0x70, 0x7B, 0x88, 0xB2, 0x72, 0xD7, 0x0A, 0x38, 0x68, 0xA1, 
	0x15, 0xEA, 0x1A, 0xCD, 0xA2, 0xE3, 0xA4, 0xEC, 0x54, 0x73, 0x7B, 0x6C, 0x3A, 0xC9, 0xE4, 0x74, 
	0x05, 0x43, 0xEF, 0x58, 0xD1, 0x9B, 0xFF, 0x89, 0x17, 0x60, 0x1A, 0x73, 0xDE, 0xE7, 0x34, 0xCE, 
	0x31, 0x2C, 0xB0, 0x33, 0xB4, 0xF9, 0x95, 0x6D, 0x89, 0xD0, 0x18, 0x26, 0x7F, 0x3C, 0x86, 0xA7, 
	0x8A, 0x36, 0xB6, 0x04, 0xFB, 0xF5, 0xFC, 0xC5, 0xAF, 0xB5, 0x1E, 0xAC, 0xBB, 0x6A, 0x43, 0x71, 
	0xAB, 0x3E, 0x6B, 0x97, 0x30, 0xEF, 0x51, 0x34, 0x04, 0x9C, 0xBB, 0x03, 0xFA, 0xF7, 0x7A, 0x17, 
	0x78, 0xB6, 0x66, 0x35, 0xFD, 0xA7, 0xC8, 0x6C, 0xDF, 0xFB, 0x3E, 0x48, 0xC7, 0x1E, 0xFF, 0x73, 
	0x34, 0xF0, 0x2B, 0x61, 0x48, 0x3E, 0x1C, 0x9E, 0xFD, 0xC0, 0x7A, 0xEB, 0x65, 0xB6, 0x2D, 0x66, 
	0x3F, 0x0C, 0x3E, 0xEF, 0x08, 0x0D, 0xA2, 0x62, 0x7A, 0xA5, 0x1B, 0x23, 0xC0, 0x6C, 0xD1, 0x13, 
	0x5E, 0x6A, 0x36, 0x3A, 0x19, 0x13, 0x3D, 0x56, 0x7D, 0x37, 0x5D, 0x33, 0x1A, 0x78, 0x21, 0x04, 
	0x05, 0x32, 0x57, 0x7D, 0xBA, 0xEB, 0xB6, 0x2E, 0x5E, 0x72, 0x06, 0x9C, 0x4E, 0xC1, 0xC2, 0xEF, 
	0xD2, 0x61, 0x7B, 0x0B, 0xC0, 0x32, 0x41, 0x7C, 0x54, 0x50, 0xB2, 0xE7, 0xBF, 0xB2, 0xA9, 0xC9, 
	0x23, 0x19, 0xA1, 0x6E, 0x0B, 0x87, 0x4D, 0xF8, 0x33, 0xCC, 0xA0, 0x21, 0x17, 0x40, 0x80, 0x4E, 
	0x50, 0xE5, 0xD3, 0x64, 0x83, 0x09, 0xF2, 0xD4, 0x02, 0xCA, 0xB6, 0x16, 0x22, 0xBA, 0xFB, 0xD1, 
	0xC8, 0xF1, 0xEB, 0xF6, 0x71, 0xCA, 0xB9, 0xEB, 0xE3, 0x4A, 0xB8, 0xAC, 0x36, 0x8F, 0xF1, 0xC6, 
	0xDB, 0x09, 0x9D, 0x3F, 0x73, 0x91, 0x43, 0xCB, 0x0A, 0x8F, 0xB0, 0x9E, 0x69, 0xC7, 0x7A, 0x07, 
	0x22, 0x1C, 0x7E, 0x66, 0xED, 0x4E, 0x7A, 0xA1, 0x39, 0xD4, 0x75, 0xE7, 0x3C, 0xB0, 0x5B, 0xF7, 
	0xF3, 0x39, 0x3A, 0xE1, 0x0B, 0x95, 0x02, 0x58, 0xFC, 0xE5, 0x93, 0xAF, 0x3E, 0x6E, 0xD5, 0x4A, 
	0x07, 0x98, 0xA3, 0x6D, 0xFA, 0xD9, 0x11, 0x89, 0x2C, 0x3C, 0xC1, 0xDE, 0x86, 0xC9, 0x3F, 0x2E, 
	0xC9, 0x99, 0xF3, 0xA9, 0x25, 0xFA, 0xFC, 0x22, 0x97, 0xE7, 0x78, 0xE4, 0x84, 0x7B, 0x7B, 0x24, 
	0xB4, 0x1B };

// Bootstrap/Integral Function (RAN_A_SEED - opcode 0xCCAC): Modified Fishman-20 64 seed.
#define ran_a_seed_key be1becea7cd2a255
#define ran_a_seed_size a71d25cc9fbc13c6
#define ran_a_seed_crc bb02200d919cb83c
#define ran_a_seed_data af91234881fbc4ff
static uint64_t ran_a_seed_key = UINT64_C(0x6FB9298FA2314D58);
static uint64_t ran_a_seed_size = UINT64_C(0x61);
static uint64_t ran_a_seed_crc = UINT64_C(0x963B5964CF3C0A6E);
static uint8_t ran_a_seed_data[] = { 
	0x9F, 0xCD, 0x9A, 0xCE, 0x82, 0xED, 0x4E, 0x1D, 0xCC, 0x0B, 0x02, 0x28, 0x42, 0xFD, 0xD2, 0x25, 0x93, 
	0xC4, 0x97, 0x01, 0xDE, 0xF0, 0xE7, 0x73, 0x40, 0x1B, 0x0C, 0x98, 0x6C, 0xB9, 0xF6, 0xBD, 0x82, 
	0xE0, 0x4C, 0xAA, 0x5E, 0x81, 0xFB, 0xF2, 0x64, 0x90, 0xE0, 0x8C, 0xC2, 0xBA, 0xC9, 0xB3, 0xD3, 
	0x71, 0xBA, 0xFA, 0xAB, 0x24, 0x1A, 0x96, 0x93, 0x5F, 0xE6, 0x24, 0xA6, 0x48, 0xE0, 0x8C, 0xB9, 
	0x5B, 0xF9, 0xA2, 0x86, 0x1D, 0x33, 0xF9, 0x93, 0x97, 0xD4, 0xF4, 0x71, 0xD3, 0x3E, 0x8E, 0xC1, 
	0x51, 0x8D, 0x04, 0xDE, 0xB5, 0x91, 0x2E, 0xC2, 0x7D, 0x09, 0x66, 0xB5, 0xE8, 0xE1, 0x5A, 0x73
	 };

#define ran_b_state 0x10004U // Size: Modified GFSR4 64 state size.

// Bootstrap/Integral Function (RAN_B_RAND - opcode 0xBC69): Modified GFSR4 64 generate.
#define ran_b_rand_key c501b95d8fa4b4d1
#define ran_b_rand_size f2e568621d476c8d
#define ran_b_rand_crc bc47eb61bd61e667
#define ran_b_rand_data c59b4d24bf08d90f
static uint64_t ran_b_rand_key = UINT64_C(0x4026B24CDC61C7EC);
static uint64_t ran_b_rand_size = UINT64_C(0x247);
static uint64_t ran_b_rand_crc = UINT64_C(0x521803B1ED8BEBCC);
static uint8_t ran_b_rand_data[] = { 
	0x5C, 0xA6, 0x68, 0x6D, 0x07, 0x6F, 0x39, 0x3B, 0xC4, 0x4B, 0x63, 0xEE, 0xBF, 0x84, 0x19, 0xA7, 0x35, 
	0x3A, 0x28, 0xC6, 0x37, 0x77, 0xD4, 0x65, 0x59, 0xC3, 0x0E, 0xED, 0x36, 0x1F, 0x40, 0xED, 0x3B, 
	0x79, 0xB0, 0xF4, 0xF2, 0x4B, 0x71, 0x9D, 0x8E, 0xB0, 0xF6, 0xAF, 0xAD, 0x5A, 0x2B, 0x4B, 0x42, 
	0xB2, 0x18, 0x53, 0xC6, 0x4B, 0x6D, 0x92, 0x75, 0x21, 0x05, 0x19, 0xFA, 0x9E, 0x09, 0xCA, 0x15, 
	0x46, 0xA1, 0x9F, 0x71, 0x48, 0x24, 0x17, 0xE7, 0xA7, 0x7F, 0xC8, 0x05, 0x63, 0x2E, 0x4F, 0x92, 
	0x2F, 0x3F, 0xFC, 0xEC, 0xBA, 0xBA, 0x5A, 0x1E, 0x72, 0xC7, 0x9C, 0xEA, 0xB9, 0x53, 0x2F, 0x79, 
	0xBC, 0xF4, 0xD1, 0x46, 0x76, 0x13, 0xC7, 0x46, 0xE9, 0xF2, 0xA4, 0x64, 0xD7, 0xAA, 0x80, 0x86, 
	0xE5, 0xF3, 0xB6, 0xBA, 0x85, 0x51, 0xCA, 0x80, 0x9F, 0xEE, 0xC1, 0xC3, 0x68, 0x74, 0x6E, 0x75, 
	0x14, 0xC9, 0x26, 0xA7, 0x6C, 0xA3, 0x47, 0x09, 0xC8, 0xAC, 0xF7, 0x82, 0xB2, 0x92, 0xF7, 0xD4, 
	0x30, 0xAC, 0x68, 0x74, 0x78, 0x7D, 0x33, 0xB8, 0x78, 0xAE, 0x9F, 0x15, 0xEA, 0xB5, 0xBB, 0x63, 
	0x90, 0xD8, 0x8E, 0xEA, 0x8F, 0x75, 0x89, 0x35, 0x3B, 0x7D, 0xE8, 0x99, 0x9C, 0x1D, 0xB1, 0x9E, 
	0xD6, 0x41, 0xAD, 0x44, 0x61, 0xF8, 0xC2, 0xEF, 0x29, 0xF2, 0x85, 0xC3, 0x70, 0x1E, 0xAD, 0x9B, 
	0x19, 0xCD, 0xA7, 0x5F, 0x7B, 0xC6, 0xBD, 0x7F, 0xFD, 0x84, 0x79, 0xD1, 0x71, 0x4A, 0x88, 0x4B, 
	0xC9, 0x83, 0x4F, 0xC5, 0x18, 0x35, 0xB9, 0x87, 0x43, 0x45, 0x6E, 0x05, 0xDC, 0x28, 0x1F, 0xDD, 
	0x52, 0x78, 0x17, 0x71, 0xC3, 0x98, 0x57, 0xBB, 0x08, 0x44, 0xB3, 0xBA, 0x25, 0x30, 0xE1, 0xC2, 
	0x8F, 0xF0, 0x0E, 0x80, 0xE6, 0x6C, 0xF8, 0x19, 0x86, 0xA3, 0xBE, 0x0F, 0x62, 0x05, 0x56, 0xB9, 
	0x73, 0x91, 0x8D, 0x40, 0x06, 0x3B, 0x61, 0x13, 0xFD, 0x5F, 0xEE, 0x20, 0x06, 0xF7, 0x4B, 0x89, 
	0xDD, 0x01, 0x80, 0xFE, 0x4F, 0x1B, 0x7A, 0xAE, 0x23, 0xE2, 0xD0, 0xA4, 0x54, 0x8E, 0x46, 0x11, 
	0x0D, 0x6E, 0x0F, 0xDD, 0xE3, 0x03, 0x6E, 0xB0, 0x41, 0xEA, 0xE9, 0x4D, 0xBC, 0xDA, 0x3A, 0x1E, 
	0xE1, 0x0D, 0x4A, 0xDB, 0x14, 0x72, 0x4B, 0xCD, 0x6E, 0x60, 0x21, 0x0E, 0x38, 0x68, 0x23, 0xB2, 
	0xC1, 0x9F, 0x6F, 0xAC, 0xB3, 0x2C, 0x3F, 0x1F, 0xFD, 0xCB, 0x98, 0x9B, 0xAF, 0xC3, 0xBE, 0x1A, 
	0xE5, 0x9E, 0x32, 0x67, 0xDE, 0x03, 0x84, 0x86, 0xA1, 0xF2, 0x41, 0x0B, 0xFC, 0x0D, 0x6E, 0x5E, 
	0x79, 0xFF, 0x61, 0xA2, 0x61, 0xAC, 0x7A, 0xBD, 0x6E, 0xDD, 0x75, 0x74, 0x92, 0xEF, 0x9C, 0xA2, 
	0x14, 0xFC, 0x8A, 0xFE, 0xF3, 0x4D, 0x71, 0xD7, 0x09, 0xCD, 0xF0, 0x5F, 0xEB, 0x91, 0x36, 0x17, 
	0xFB, 0x9F, 0x71, 0x6D, 0xE5, 0xDB, 0xFA, 0xFF, 0xCD, 0x47, 0x95, 0x00, 0x17, 0xA1, 0xBF, 0x0E, 
	0x0D, 0x4D, 0x78, 0x99, 0xA1, 0xBB, 0x01, 0x9C, 0xF2, 0xFA, 0x68, 0xC7, 0xCA, 0xCA, 0x4C, 0xD3, 
	0x1D, 0xA3, 0x18, 0xB0, 0x99, 0x08, 0x50, 0xA5, 0x3E, 0xE8, 0x53, 0xC3, 0xEA, 0x09, 0xEA, 0xA7, 
	0xB2, 0x56, 0xC5, 0xB4, 0xF0, 0x84, 0x77, 0x66, 0x20, 0xE7, 0xC5, 0x57, 0xC0, 0x9B, 0x7C, 0xF4, 
	0x4C, 0x95, 0x44, 0xB2, 0x13, 0x87, 0x5B, 0xAE, 0x3F, 0x57, 0xE7, 0xB6, 0xB5, 0xDF, 0x0F, 0x77, 
	0x7D, 0xB4, 0x05, 0x0E, 0xD8, 0x72, 0x6C, 0x63, 0x82, 0x44, 0xF4, 0xA5, 0xB8, 0x26, 0x45, 0xA9, 
	0xC7, 0x96, 0x8C, 0xE7, 0xCC, 0x55, 0x3C, 0x7B, 0x5D, 0xE9, 0x9B, 0x09, 0x9A, 0xBD, 0x78, 0xD0, 
	0x0E, 0x34, 0xC1, 0xCF, 0x7E, 0x55, 0xDF, 0x0C, 0xCC, 0x31, 0x96, 0xB1, 0x12, 0x09, 0xA9, 0x54, 
	0x99, 0x8D, 0xD6, 0x29, 0x36, 0x06, 0x98, 0x6A, 0x96, 0x2A, 0xBE, 0x49, 0x91, 0x73, 0xFB, 0xB9, 
	0x3B, 0xC8, 0x05, 0xD2, 0xE7, 0x99, 0x42, 0x0A, 0x8E, 0x68, 0x23, 0xF1, 0x0E, 0xAF, 0x10, 0xCC, 
	0x67, 0xF9, 0x36, 0x91, 0xE9, 0x22, 0xAC, 0x84, 0x1D, 0x47, 0x57, 0x97, 0xA4, 0x3D, 0xF1, 0xE4, 
	0x42, 0xAA, 0xF2, 0xD7, 0x28, 0x47, 0x52, 0x89, 0x4E, 0x02, 0x0B, 0x8C, 0xA3, 0x76, 0x2E, 0x44, 
	0xB7, 0x04, 0x31, 0xD4, 0xA3, 0xA5 };

// Bootstrap/Integral Function (RAN_B_SEED - opcode 0x0528): Modified GFSR4 64 seed.
#define ran_b_seed_key bef93a802dd8b686
#define ran_b_seed_size b32c1c7e36349aa0
#define ran_b_seed_crc b9dea5dbf4f9847c
#define ran_b_seed_data fc842d256ffdecbc
static uint64_t ran_b_seed_key = UINT64_C(0x7766D9F1DD3F96FA);
static uint64_t ran_b_seed_size = UINT64_C(0xBF);
static uint64_t ran_b_seed_crc = UINT64_C(0xA1F32197A7738B49);
static uint8_t ran_b_seed_data[] = { 
	0xBF, 0x5E, 0x7E, 0x6E, 0x59, 0x83, 0x23, 0x0A, 0x67, 0x35, 0xA1, 0x8E, 0x67, 0x9C, 0x43, 0x1E, 0x07, 
	0xBA, 0x6F, 0x5E, 0xF1, 0x15, 0x14, 0x48, 0xCE, 0x7C, 0x26, 0x33, 0xA5, 0x35, 0xB2, 0x9B, 0xD0, 
	0x4C, 0x77, 0x34, 0x73, 0x36, 0x06, 0x20, 0xCE, 0x96, 0xFE, 0x18, 0x50, 0xB7, 0x37, 0x36, 0x32, 
	0x4F, 0xF7, 0x24, 0x55, 0x98, 0x75, 0x4F, 0x72, 0x18, 0xF2, 0x72, 0xC4, 0xFF, 0xEB, 0x13, 0x2A, 
	0xB3, 0xB8, 0x89, 0x6E, 0x7D, 0xD7, 0x30, 0x05, 0xC2, 0xD3, 0xFC, 0x8A, 0x91, 0x1F, 0xEB, 0x92, 
	0x82, 0x57, 0x20, 0x76, 0xC9, 0x4A, 0x63, 0x54, 0xE3, 0xF1, 0x8A, 0x66, 0x2E, 0x67, 0xEF, 0x38, 
	0xA5, 0x86, 0x21, 0x00, 0x0D, 0x21, 0xCA, 0xA4, 0x09, 0xA2, 0x27, 0x0C, 0xE4, 0x0D, 0x95, 0x7E, 
	0xD4, 0x31, 0x0F, 0xDC, 0x32, 0x28, 0x27, 0xD5, 0x33, 0xB7, 0x92, 0xD9, 0x08, 0x00, 0xB3, 0x1F, 
	0xD4, 0xA5, 0x29, 0x45, 0x1C, 0x7E, 0xC0, 0x43, 0xD0, 0xC5, 0xAB, 0xF1, 0xFF, 0x7B, 0x29, 0x34, 
	0xF8, 0xA3, 0xE1, 0xA1, 0xE0, 0x28, 0xC7, 0x12, 0x4C, 0x26, 0x7E, 0x4F, 0x2A, 0x7B, 0x57, 0xF1, 
	0x3A, 0x65, 0x3C, 0x96, 0x3E, 0x1C, 0x71, 0x96, 0xCB, 0xF0, 0x9A, 0x91, 0x58, 0xDB, 0x2D, 0x15, 
	0xE9, 0xC5, 0x23, 0x80, 0x52, 0x22, 0x41, 0xE1, 0x01, 0xB6, 0x54, 0xAF, 0x89, 0x7F };

#define ran_c_state 0x9C4U // Size: Mersenne Twister 19937 64 state size.

// Bootstrap/Integral Function (RAN_C_RAND - opcode 0xF925): Mersenne Twister 19937 64 generate.
#define ran_c_rand_key cf31c91a3a018430
#define ran_c_rand_size ce2ec477416cc99c
#define ran_c_rand_crc a2d350bba498af1a
#define ran_c_rand_data d1b884a86350cdec
static uint64_t ran_c_rand_key = UINT64_C(0xB0D1D45A43243722);
static uint64_t ran_c_rand_size = UINT64_C(0x19C);
static uint64_t ran_c_rand_crc = UINT64_C(0x85FC9ACA5ACC7A7E);
static uint8_t ran_c_rand_data[] = { 
	0x46, 0x7C, 0x66, 0xB5, 0x9C, 0xF6, 0xB6, 0x60, 0x44, 0x5E, 0x97, 0x2F, 0xC2, 0x93, 0xF2, 0xAD, 0xC1, 
	0x09, 0x1E, 0xF4, 0x54, 0xBB, 0x26, 0xE7, 0x1A, 0xDC, 0x44, 0x04, 0xF3, 0x21, 0x16, 0x69, 0x47, 
	0x54, 0x54, 0xA9, 0xC1, 0xD7, 0xBE, 0x7D, 0x4D, 0x0B, 0x88, 0xC1, 0x9C, 0xA0, 0xFA, 0x78, 0x12, 
	0xAD, 0x04, 0x2B, 0xF4, 0x89, 0xB4, 0x3D, 0xA8, 0x9F, 0x3A, 0x92, 0xB0, 0xFC, 0x79, 0x77, 0x00, 
	0x46, 0x17, 0x15, 0x32, 0xAA, 0xC0, 0xDB, 0x29, 0x8C, 0x60, 0x7C, 0x00, 0x57, 0xDD, 0x1C, 0x89, 
	0x12, 0xA8, 0x30, 0x21, 0x39, 0x3D, 0xAA, 0x54, 0x21, 0xB7, 0x0B, 0x11, 0xB2, 0x25, 0xF1, 0xCD, 
	0xE9, 0x11, 0xCD, 0xD9, 0x25, 0x1F, 0x69, 0x49, 0x1F, 0xD6, 0xE0, 0x56, 0xAE, 0xB5, 0x7B, 0xCF, 
	0xAF, 0x8C, 0xA9, 0x62, 0x98, 0xD1, 0x98, 0x45, 0xE2, 0xAD, 0xC6, 0x38, 0x4F, 0x14, 0x9B, 0xAB, 
	0x6B, 0xA4, 0xFD, 0x25, 0xFD, 0xD2, 0x1F, 0xF3, 0x2F, 0x47, 0xD0, 0xFF, 0x42, 0xA2, 0x90, 0x35, 
	0x4C, 0x3E, 0xE0, 0x48, 0xF2, 0x43, 0x4D, 0x40, 0x35, 0xE9, 0x47, 0xD6, 0x5F, 0x2E, 0x2B, 0x0A, 
	0x9C, 0x6C, 0xFE, 0xED, 0x4C, 0x54, 0xF1, 0x55, 0xAD, 0xF9, 0xB3, 0xD0, 0xE2, 0xAF, 0xF7, 0x01, 
	0x23, 0x58, 0x04, 0xD8, 0xBE, 0x39, 0xE3, 0xD3, 0x0B, 0x62, 0x89, 0x7D, 0x15, 0x9F, 0x2A, 0x4F, 
	0x19, 0x91, 0x32, 0x6E, 0x72, 0x4B, 0x3B, 0xF8, 0xCF, 0x5B, 0xC7, 0x88, 0x25, 0x11, 0xE9, 0x17, 
	0x17, 0xD7, 0x6F, 0xCB, 0xC7, 0xEA, 0x37, 0x5E, 0x1C, 0x88, 0x22, 0x33, 0xD0, 0x03, 0x8F, 0x91, 
	0x21, 0x2A, 0x6F, 0x6A, 0xAF, 0x0E, 0xD1, 0x99, 0xD7, 0xE2, 0x28, 0xF1, 0xD0, 0x36, 0x30, 0x1F, 
	0x39, 0xEC, 0xB1, 0xC7, 0x66, 0x0A, 0x8B, 0xC6, 0xEB, 0x01, 0xDD, 0x38, 0xC0, 0xD6, 0xB7, 0x2F, 
	0x47, 0x86, 0xA4, 0xCD, 0x29, 0x39, 0x89, 0xFB, 0xD2, 0x2B, 0x8A, 0x28, 0xA4, 0x9B, 0x3C, 0x77, 
	0x58, 0xE8, 0x42, 0xDA, 0xAE, 0x05, 0xCB, 0xAF, 0xD7, 0x2B, 0x7C, 0x06, 0x3B, 0x39, 0x49, 0x50, 
	0xB6, 0xA7, 0xF2, 0x51, 0xFF, 0x56, 0x95, 0x8D, 0xB7, 0x29, 0xD3, 0x2F, 0xF8, 0x2B, 0x5B, 0xED, 
	0x72, 0x81, 0x5C, 0x31, 0x75, 0x23, 0x6F, 0xF8, 0xE2, 0x75, 0x41, 0xFB, 0x66, 0xB0, 0x5E, 0xB2, 
	0xA8, 0x37, 0x3F, 0xEE, 0xA9, 0x66, 0xBF, 0x5C, 0x4A, 0x18, 0xAD, 0x03, 0x3E, 0x2B, 0xDA, 0xAA, 
	0x18, 0x76, 0x16, 0x50, 0x76, 0x37, 0x13, 0x37, 0x4C, 0x0E, 0xCD, 0x58, 0xB9, 0xC1, 0x2C, 0xFB, 
	0x0F, 0x95, 0x1F, 0x1D, 0x22, 0xA2, 0x3F, 0x01, 0x65, 0xE5, 0x72, 0xB5, 0x7E, 0x48, 0x77, 0x7A, 
	0x49, 0xA1, 0x29, 0x3F, 0x75, 0x80, 0x03, 0xA5, 0x43, 0xFC, 0xC7, 0xC8, 0xAC, 0x9B, 0x0E, 0x76, 
	0x27, 0x7B, 0x57, 0x7E, 0x8D, 0x0C, 0xE9, 0x86, 0x43, 0x20, 0x75, 0x23, 0xD4, 0xA4, 0xD8, 0xDB, 
	0x69, 0xBF, 0x77, 0x2A, 0x6B, 0x48, 0x8D, 0x9F, 0x41, 0x0B, 0xB1 };

// Bootstrap/Integral Function (RAN_C_SEED - opcode 0x4957): Mersenne Twister 19937 64 seed.
#define ran_c_seed_key b99ac99a5fb0db7a
#define ran_c_seed_size ac6d224f602d50e3
#define ran_c_seed_crc bf30e82cdec3369e
#define ran_c_seed_data a72839b156cb51fb
static uint64_t ran_c_seed_key = UINT64_C(0xB37536362817C058);
static uint64_t ran_c_seed_size = UINT64_C(0x48);
static uint64_t ran_c_seed_crc = UINT64_C(0xEAB8DBBC9F95F85D);
static uint8_t ran_c_seed_data[] = { 
	0x8B, 0xDD, 0x8B, 0x83, 0xA5, 0xC0, 0xA5, 0xDF, 0xE8, 0x74, 0x1C, 0x4E, 0x03, 0x00, 0xF5, 0x2B, 0x8F, 
	0xCE, 0xDA, 0x70, 0xBC, 0x07, 0x9C, 0xA1, 0xE2, 0xE0, 0x16, 0xD3, 0x09, 0x3F, 0x7B, 0x6D, 0x55, 
	0x3B, 0x4C, 0xB3, 0xAE, 0x97, 0xC9, 0x44, 0xAF, 0xE0, 0x35, 0x14, 0x4E, 0xC7, 0x56, 0xCE, 0xAA, 
	0xFF, 0x03, 0xE3, 0x6A, 0xDB, 0xAC, 0x7F, 0xF8, 0x8F, 0x69, 0xD2, 0x66, 0xCB, 0x0B, 0x78, 0xD1, 
	0x19, 0x30, 0x6C, 0xCF, 0xAF, 0xB1, 0xC1 };

#define ran_d_state 0x8U // Size: Split Mix 64 extended state size.

// Bootstrap/Integral Function (RAN_D_RAND - opcode 0x8AD6): Split Mix 64 extended generate.
#define ran_d_rand_key e32875f7756893a6
#define ran_d_rand_size c480050bf4958041
#define ran_d_rand_crc ab3d76493f621b1b
#define ran_d_rand_data be9f3522bad2c6e3
static uint64_t ran_d_rand_key = UINT64_C(0x7A9EA50DE71859FE);
static uint64_t ran_d_rand_size = UINT64_C(0x4B);
static uint64_t ran_d_rand_crc = UINT64_C(0x1DE35D109FCF4999);
static uint8_t ran_d_rand_data[] = { 
	0x53, 0x2C, 0x69, 0x9A, 0x38, 0x29, 0x7E, 0x3D, 0x7C, 0x66, 0x54, 0xD1, 0x3D, 0xBA, 0x4D, 0x9F, 0x92, 
	0xBE, 0xEA, 0x6C, 0x04, 0x8B, 0x72, 0x7D, 0xF2, 0x5C, 0xA0, 0xC2, 0xB3, 0x4E, 0xDC, 0x01, 0xD6, 
	0x72, 0x85, 0x0C, 0x24, 0x5B, 0x86, 0x53, 0x85, 0x08, 0xC2, 0x82, 0x91, 0x9F, 0xD3, 0x81, 0xB3, 
	0xBC, 0x02, 0xD5, 0x8E, 0x67, 0xDE, 0x13, 0xE8, 0x89, 0x7F, 0x84, 0xD3, 0x72, 0x82, 0xA3, 0x2F, 
	0x27, 0xAD, 0x3A, 0x26, 0x6B, 0xE7, 0xF8, 0x64, 0x88, 0xFB };

// Bootstrap/Integral Function (RAN_D_SEED - opcode 0x14D3): Split Mix 64 extended seed.
#define ran_d_seed_key d7e5c7e5153f49aa
#define ran_d_seed_size e691099a8bc741c4
#define ran_d_seed_crc aeab8a5e7ad10687
#define ran_d_seed_data db60638e1d27d280
static uint64_t ran_d_seed_key = UINT64_C(0xB05407DF58DF7B0);
static uint64_t ran_d_seed_size = UINT64_C(0x22B);
static uint64_t ran_d_seed_crc = UINT64_C(0x8CCA9322073A5E8A);
static uint8_t ran_d_seed_data[] = { 
	0x6F, 0xB9, 0x47, 0x6A, 0x8C, 0x07, 0x28, 0x7D, 0xDA, 0x64, 0x89, 0x05, 0x28, 0xF8, 0x2C, 0x00, 0x35, 
	0x92, 0xF8, 0x66, 0xB4, 0xC7, 0x95, 0x8B, 0xFA, 0xB0, 0x67, 0x2E, 0x89, 0x38, 0xFE, 0xB5, 0xA4, 
	0xBD, 0x4D, 0x71, 0x57, 0x28, 0x9A, 0xFB, 0xB4, 0xCC, 0x3B, 0xCE, 0x6F, 0x23, 0xA2, 0x92, 0x9D, 
	0x64, 0xCB, 0xC7, 0x26, 0x17, 0x8E, 0xAB, 0xA9, 0x99, 0x87, 0xCF, 0x66, 0xB2, 0x33, 0x60, 0x83, 
	0xFA, 0xD2, 0xE6, 0xD1, 0x1D, 0x7A, 0x11, 0xA6, 0xFC, 0x2D, 0x13, 0xB0, 0x85, 0x24, 0xEF, 0x17, 
	0xFB, 0x1C, 0x3A, 0xB5, 0xDE, 0x8B, 0x77, 0x52, 0xAD, 0xB7, 0x3C, 0x9A, 0x1D, 0x99, 0xFF, 0xC8, 
	0x6B, 0x07, 0x39, 0x26, 0xEB, 0x23, 0x41, 0x09, 0xC7, 0x7E, 0x23, 0xE2, 0x0F, 0xF5, 0x13, 0xEF, 
	0x08, 0xC2, 0x70, 0x55, 0x27, 0x56, 0x3D, 0x82, 0xC6, 0xA2, 0xE6, 0xD6, 0x69, 0x77, 0xBA, 0x39, 
	0xBF, 0x79, 0x2F, 0xFD, 0x92, 0x75, 0x3A, 0x3A, 0x94, 0xCC, 0x3D, 0x4F, 0x92, 0xAD, 0x1F, 0xE2, 
	0x7D, 0xB7, 0xFB, 0x89, 0x55, 0x58, 0x35, 0xAC, 0x0E, 0x9F, 0x9A, 0xEA, 0x92, 0x09, 0x55, 0x0B, 
	0x38, 0x62, 0xFF, 0x4B, 0xBB, 0x85, 0xCC, 0x3F, 0x50, 0xEE, 0x61, 0xBC, 0x1F, 0x12, 0xBB, 0xC0, 
	0x8F, 0xBD, 0x7F, 0x9A, 0xF0, 0x9C, 0x78, 0x20, 0xFD, 0x02, 0x86, 0x25, 0xAA, 0x84, 0x14, 0xF2, 
	0xB7, 0xAF, 0x3C, 0x0D, 0xF9, 0xD8, 0xAB, 0xB3, 0x8F, 0xCB, 0x47, 0x3D, 0x91, 0x49, 0x44, 0x67, 
	0x8C, 0x8D, 0xEB, 0xDC, 0x77, 0x24, 0x7D, 0x3C, 0x4F, 0xA3, 0x32, 0x41, 0xDD, 0x00, 0x00, 0xFD, 
	0x03, 0xE9, 0xC9, 0xE2, 0x1E, 0xC5, 0xF3, 0x1D, 0xF7, 0x49, 0xCF, 0x61, 0x7C, 0x51, 0x5D, 0x31, 
	0x88, 0xFB, 0x32, 0x4A, 0xED, 0x8D, 0xD9, 0x54, 0x52, 0xA7, 0x1F, 0xE7, 0xB2, 0x0F, 0x81, 0xEA, 
	0x1F, 0xE2, 0x6D, 0x92, 0x72, 0xAD, 0x24, 0xD2, 0x2E, 0x6C, 0x88, 0x99, 0x00, 0xFF, 0xF8, 0xF5, 
	0x4E, 0xEC, 0x28, 0x2F, 0x3D, 0x41, 0x93, 0xB5, 0x35, 0x89, 0x4A, 0x5F, 0x69, 0x54, 0xEB, 0xC1, 
	0x82, 0x73, 0xAB, 0x0D, 0x1C, 0x2D, 0xBD, 0xFB, 0x9D, 0xC1, 0xEC, 0xAC, 0x7E, 0x73, 0x15, 0xAE, 
	0x5A, 0x74, 0x89, 0x24, 0x00, 0x24, 0xE6, 0x7D, 0xFD, 0x1B, 0x8B, 0xA3, 0x4E, 0x98, 0x1D, 0x71, 
	0x7E, 0xEF, 0x49, 0xA8, 0x22, 0xA3, 0xDD, 0x62, 0x91, 0xEB, 0xA6, 0x10, 0xE1, 0x59, 0xDD, 0x6E, 
	0xB4, 0x0B, 0x2D, 0xFC, 0x08, 0xA4, 0xDA, 0xEE, 0xE3, 0xEE, 0xC2, 0xFB, 0x1B, 0x37, 0x98, 0xC3, 
	0xA3, 0xF2, 0xD4, 0xFB, 0x2B, 0x1C, 0xC9, 0x17, 0x4F, 0xD6, 0x78, 0xC2, 0xA5, 0xBB, 0x10, 0x45, 
	0x4D, 0x37, 0x0E, 0xA6, 0xEC, 0xEB, 0x2E, 0x77, 0x7E, 0x11, 0x19, 0x11, 0xF7, 0xA9, 0xD4, 0x6C, 
	0x71, 0xFE, 0x91, 0x68, 0xB0, 0xFE, 0x06, 0x0D, 0xFD, 0xF8, 0x2D, 0x6A, 0x6C, 0x47, 0x3C, 0x31, 
	0x4E, 0x5C, 0x0B, 0x86, 0x37, 0x60, 0x55, 0xD0, 0x94, 0x33, 0xC3, 0xC3, 0xDB, 0xDD, 0xB9, 0x32, 
	0xE4, 0x2D, 0x33, 0x4D, 0xBA, 0xC9, 0x0E, 0x01, 0x35, 0x8E, 0x46, 0xF9, 0x08, 0x6B, 0x78, 0x9A, 
	0x96, 0x20, 0x4F, 0xA5, 0x8F, 0x85, 0xD1, 0x92, 0xB4, 0xAD, 0x6C, 0x13, 0x2E, 0xAB, 0x69, 0xFD, 
	0x58, 0x37, 0xA9, 0x6E, 0x10, 0xC4, 0x98, 0xC2, 0x40, 0x4D, 0x70, 0x1E, 0x6A, 0xD9, 0x21, 0x18, 
	0x77, 0x4E, 0xFA, 0x0E, 0xB7, 0xEA, 0xB8, 0x71, 0x21, 0x27, 0x3A, 0xA9, 0xAF, 0xAC, 0xC2, 0x8E, 
	0xBF, 0x61, 0xBF, 0x30, 0xA7, 0xB3, 0x46, 0x91, 0xB2, 0x03, 0xEF, 0xF0, 0xF5, 0x4C, 0xDC, 0x01, 
	0xCC, 0xB9, 0x6C, 0x19, 0xD4, 0x54, 0xEB, 0x34, 0x3F, 0x75, 0x9F, 0x8C, 0xAD, 0xC4, 0x14, 0x85, 
	0x6E, 0xF0, 0xCA, 0x8D, 0x3E, 0x89, 0x9C, 0x71, 0x01, 0x9E, 0xB5, 0x3A, 0x68, 0x97, 0x6E, 0xA1, 
	0x04, 0xC3, 0x7D, 0x23, 0x32, 0xDC, 0xE6, 0x07, 0x10, 0xAB, 0xE3, 0x50, 0x4A, 0x71, 0x5D, 0xB7, 
	0xB6, 0xF0, 0xB5, 0x09, 0x79, 0x6F, 0xE9, 0xC7, 0xDB, 0x22 };

#define ran_e_state 0x10U // Size: Xoroshiro128+ 64 state size.

// Bootstrap/Integral Function (RAN_E_RAND - opcode 0x9156): Xoroshiro128+ 64 generate.
#define ran_e_rand_key df0915bd5ed591b3
#define ran_e_rand_size bd19c158f61b46a6
#define ran_e_rand_crc f274dcbf228899ad
#define ran_e_rand_data bf609f7a8a31e0eb
static uint64_t ran_e_rand_key = UINT64_C(0xF06A76B4BF766B88);
static uint64_t ran_e_rand_size = UINT64_C(0x2B);
static uint64_t ran_e_rand_crc = UINT64_C(0x2735B301CF85DE3);
static uint8_t ran_e_rand_data[] = { 
	0xCF, 0xE6, 0x5B, 0x2C, 0x18, 0xFB, 0x7C, 0xC1, 0xE9, 0x85, 0xA5, 0x3E, 0x2C, 0x19, 0xDB, 0x60, 0x8D, 
	0xEB, 0x14, 0xA2, 0xDF, 0x71, 0x5E, 0x88, 0x1B, 0x10, 0xC2, 0x46, 0xBC, 0x88, 0x45, 0x20, 0xB5, 
	0x7E, 0x12, 0x1B, 0xD0, 0x15, 0xD1, 0xB6, 0xCD, 0xC7, 0xB2 };

// Bootstrap/Integral Function (RAN_E_SEED - opcode 0x37A5): Xoroshiro128+ 64 seed.
#define ran_e_seed_key d3f393fa36b8d3e3
#define ran_e_seed_size bb2bd9052092fb1d
#define ran_e_seed_crc d44d67cae8d6a2ff
#define ran_e_seed_data ddbb249a6fa30721
static uint64_t ran_e_seed_key = UINT64_C(0x39D73AFED11A3E0F);
static uint64_t ran_e_seed_size = UINT64_C(0xDC);
static uint64_t ran_e_seed_crc = UINT64_C(0x92689CD726319A0A);
static uint8_t ran_e_seed_data[] = { 
	0x19, 0x1E, 0x84, 0x33, 0x20, 0x54, 0x77, 0x52, 0xAA, 0x56, 0x44, 0xC2, 0x30, 0xD3, 0x66, 0x2C, 0xA2, 
	0x74, 0x79, 0x09, 0xDC, 0x80, 0x3E, 0x0D, 0xFA, 0xE6, 0xE2, 0xCC, 0x28, 0x10, 0x20, 0x0D, 0x3A, 
	0x69, 0xF0, 0x61, 0x59, 0x0F, 0xCF, 0xA9, 0x6C, 0xD3, 0xBC, 0x99, 0xCF, 0xC7, 0xA1, 0x67, 0x2F, 
	0x5C, 0xF2, 0x90, 0xAC, 0x6D, 0x39, 0xC2, 0xE1, 0xD3, 0x0E, 0x47, 0xF1, 0xA1, 0x14, 0x3C, 0xE7, 
	0xED, 0x63, 0x04, 0x7F, 0x53, 0x1C, 0x16, 0x2A, 0xB9, 0x66, 0x02, 0x84, 0x53, 0x76, 0xF7, 0xCD, 
	0xB3, 0x61, 0x03, 0x45, 0x77, 0x0C, 0x8F, 0x4F, 0x54, 0x85, 0xED, 0x42, 0x4D, 0x95, 0x01, 0x2D, 
	0x5D, 0xA8, 0xD3, 0xA6, 0x33, 0x9A, 0x16, 0xD1, 0xD6, 0x8B, 0xF2, 0xD9, 0xA8, 0x06, 0x53, 0xAB, 
	0xE1, 0xFB, 0x37, 0x79, 0x40, 0xB1, 0xBE, 0xA6, 0x04, 0xAF, 0xF5, 0x4B, 0x16, 0x0D, 0x0D, 0x2F, 
	0xCF, 0xF9, 0xCE, 0x9C, 0xD4, 0x97, 0x24, 0x09, 0xFC, 0x36, 0x74, 0x9D, 0xD5, 0x1B, 0x8B, 0x05, 
	0xF9, 0x8F, 0x3F, 0x3C, 0xDA, 0x42, 0x2F, 0x03, 0x77, 0xE0, 0xC0, 0xA0, 0x47, 0x00, 0x8E, 0xF8, 
	0xF7, 0x08, 0x07, 0x7F, 0x8E, 0x0B, 0x16, 0xDA, 0x87, 0x71, 0x59, 0xA6, 0x72, 0x9F, 0x72, 0x6B, 
	0x45, 0xF1, 0x2C, 0xE6, 0xE1, 0x0A, 0x70, 0x7C, 0xFC, 0x32, 0x64, 0x89, 0x4E, 0x56, 0x79, 0xAA, 
	0x40, 0xBA, 0xAC, 0xCA, 0xCC, 0x6E, 0xFF, 0x7F, 0xFC, 0x4F, 0x2C, 0xE4, 0xDD, 0xDC, 0x99, 0xAE, 
	0xE8, 0x79, 0x00, 0x75, 0x49, 0x08, 0xE4, 0xE2, 0xA5, 0x91, 0xE7 };

#define ran_f_state 0x84U // Size: XorShift1024* 64 state size.

// Bootstrap/Integral Function (RAN_F_RAND - opcode 0x9216): XorShift1024* 64 generate.
#define ran_f_rand_key ef5ff0e064ccf36c
#define ran_f_rand_size a64529e1a741dfcd
#define ran_f_rand_crc bcd0d8148f89b263
#define ran_f_rand_data d824c844db42d0b8
static uint64_t ran_f_rand_key = UINT64_C(0xFDF2A5A67F78067);
static uint64_t ran_f_rand_size = UINT64_C(0x53);
static uint64_t ran_f_rand_crc = UINT64_C(0x76B975D43513BB53);
static uint8_t ran_f_rand_data[] = { 
	0x1B, 0xEA, 0x32, 0x4B, 0x4F, 0xC0, 0x7B, 0xF8, 0xAE, 0xC4, 0xFE, 0x30, 0x6D, 0x8F, 0x29, 0x57, 0x3A, 
	0xAA, 0x92, 0x34, 0x9C, 0x97, 0x5C, 0xA6, 0x23, 0x33, 0xDB, 0xEE, 0xDD, 0x4A, 0x7E, 0x46, 0x63, 
	0x8C, 0x9F, 0x5D, 0xBE, 0x58, 0x50, 0x8F, 0xD1, 0x9F, 0xEC, 0x89, 0x51, 0x5D, 0x60, 0xE5, 0xAF, 
	0x5D, 0x22, 0xBD, 0xEE, 0xD8, 0x28, 0x0E, 0xD2, 0x75, 0xEA, 0xA6, 0x5F, 0x8B, 0x6A, 0x7E, 0xD1, 
	0xEA, 0xD4, 0x94, 0xDC, 0x21, 0x01, 0xB5, 0x9C, 0x3A, 0x2E, 0x67, 0xEC, 0x8F, 0x22, 0x97, 0xC7, 
	0xCD, 0x34 };

// Bootstrap/Integral Function (RAN_F_SEED - opcode 0xA210): XorShift1024* 64 seed.
#define ran_f_seed_key c3f50da68ea2bdd7
#define ran_f_seed_size b46c2a460613f428
#define ran_f_seed_crc fdaa1da495cfeaf1
#define ran_f_seed_data d93dbb6dc54b3161
static uint64_t ran_f_seed_key = UINT64_C(0x302F3224C4D06F40);
static uint64_t ran_f_seed_size = UINT64_C(0x7D);
static uint64_t ran_f_seed_crc = UINT64_C(0xD81D2E99E490AFC2);
static uint8_t ran_f_seed_data[] = { 
	0xA2, 0xF5, 0x3C, 0x92, 0xA7, 0xFE, 0xFB, 0x35, 0x23, 0xDC, 0x4F, 0x77, 0xF1, 0x99, 0x54, 0x6A, 0x64, 
	0xA9, 0x50, 0xDD, 0x04, 0x6B, 0x03, 0xDE, 0xA7, 0x9C, 0x99, 0x76, 0x01, 0x61, 0x9D, 0xCF, 0x17, 
	0x64, 0x81, 0x05, 0x75, 0x5A, 0x97, 0x11, 0x01, 0x2F, 0x36, 0x6E, 0xB8, 0x98, 0xCB, 0xD5, 0xFF, 
	0x5E, 0x62, 0xE2, 0x1E, 0x6B, 0x3A, 0xD5, 0x7A, 0xFD, 0x8C, 0x06, 0xB3, 0x47, 0x03, 0x6F, 0x89, 
	0x32, 0x6F, 0x56, 0x8E, 0x4C, 0xFC, 0x17, 0xB9, 0x6F, 0xD4, 0x58, 0xE2, 0x48, 0x05, 0xAA, 0x56, 
	0x6A, 0xB5, 0x4C, 0x10, 0x46, 0x63, 0x7E, 0x3F, 0x55, 0x92, 0xE6, 0xE6, 0x32, 0x4A, 0xF1, 0x77, 
	0x81, 0x04, 0x01, 0xA5, 0x08, 0xC4, 0xA6, 0x22, 0x86, 0x3A, 0x58, 0x6D, 0x34, 0x3D, 0x89, 0x88, 
	0xCD, 0x3D, 0xB1, 0xCF, 0x14, 0xE2, 0xFF, 0x14, 0xD3, 0xFC, 0xF6, 0xFB };

#define ran_g_state 0x10U // Size: Modified PCG 64 state size.

// Bootstrap/Integral Function (RAN_G_RAND - opcode 0x65D2): Modified PCG 64 generate.
#define ran_g_rand_key e7369688235cc940
#define ran_g_rand_size e6d2512ff1561848
#define ran_g_rand_crc febc585579365d91
#define ran_g_rand_data eea254d7472c4639
static uint64_t ran_g_rand_key = UINT64_C(0xF725217E4E0818F0);
static uint64_t ran_g_rand_size = UINT64_C(0x2EF);
static uint64_t ran_g_rand_crc = UINT64_C(0xBED01A63F4D26B73);
static uint8_t ran_g_rand_data[] = { 
	0xFF, 0x6E, 0xD1, 0xBB, 0x27, 0x8A, 0xC1, 0x71, 0xD7, 0x3E, 0xD4, 0x50, 0xC5, 0x1A, 0xA6, 0x94, 0xF7, 
	0x99, 0x63, 0x28, 0x80, 0x53, 0x3A, 0x5B, 0x4D, 0x83, 0x4B, 0x57, 0x9D, 0x02, 0x77, 0xE4, 0x4F, 
	0x75, 0x4D, 0xFF, 0xA4, 0x92, 0xF5, 0xD5, 0x05, 0x9E, 0x01, 0x53, 0xDE, 0x70, 0xAD, 0xF9, 0x32, 
	0x3A, 0x95, 0x8D, 0x24, 0xA2, 0xBD, 0xAD, 0x23, 0xAF, 0xDD, 0x65, 0x18, 0x55, 0x84, 0x05, 0xA8, 
	0xBE, 0x48, 0xCD, 0xF4, 0xFA, 0x95, 0xE3, 0x03, 0xC4, 0xCE, 0x55, 0xE6, 0x27, 0xB7, 0x37, 0xAF, 
	0xD2, 0x5E, 0xF6, 0x63, 0xE5, 0x8B, 0x64, 0xEB, 0xC4, 0x0A, 0x7F, 0xBB, 0x70, 0xCF, 0xAC, 0xD7, 
	0x2C, 0x9D, 0x1F, 0x1D, 0x59, 0x9E, 0xBA, 0xF2, 0x40, 0x92, 0x8F, 0x99, 0x56, 0x71, 0x96, 0x95, 
	0x94, 0x58, 0x1A, 0xD4, 0xA3, 0x92, 0x97, 0xF1, 0xCA, 0xF4, 0x11, 0x65, 0xA9, 0xB3, 0x6A, 0xC1, 
	0x22, 0x52, 0xC8, 0x0F, 0x72, 0x8A, 0x0C, 0x7D, 0x24, 0xBA, 0xF0, 0x43, 0xAD, 0xDD, 0x2E, 0x9F, 
	0xDF, 0x8E, 0xEF, 0xBC, 0x75, 0x2D, 0x9D, 0x02, 0xE3, 0x27, 0x57, 0x65, 0x9C, 0xBD, 0xAB, 0xDB, 
	0x1B, 0xFB, 0xEE, 0xE2, 0x8B, 0x35, 0x37, 0x47, 0x2A, 0x7F, 0xD5, 0x85, 0x45, 0x82, 0x16, 0xB2, 
	0x7F, 0x9C, 0x87, 0x05, 0x63, 0x36, 0x4F, 0x82, 0xD3, 0x49, 0x04, 0x74, 0x28, 0x03, 0x8A, 0xE5, 
	0x8B, 0xB2, 0xC0, 0xAD, 0xF0, 0xFE, 0x35, 0x7D, 0x40, 0x02, 0x38, 0xB8, 0x28, 0xB1, 0x09, 0xF8, 
	0x54, 0x94, 0x36, 0xF5, 0x2A, 0x86, 0x2F, 0xF1, 0x96, 0xF0, 0x67, 0xAB, 0xEB, 0x8C, 0xA4, 0xAF, 
	0x5C, 0x00, 0x5C, 0x2C, 0x16, 0x9A, 0x07, 0x02, 0x4A, 0x1F, 0x1F, 0x00, 0x10, 0x92, 0xB5, 0x4D, 
	0x99, 0x02, 0x42, 0xB5, 0xF4, 0x9F, 0x2B, 0x7E, 0x52, 0x75, 0xAA, 0x6E, 0x27, 0x17, 0xBF, 0x60, 
	0xCF, 0x35, 0x46, 0x71, 0xF5, 0x42, 0x10, 0x07, 0xF8, 0xDA, 0x3C, 0x86, 0x26, 0x9A, 0x62, 0x8F, 
	0xBE, 0x94, 0xCC, 0x99, 0xA9, 0x17, 0xBB, 0xF5, 0xFA, 0x2E, 0x63, 0x75, 0xD4, 0xA3, 0xD9, 0x77, 
	0x0E, 0x79, 0x72, 0xC9, 0xC7, 0xCD, 0x52, 0x2F, 0x42, 0x4D, 0x8B, 0xDB, 0x85, 0xD7, 0xCB, 0x4E, 
	0xA1, 0x84, 0x25, 0xE1, 0x19, 0x12, 0xCA, 0xE5, 0x25, 0x1C, 0x32, 0x24, 0xCB, 0x1F, 0x53, 0xDE, 
	0x18, 0xB3, 0x22, 0xFA, 0xE3, 0xF1, 0x8B, 0xFE, 0x2F, 0x90, 0x6B, 0xBD, 0x01, 0x49, 0x12, 0x3D, 
	0x36, 0x64, 0x5E, 0x00, 0x88, 0xD9, 0x93, 0x5E, 0xBB, 0x8F, 0xE8, 0x12, 0xD5, 0x64, 0x5F, 0x48, 
	0xF9, 0xBC, 0x9B, 0x22, 0x76, 0xFA, 0x07, 0x39, 0x9D, 0xDC, 0x2B, 0xAF, 0xCC, 0xF9, 0x53, 0xE0, 
	0x89, 0x58, 0xFF, 0xA1, 0x47, 0x36, 0x9D, 0xA4, 0xE7, 0x16, 0x0A, 0x4F, 0xA2, 0x05, 0x5B, 0x46, 
	0x36, 0x22, 0xBD, 0x8F, 0x65, 0x42, 0x72, 0xF6, 0x0E, 0xBC, 0x53, 0xFD, 0xD8, 0x3C, 0xE6, 0xB0, 
	0xBA, 0x2C, 0x03, 0x08, 0x78, 0x3A, 0x7F, 0xD9, 0x64, 0x49, 0x82, 0xD8, 0xAF, 0x6D, 0xB0, 0xBB, 
	0x45, 0x5B, 0x62, 0x48, 0x21, 0x57, 0x9C, 0x39, 0x8F, 0x16, 0x54, 0x53, 0x2F, 0xBA, 0xC8, 0x07, 
	0x14, 0xD8, 0x99, 0x7F, 0xE8, 0x42, 0x74, 0x2B, 0x38, 0xFF, 0x03, 0x0B, 0x78, 0x01, 0xC1, 0x51, 
	0x56, 0x10, 0xFB, 0xCA, 0x6D, 0x71, 0x43, 0x24, 0x2A, 0x38, 0xA7, 0x33, 0xCE, 0x97, 0x91, 0x8A, 
	0xAC, 0x9F, 0xCA, 0x24, 0x52, 0x85, 0x72, 0x13, 0x9D, 0x13, 0x31, 0x30, 0x8D, 0xE0, 0x77, 0xD0, 
	0xFA, 0x0C, 0xC9, 0xE8, 0x5F, 0xA4, 0xD1, 0x27, 0x78, 0x43, 0xC8, 0x82, 0xBA, 0x46, 0x94, 0xFE, 
	0x74, 0x27, 0xEF, 0xD0, 0xA9, 0xD8, 0x2B, 0x1A, 0xF5, 0xDE, 0xF2, 0x87, 0xEA, 0x26, 0x4B, 0x5A, 
	0xD4, 0x6D, 0x13, 0xC2, 0x12, 0x91, 0xFA, 0x5A, 0x08, 0x8B, 0x28, 0x03, 0x0A, 0xF0, 0xFE, 0x97, 
	0x4A, 0x62, 0xFD, 0x12, 0xB9, 0x5A, 0xFC, 0xF3, 0x36, 0xEC, 0xF2, 0x2B, 0x3D, 0x22, 0x89, 0xB5, 
	0x9C, 0x04, 0x72, 0x97, 0xED, 0xF6, 0x6E, 0x0F, 0xB4, 0xC4, 0x26, 0xB8, 0x8F, 0xF4, 0xB5, 0xB5, 
	0x00, 0xA9, 0x2E, 0x72, 0x65, 0xF7, 0xCB, 0xD8, 0x84, 0x3C, 0x97, 0x31, 0x83, 0xC2, 0xA1, 0xA1, 
	0xEF, 0x5A, 0x97, 0x7D, 0xBE, 0x1C, 0xA3, 0xAE, 0x03, 0x1B, 0xD0, 0x6D, 0xF1, 0xAF, 0x5B, 0x74, 
	0xB6, 0xFD, 0xAA, 0x07, 0x0E, 0x3A, 0xCC, 0x8B, 0xE7, 0x6C, 0x64, 0x7F, 0xEB, 0xA3, 0x1C, 0x84, 
	0xFF, 0x5F, 0x26, 0x44, 0x9E, 0x78, 0xDA, 0x9B, 0x75, 0x9D, 0x26, 0xC7, 0x0B, 0x46, 0x58, 0xFB, 
	0x74, 0xF3, 0xBB, 0xE8, 0x41, 0x19, 0xFB, 0xFE, 0xF0, 0x2A, 0x85, 0x53, 0x4D, 0xD0, 0x61, 0xB5, 
	0xCC, 0x55, 0x31, 0x3B, 0x11, 0x15, 0x39, 0x82, 0xC8, 0x8D, 0xEA, 0x1F, 0xAF, 0x16, 0x7B, 0x6B, 
	0x57, 0x26, 0x00, 0xC5, 0x28, 0x16, 0xCA, 0x70, 0xC7, 0x8A, 0x9A, 0xF3, 0xEF, 0xE9, 0xAF, 0x8B, 
	0x28, 0x58, 0x75, 0x6F, 0xC5, 0xA6, 0xB8, 0x11, 0xB7, 0xD1, 0x1A, 0x59, 0x53, 0x0C, 0xEF, 0xD9, 
	0x98, 0x4A, 0xD6, 0x56, 0xB0, 0x70, 0x46, 0x62, 0x20, 0x10, 0xBA, 0x66, 0x61, 0x4B, 0x6D, 0xE4, 
	0xE6, 0xDE, 0x35, 0xF8, 0x32, 0xE2, 0x72, 0x1C, 0x05, 0x1A, 0x98, 0xA3, 0x81, 0x9B, 0x50, 0xBF, 
	0x60, 0x1B, 0xDF, 0x8E, 0xF7, 0xC2, 0xAD, 0x67, 0x04, 0xCC, 0x6A, 0x3F, 0x73, 0x61, 0xAB, 0x13, 
	0x6D, 0x03, 0x5D, 0x55, 0x48, 0xC4, 0xB2, 0xAF, 0x42, 0xF5, 0x9E, 0xD6, 0x7F, 0x57 };

// Bootstrap/Integral Function (RAN_G_SEED - opcode 0xF6CB): Modified PCG 64 seed.
#define ran_g_seed_key da076f00d4cbcfeb
#define ran_g_seed_size e765a26abc807b00
#define ran_g_seed_crc f4813fc139222100
#define ran_g_seed_data d87ad6800bed63d7
static uint64_t ran_g_seed_key = UINT64_C(0xCFD3817BC185C068);
static uint64_t ran_g_seed_size = UINT64_C(0x2EC);
static uint64_t ran_g_seed_crc = UINT64_C(0x52A9FF5F768199AB);
static uint8_t ran_g_seed_data[] = { 
	0xC0, 0x92, 0xDF, 0x8D, 0x56, 0x41, 0x4F, 0x50, 0x6D, 0xEA, 0x22, 0xA5, 0x3A, 0x00, 0x93, 0x7F, 0xB0, 
	0x1D, 0x58, 0xFD, 0xE4, 0x84, 0x49, 0xF5, 0x9F, 0x5E, 0x87, 0x0F, 0x53, 0x02, 0xD4, 0x47, 0xE4, 
	0xB9, 0xDB, 0x5D, 0x63, 0xD1, 0x51, 0xF8, 0xEF, 0xDE, 0xDC, 0xE3, 0xBC, 0x33, 0xC3, 0x2D, 0xBC, 
	0x58, 0xCB, 0xD0, 0x8F, 0x80, 0x16, 0x0C, 0x81, 0xA3, 0x27, 0x09, 0x5A, 0xCB, 0x10, 0xBC, 0xFF, 
	0x65, 0xE0, 0x28, 0xB9, 0xFB, 0xCD, 0xC0, 0x76, 0xFA, 0x91, 0x12, 0x2B, 0x6F, 0x4E, 0xE6, 0x9F, 
	0xCE, 0x5E, 0x93, 0xF3, 0x94, 0xEB, 0x10, 0x74, 0x58, 0xB1, 0x74, 0x52, 0xAB, 0x13, 0x75, 0x0D, 
	0x3E, 0xCE, 0xD7, 0x70, 0x7E, 0xC2, 0xF8, 0xC5, 0x4C, 0x55, 0x96, 0x9B, 0x83, 0xBC, 0x8A, 0xC7, 
	0x50, 0x1A, 0xB2, 0x27, 0x57, 0xF7, 0xCC, 0x36, 0x70, 0xE9, 0x19, 0x9B, 0x0A, 0x10, 0x37, 0xDD, 
	0x81, 0xDE, 0xCA, 0x35, 0xD2, 0x1E, 0xAE, 0xB5, 0xFB, 0x47, 0xC0, 0x5B, 0xF9, 0xFE, 0x60, 0xC3, 
	0xFE, 0x8C, 0xBF, 0x49, 0x1E, 0x1D, 0xED, 0x1C, 0xC6, 0xBC, 0x69, 0xE2, 0xC8, 0x4E, 0xA3, 0x50, 
	0x0F, 0x64, 0x15, 0x53, 0x17, 0xA3, 0x15, 0x14, 0x9C, 0x3E, 0x15, 0xBD, 0xDD, 0x8F, 0xAA, 0x38, 
	0x88, 0x44, 0x4E, 0x7E, 0xCB, 0x8A, 0xC6, 0x19, 0x5E, 0xE3, 0xA2, 0x5D, 0xA7, 0xB8, 0x5C, 0x82, 
	0xDA, 0xA3, 0x9F, 0xA0, 0x93, 0x39, 0xA9, 0xF0, 0xA3, 0x3D, 0x64, 0x89, 0x32, 0x93, 0x82, 0xB4, 
	0xE4, 0x49, 0x10, 0x61, 0x21, 0xF7, 0xEC, 0x5E, 0xDD, 0x1B, 0x03, 0x71, 0xD4, 0xF8, 0x95, 0x9C, 
	0xB1, 0xE1, 0x53, 0x7D, 0x21, 0x7E, 0x7A, 0xCE, 0xA4, 0x59, 0x17, 0x0D, 0xE9, 0xB2, 0x93, 0x12, 
	0xFB, 0xF4, 0x08, 0x0D, 0x5A, 0x5F, 0x9E, 0xCE, 0xDA, 0xA2, 0x48, 0xC4, 0x03, 0xEA, 0x07, 0x7B, 
	0x67, 0x79, 0x02, 0xFA, 0x68, 0x8E, 0x89, 0x4C, 0x0F, 0xFC, 0xB6, 0x26, 0xC8, 0x03, 0xEC, 0xB8, 
	0x0E, 0xD0, 0xDB, 0x9D, 0x9E, 0xE8, 0xC2, 0xF3, 0xB4, 0x09, 0x12, 0x89, 0xFC, 0xF7, 0xA8, 0xFA, 
	0x28, 0x70, 0x88, 0x34, 0xCE, 0x5F, 0x31, 0x65, 0x07, 0xA4, 0xEC, 0x6C, 0x26, 0x84, 0xCC, 0xEB, 
	0x38, 0xCA, 0x66, 0x63, 0x0C, 0xEB, 0x28, 0xD9, 0x2D, 0xB0, 0xBC, 0xD0, 0x68, 0x29, 0x9D, 0xEF, 
	0x05, 0x0F, 0x5B, 0x82, 0x09, 0x5D, 0xF1, 0x86, 0xB3, 0x05, 0xC9, 0xE8, 0xEF, 0xCF, 0x72, 0xE9, 
	0x31, 0xA7, 0x78, 0xB7, 0x9B, 0x94, 0x36, 0xB1, 0x96, 0xEB, 0xA9, 0x49, 0xFE, 0x23, 0x0D, 0x9F, 
	0x51, 0xCC, 0xA8, 0x4A, 0xA3, 0x22, 0xFC, 0x5D, 0xE0, 0x89, 0x8E, 0x16, 0x79, 0x42, 0x89, 0x00, 
	0xCB, 0x47, 0xC5, 0xAE, 0x93, 0x84, 0x1B, 0x71, 0x07, 0xB7, 0x2F, 0x50, 0x17, 0xDB, 0x90, 0xBB, 
	0x9D, 0x99, 0x76, 0xFF, 0xB1, 0x89, 0xFC, 0xA4, 0x4E, 0xBA, 0x05, 0x58, 0xAD, 0x0C, 0x2F, 0xD6, 
	0x31, 0x0C, 0xE7, 0x84, 0x8A, 0x03, 0x75, 0x98, 0x3C, 0x7B, 0x25, 0x9A, 0xB1, 0xCB, 0xAA, 0xA1, 
	0xA2, 0xD1, 0xC3, 0x80, 0xF0, 0x18, 0x89, 0x77, 0xA0, 0x60, 0x17, 0xA9, 0x6F, 0x6D, 0x00, 0x99, 
	0x99, 0x66, 0x8A, 0xE3, 0x9B, 0x6A, 0xBD, 0x2C, 0x72, 0x65, 0x4C, 0x5D, 0x7D, 0x12, 0x6C, 0x26, 
	0xEB, 0x14, 0xFA, 0xF7, 0xB0, 0x3C, 0x84, 0xE1, 0x0E, 0x1C, 0xD3, 0xA1, 0xE0, 0xE8, 0x1F, 0x8A, 
	0x4D, 0x2A, 0x75, 0x0E, 0x4F, 0xD9, 0xEF, 0xA0, 0xD4, 0x99, 0x70, 0x68, 0xA3, 0x8E, 0x6A, 0x94, 
	0x79, 0x1D, 0x54, 0x8C, 0x9A, 0x4B, 0xB0, 0xBE, 0x69, 0x08, 0xA1, 0xF4, 0x10, 0x7B, 0x71, 0x9E, 
	0xCF, 0xC3, 0x97, 0x53, 0x89, 0x08, 0xA1, 0xEF, 0x82, 0x97, 0x83, 0x42, 0xA7, 0xEE, 0x92, 0x85, 
	0xBA, 0xD7, 0xE3, 0x0A, 0x73, 0x56, 0xD5, 0x46, 0x52, 0xB5, 0xF1, 0x83, 0x0E, 0x95, 0xB8, 0x07, 
	0x61, 0x6B, 0x9E, 0xC0, 0xDC, 0xB1, 0x2E, 0x02, 0x73, 0x34, 0x3A, 0xEF, 0xBF, 0x7A, 0x32, 0x95, 
	0x0D, 0xF3, 0xCC, 0xA7, 0x9A, 0xB6, 0x81, 0xF7, 0x0D, 0x5E, 0x06, 0xC5, 0x69, 0xC6, 0x48, 0xE9, 
	0x3A, 0xEB, 0xE9, 0xF2, 0xFC, 0xB7, 0x36, 0x72, 0x13, 0xC8, 0x8E, 0xE6, 0xC8, 0x7C, 0xDA, 0xC7, 
	0xDA, 0xA6, 0xC8, 0x09, 0xE5, 0xD9, 0x54, 0x43, 0xB5, 0xCA, 0xA7, 0xF5, 0x69, 0x56, 0x73, 0xED, 
	0x9B, 0xB6, 0x60, 0xCA, 0xDD, 0xB9, 0xC8, 0x22, 0x19, 0xF5, 0xF3, 0xA9, 0x6E, 0xD0, 0xBA, 0x3E, 
	0x02, 0x91, 0x77, 0x27, 0xB6, 0xC6, 0x33, 0x75, 0xA0, 0xC3, 0x6E, 0x06, 0xB4, 0x9C, 0xB1, 0xDA, 
	0xD1, 0xF1, 0xD5, 0x46, 0x83, 0x5E, 0xF7, 0x29, 0xA2, 0x09, 0x4D, 0xFD, 0x67, 0xC7, 0x5E, 0xD5, 
	0xB4, 0xBA, 0x0C, 0x32, 0x7B, 0x69, 0x30, 0xC0, 0xAA, 0x70, 0x5D, 0x25, 0x7B, 0xCD, 0x31, 0x22, 
	0xFE, 0xE2, 0x69, 0x19, 0x62, 0x5F, 0x87, 0xBE, 0xF7, 0x68, 0xA4, 0x29, 0x17, 0x10, 0xD4, 0x17, 
	0x81, 0xFD, 0x00, 0xDF, 0xA4, 0xC4, 0x1C, 0x2E, 0xE6, 0xEA, 0xF1, 0xC4, 0xBE, 0x50, 0xE5, 0x15, 
	0x20, 0x39, 0x41, 0x0F, 0xED, 0x79, 0xF8, 0x2E, 0xB9, 0xE4, 0x59, 0x14, 0x74, 0x0A, 0xD1, 0x9D, 
	0x1F, 0x7A, 0x72, 0x2F, 0x0A, 0xD1, 0x8C, 0xCD, 0x84, 0x4C, 0x83, 0x28, 0xA5, 0x5E, 0x47, 0xB4, 
	0x5D, 0x12, 0xD2, 0xAB, 0xD0, 0x61, 0x38, 0xCE, 0x32, 0x7F, 0x91, 0x96, 0xEC, 0x24, 0x80, 0x69, 
	0x2C, 0xE6, 0x5D, 0xB1, 0x15, 0x12, 0x54, 0x38, 0xD6, 0x33, 0x7F };

