// Function: Tests for rdrand support: sec_g64_f.
#define HRDRND64 da757901
#define HRDRND64_KEY (0xDEE11617U)
static uint8_t HRDRND64[] = { 0xF4, 0x48, 0x59, 0xA9, 0x1C, 0x44, 0x49, 0xF6, 0xAF, 0x0D, 0xD2, 0xC0, 0x81, 0xFE, 0xEF, 0x64, 0x52, 0x30, 0x94, 0x71, 0xDF, 0xC9, 0x45, 0xFA, 0x4B, 0xCA, 0xF3, 0x22,  };

// Function: Read rand via rdrand: sec_g64_f.
#define RDRAND64 f836667a
#define RDRAND64_KEY (0x9ED543B4U)
static uint8_t RDRAND64[] = { 0xC8, 0x5A, 0x9E, 0xE6, 0xF6, 0x03, 0x94,  };

// Function: Multiply using Schrage's method: sec_sch_t;
#define SHRGML64 b423f40c
#define SHRGML64_KEY (0xF64FC7A4U)
static uint8_t SHRGML64[] = { 0xF8, 0x4C, 0x55, 0x22, 0xBD, 0x21, 0x8E, 0xF5, 0xED, 0x3C, 0x4C, 0x52, 0xD7, 0x98, 0x90, 0x38, 0x50, 0xB4, 0xCD, 0x85, 0x79, 0xC4, 0x55, 0x5A, 0xFA, 0x64, 0x60, 0xFA, 0xAB, 0x1A, 0x41, 0x31, 0x03, 0x0E, 0x5B, 0x65, 0xA8, 0x66, 0x05, 0xA9, 0xB9, 0x39, 0x95, 0x66, 0xB2, 0x4A, 0x55, 0x5A, 0x39, 0xD9, 0x18, 0x1D, 0x17, 0x31, 0xF7, 0x1B, 0x14, 0xF6, 0xE7, 0x36, 0x4F, 0x61, 0x9B, 0xAB, 0x20, 0x2A, 0x4D, 0xFF, 0x1E, 0x11, 0xC8, 0x5E, 0x85, 0x29, 0x73, 0x98, 0x16, 0xC6, 0x46, 0x8B, 0x27, 0x19, 0x8F, 0x85, 0xF4, 0x47, 0x3E, 0xE6, 0x24, 0x64, 0x6E, 0x40, 0x56, 0xB3, 0xFC, 0x7D, 0xC0, 0xB1, 0x99, 0xA1, 0xE2, 0xE7, 0x99, 0xF5, 0x52, 0x76, 0x82, 0x69, 0x5B, 0xDA, 0x6A, 0x45, 0xFC, 0x1C, 0x9F, 0xEC, 0xDC, 0x50, 0xD0, 0x7A, 0x37, 0x12, 0x7D, 0xFE, 0x73, 0xBF, 0xC4, 0x9D, 0x43, 0xCC, 0xB0, 0xE4, 0xEB, 0xE3, 0xD5, 0xFC, 0x95, 0x29, 0x46, 0x37, 0xFE, 0xA3, 0x17, 0xA1, 0x35, 0x8C, 0x4E, 0x7F, 0x1D, 0xCA, 0x30, 0x14, 0xD9, 0x2A, 0x47, 0x1B, 0x29, 0x71, 0xBE, 0x23, 0x1D, 0xA6, 0x87, 0x37, 0x1F, 0xFF, 0x9E, 0xB5, 0xD3, 0xE9, 0xB5, 0x5B, 0xFF, 0x42, 0xF8, 0xFF, 0x78, 0xFD, 0x07, 0xCA, 0xC1, 0x74, 0xD7, 0x7F, 0x50, 0xF5, 0x7B, 0x58, 0x3D, 0xCE, 0x39, 0x3F, 0x5B, 0xCE, 0x6D, 0x2D, 0xCA, 0x39, 0x0B, 0xAB, 0x70, 0x60, 0x69, 0x93, 0xB2, 0xE6, 0xFA, 0xCC, 0x8F, 0x8C, 0x37, 0x2C, 0xBD, 0x0C, 0xBD, 0xAB, 0x66, 0x72, 0x7A, 0x11, 0xEB, 0x60, 0xDD, 0x89, 0xDC, 0xC3, 0x93, 0x81, 0xB0, 0x8D, 0x5E, 0x60, 0x5E, 0x86, 0x18, 0x41, 0x5A, 0xCE, 0x50, 0x1F, 0x5F, 0x46, 0xC3, 0xCE, 0xE7, 0x8A, 0xC9, 0xEF, 0x76, 0x24, 0x1E, 0x7E, 0x43, 0x5B, 0x55, 0x36, 0x5C, 0xD1, 0xAC, 0x00, 0x38, 0x31, 0x71, 0xC6, 0x66, 0xF2, 0x25, 0xD2, 0x52, 0xC5, 0x40, 0xB4, 0x18, 0x7A, 0x6D, 0x18, 0xB8, 0x2F, 0x31, 0x9F, 0xA6, 0xA5, 0xF9, 0xDE, 0x5B, 0xD4, 0x36, 0x23, 0x51, 0x50, 0x3E, 0x2C, 0xB5, 0xB4, 0x15, 0x46, 0xD1,  };

// Function: Fishman-20 64 RNG seed: sec_srs_f.
#define FS20SD64 f44f95cc
#define FS20SD64_KEY (0xBFE333B3U)
static uint8_t FS20SD64[] = { 0x5F, 0x67, 0x66, 0x49, 0xC3, 0xC9, 0x1A, 0xC8, 0x89, 0x33, 0xFF, 0xBA, 0x9C, 0x33, 0x33, 0x3F, 0x47, 0x2C, 0xE0, 0xCD, 0x0B, 0x06, 0x65, 0x2C, 0x05, 0x0D, 0x24, 0xE4, 0x26, 0x4C, 0x7D, 0xA1, 0xC6, 0x64, 0x9F, 0x6E, 0x7E, 0x74, 0xF0, 0x85, 0xE6, 0xBA, 0xCB, 0x79, 0x53, 0x77, 0x96, 0x24, 0x96, 0xB2, 0x65, 0xDA, 0xED, 0x98, 0x84, 0xAD, 0xAE, 0xDB, 0x23, 0x10, 0xFE, 0x99,  };

// Function: Fishman-20 64 RNG generate: sec_r64_f.
#define FS20RG64 e1e070dd
#define FS20RG64_KEY (0x9518D32AU)
static uint8_t FS20RG64[] = { 0xF2, 0x30, 0x0E, 0xA5, 0x19, 0xD6, 0x7D, 0xFC, 0xDB, 0x2A, 0x0B, 0xC6, 0x07, 0x9B, 0x6D, 0xB4, 0x21, 0x4B, 0xE2, 0x3C, 0x4F, 0xC4, 0x2A, 0x59, 0x17, 0xF5, 0x6F, 0xF2, 0x62, 0xE3, 0xE0, 0x0E, 0x9B, 0x84, 0xC0, 0xEC, 0x6E, 0xBC, 0xC0, 0xBA, 0x40, 0x0E, 0x46, 0x40, 0x66, 0x58, 0xE3, 0xE0, 0xE7, 0xC8, 0x06, 0xFD, 0xA8, 0x4C, 0x57, 0x27, 0xA3, 0xF6, 0xA6, 0xA1, 0xBB, 0xB2, 0x44, 0xB6, 0x81, 0xB6, 0x01, 0x5C, 0x3D, 0x38, 0x69, 0x70, 0x95, 0x0E, 0x47, 0xC2, 0x18, 0x55, 0x05, 0xB7, 0xF2, 0x7B, 0x42, 0xAA, 0x63, 0x69, 0xCA, 0x0C, 0x61, 0xAC, 0xA9, 0xF7, 0xBD, 0xF7, 0x6D, 0x87, 0x34, 0xD1, 0x8E, 0xF9, 0xDF, 0x04, 0xE6, 0xD5, 0x10, 0x7E, 0x2E, 0x11, 0x4D, 0xF3, 0x73, 0x13, 0x81, 0xD4, 0x84, 0x43, 0xF4, 0xAF, 0x8A, 0xCE, 0x0A, 0x87, 0x43, 0xDA, 0x1A, 0xAB, 0xB0, 0x7E, 0xDE, 0x4C, 0x76, 0x13, 0x06, 0x49, 0x95, 0xB8, 0x58, 0xA7, 0xFD, 0xD5, 0x92, 0x68, 0x2B, 0xE2, 0xB7, 0xF1, 0xFD, 0xD2, 0xD5, 0x4C, 0x39, 0x2F, 0x6C, 0x36, 0x07, 0x86, 0xCF, 0xB0, 0xAB, 0x67, 0x63, 0xE4, 0x81, 0xD8, 0x0D, 0x93, 0xE3, 0x06, 0x21, 0x60, 0xBB, 0x33, 0x5C, 0x4A, 0x70, 0x9C, 0xCB, 0xA6, 0xBF, 0xE2, 0xF0, 0xFA, 0x7A, 0xE5, 0x17, 0x0D, 0x41, 0xF1, 0xF6, 0x46, 0xD6, 0xC0, 0x21, 0x41, 0x18, 0x14, 0xA7, 0x19, 0x6B, 0x60, 0x44, 0xDA, 0x60, 0xF5, 0x0C, 0xBB, 0x86, 0x83, 0x50, 0x35, 0xF2, 0x65, 0xDF, 0x5F, 0x67, 0xF0, 0x38, 0x32, 0xCD, 0xA4, 0x98, 0x4A, 0x26, 0x0F, 0xC5, 0x6A, 0xD2, 0xE6, 0x02, 0x59, 0xFD, 0xB8, 0x7C, 0xCD, 0x70, 0xC9, 0xC3, 0x4F, 0xCB, 0x9D, 0x9A, 0xF3, 0x04, 0xC8, 0x5A, 0xB3, 0xB7, 0x29, 0x6D, 0x56, 0xCF,  };

// Function: Knuth 2002 64 with Random Bit Shift RNG seed: sec_srs_f.
#define KN02SD64 be7341f2
#define KN02SD64_KEY (0xA4F97396U)
static uint8_t KN02SD64[] = { 0xF2, 0x8E, 0x7F, 0x3C, 0x57, 0x83, 0x48, 0xC7, 0x37, 0xBE, 0x09, 0x65, 0x14, 0xB2, 0xC2, 0xE4, 0x65, 0x08, 0x57, 0x25, 0x30, 0x91, 0x4C, 0x48, 0x1F, 0xDE, 0x03, 0xDF, 0x85, 0xC0, 0x6B, 0x18, 0x51, 0xC7, 0xD3, 0xB4, 0x34, 0x4C, 0x08, 0x1B, 0x7F, 0x87, 0x67, 0x28, 0x21, 0xB2, 0x5A, 0x75, 0x6B, 0x32, 0xD4, 0x1B, 0x09, 0x1F, 0xB1, 0x5C, 0x29, 0x60, 0x8D, 0x4C, 0x2E, 0xC5, 0x22, 0x6B, 0x38, 0x6A, 0xB1, 0x0D, 0xDB, 0xCF, 0x39, 0x17, 0x9A, 0x42, 0x54, 0xA1, 0x2E, 0x38, 0x0A, 0x12, 0x79, 0xD3, 0xD6, 0xEB, 0xE7, 0x4E, 0x36, 0x21, 0xA1, 0xBF, 0x42, 0xF1, 0x37, 0x17, 0xD6, 0x00, 0x05, 0x7A, 0xA3, 0xC1, 0xDC, 0x7D, 0x83, 0xF1, 0x6F, 0x84, 0x03, 0x05, 0xFC, 0xC2, 0x1B, 0x9E, 0x82, 0xDF, 0x1F, 0x0C, 0x8C, 0x64, 0x9F, 0x31, 0x4B, 0x84, 0x14, 0xE7, 0x9A, 0xAE, 0x90, 0xC6, 0x9A, 0xDD, 0x87, 0x01, 0xCC, 0x0E, 0x18, 0x66, 0x62, 0x9C, 0xFF, 0x56, 0x16, 0x8D, 0xDE, 0x54, 0x83, 0x19, 0x79, 0xC0, 0xBA, 0xA8, 0x3A, 0x69, 0xAF, 0x98, 0xE5, 0x25, 0x6C, 0xDB, 0x70, 0x9A, 0xAE, 0xBA, 0x8C, 0x17, 0x48, 0xAB, 0x5C, 0xC7, 0x6E, 0xA4, 0x86, 0x74, 0x92, 0x06, 0x53, 0x21, 0x37, 0x3E, 0xF1, 0xC8, 0x3C, 0x14, 0x9E, 0x26, 0x2C, 0x37, 0x52, 0x54, 0x93, 0x6A, 0x85, 0xC0, 0x55, 0x06, 0xE6, 0x73, 0x7B, 0xE5, 0xDB, 0x34, 0x0D, 0xAD, 0x0B, 0xAE, 0x66, 0xD3, 0x83, 0x77, 0x38, 0x07, 0xC7, 0x3C, 0x0D, 0x03, 0x60, 0x1F, 0xF8, 0x87, 0x24, 0x94, 0xB3, 0x8E, 0x49, 0xB7, 0x95, 0x25, 0xE7, 0xFA, 0x46, 0xA7, 0xD0, 0x55, 0x62, 0xD3, 0xA5, 0xD4, 0xFD, 0x97, 0xDC, 0x44, 0x88, 0x3E, 0xD4, 0x33, 0xD3, 0x22, 0xA7, 0xA6, 0x3A, 0x15, 0xA0, 0x8D, 0xB0, 0x94, 0x93, 0x0F, 0x90, 0x92, 0x3A, 0x9E, 0x16, 0xE8, 0xC6, 0x90, 0x5D, 0x04, 0x54, 0xB7, 0x13, 0x66, 0x4E, 0x68, 0x85, 0xBD, 0x03, 0x3E, 0xC7, 0x7C, 0x7A, 0x87, 0xC7, 0x2E, 0x4D, 0x00, 0xB9, 0xA6, 0x74, 0x76, 0xB9, 0x43, 0x1C, 0xF8, 0xA7, 0x5C, 0x9C, 0xE9, 0x6E, 0x63, 0x60, 0x18, 0xA5, 0xDC, 0x2C, 0xA0, 0x86, 0x11, 0xE2, 0x3A, 0x17, 0xB5, 0xA3, 0x23, 0x2C, 0x5F, 0xC1, 0x4D, 0x57, 0x33, 0xED, 0xF0, 0x24, 0x88, 0x28, 0x35, 0x2D, 0xE6, 0x13, 0xB5, 0xB5, 0x67, 0x2B, 0x69, 0x70, 0x6A, 0xEA, 0x33, 0x4E, 0x74, 0xE1, 0x51, 0xA8, 0x91, 0x66, 0x4F, 0xC4, 0xD4, 0x9E, 0x77, 0x71, 0x3D, 0xE4, 0x22, 0x86, 0x86, 0xE2, 0x60, 0x58, 0x8F, 0x9B, 0xC8, 0xE5, 0xE9, 0xE5, 0xEE, 0x13, 0xD0, 0xAE, 0x24, 0xE8, 0x68, 0x8C, 0xB7, 0xAE, 0x4E, 0x0E, 0x3A, 0xB5, 0x10, 0x08, 0x2C, 0xCD, 0xC3, 0xF5, 0x8F, 0x0D, 0x59, 0x04, 0x73, 0xE0, 0x08, 0xC6, 0x77, 0x12, 0x34, 0x8E, 0x8E, 0xCC, 0x64, 0x50, 0x5E, 0xBA, 0x22, 0xDC, 0x45, 0x0A, 0xB3, 0x45, 0xA5, 0x68, 0xBF, 0x4D, 0xCD, 0x73, 0x3C, 0x97, 0xD2, 0x31, 0xCC, 0xE7, 0xF9, 0x8B, 0x6C, 0x53, 0x15, 0x10, 0x06, 0xBE, 0xE5, 0xCE, 0x93, 0x90, 0x00, 0xCB, 0x0A, 0xC0, 0xCD, 0x35, 0xD3, 0xFE, 0x31, 0xA7, 0x1D, 0x8C, 0x31, 0x40, 0x66, 0x7A, 0xA7, 0x60, 0xE5, 0x7A, 0xA5, 0x51, 0xB3, 0xB5, 0x96, 0x70, 0x15, 0x78, 0x21, 0x91, 0xD7, 0xAF, 0x48, 0xA4, 0xB7, 0x7F, 0xA9, 0x56, 0xEC, 0x7C, 0x9A, 0xAA, 0x07, 0x51, 0x5C, 0xF4, 0x96, 0x94, 0x28, 0x5D, 0x8E, 0xFB, 0xC5, 0x70, 0xE5, 0x71, 0x6B, 0xD6, 0x13, 0x40, 0xC2, 0x77, 0xB3, 0x16, 0x62, 0x81, 0xFD, 0x13, 0x97, 0x11, 0xBB, 0x48, 0x1D, 0x96, 0x5B, 0xF6, 0x51, 0x20, 0xD4, 0x64, 0x66, 0xB9, 0x4A, 0xBB, 0xCA, 0xF0, 0x40, 0x45, 0x57, 0x19, 0xCC, 0x58, 0x53, 0x50, 0x49, 0x82, 0x9A, 0xC4, 0x70, 0xB2, 0xA8, 0x7C, 0x7E, 0x9A, 0xE8, 0x6D, 0xA0, 0x8C, 0xA0, 0x3A, 0x2C, 0x69, 0x0F, 0x38, 0xFB, 0x14, 0x7F, 0x86, 0x36, 0x86, 0xB8, 0x10, 0xC7, 0xCC, 0x9E, 0x6C, 0x01, 0x9A, 0x59, 0x8C, 0x65, 0x90, 0x21, 0x11, 0xB7, 0x76, 0x47, 0x34, 0x5F, 0x18, 0xE3, 0xE1, 0x63, 0x9C, 0xF4, 0xB4, 0x9C, 0xDC, 0x63, 0x87, 0x5B, 0x51, 0xD8, 0x83, 0x87, 0xFE, 0xD5, 0x50, 0xE1, 0x5F, 0xB8, 0x6F, 0x7B, 0xED, 0xF0, 0x63, 0x47, 0xAA, 0x69, 0xCA, 0xD3, 0xA8, 0x0C, 0x8F, 0x83, 0x8D, 0xCD, 0xAB, 0xBA, 0x4A, 0x2C, 0x48, 0x90, 0xC5, 0x37, 0x80, 0xB4, 0xB1, 0x73, 0x3F, 0x8B, 0x67, 0x35, 0x0D, 0x47, 0x16, 0xB7, 0xBF, 0xEB, 0x66, 0x29, 0x8C, 0x9C, 0x48, 0x44, 0xBF, 0x23, 0x48, 0xA5, 0x5F, 0xFE, 0x98, 0xF5, 0xAB, 0xB0, 0x07, 0x4A, 0x1A, 0xD7, 0x65, 0xD4, 0xEE, 0xB6, 0x08, 0x31, 0xF5, 0x9C, 0x8C, 0x84, 0xD5, 0x6E, 0x02, 0xC3, 0x4C, 0x66, 0x12, 0x8F, 0x7B, 0xB3, 0x3E, 0x51, 0x9F, 0x29, 0xB1, 0x41, 0x4B, 0xE6, 0x0A, 0xAE, 0x16, 0xF0, 0xA7, 0x16, 0x79, 0x96, 0xD8, 0x5B, 0xEB, 0x71, 0xF7, 0x0A, 0xA5, 0x66, 0xD6, 0xF8, 0x0C, 0x1B, 0xE0, 0x1F, 0xE3, 0xCE, 0x62, 0xD5, 0xC5, 0x41, 0x74, 0xA6, 0x02, 0xC7, 0xE9, 0x73, 0x3E, 0x76, 0x26, 0x8E, 0xB9, 0xDB, 0x37, 0x81, 0x8E, 0xAA, 0xDC, 0xB4, 0x9E, 0x30, 0xC2, 0x78, 0x27, 0x95, 0xDB, 0xB0, 0x6C, 0x61, 0x1B, 0x76, 0x32, 0x25, 0xB5, 0xAD, 0x09, 0x6D, 0xA0, 0x68, 0xE5, 0x48, 0x33, 0xEE, 0xD3, 0x53, 0x9D, 0x6C, 0x01, 0xE2, 0xC2, 0xD5, 0x2A, 0x6E, 0xCE, 0xBF, 0xB9, 0x3A, 0x09, 0x90, 0x1C, 0xA8, 0x12, 0x23, 0x3D, 0x0F, 0x08, 0xB0, 0xE6, 0xEB, 0x20, 0x73, 0xF7, 0x69, 0x1B, 0xA3, 0xDB, 0xF2, 0xAC, 0x93, 0x47, 0x94, 0xD2, 0xAA, 0x2F, 0x76, 0x71, 0x5D, 0xAA, 0x9F, 0xF1, 0xC1, 0x63, 0x08, 0x7E, 0x33, 0x66, 0xDE, 0x7A, 0x5B, 0xC9, 0x62, 0x01, 0x7A, 0xE8, 0x2A, 0xC7, 0x43, 0xA6, 0x7A, 0x6F, 0xF5, 0xBE, 0xB5, 0xEB, 0xFB, 0x73, 0xF3, 0x21, 0x37, 0xAD, 0xEF, 0x11, 0x1A, 0xC6, 0xA7, 0x38, 0x87, 0xA9, 0x2C, 0xD3, 0x7D, 0xAB, 0xFE, 0xDA, 0x3B, 0x67, 0xD4, 0xF5, 0x64, 0xEC, 0xB4, 0xE1, 0xA0, 0xD4, 0x60, 0xCF, 0x61, 0xD0, 0x20, 0xEE, 0x55, 0x93, 0x0D, 0xDE, 0xE1, 0xE8, 0xD0, 0xB7, 0x7A, 0xB7, 0xA4, 0xC7, 0x5E, 0xC9, 0xE5, 0x8F, 0x00, 0x9F, 0xC0, 0xA1, 0x75, 0xFD,  };

// Function: Knuth 2002 64 with Random Bit Shift RNG generate: sec_r64_f.
#define KN02RG64 a479392c
#define KN02RG64_KEY (0xC09CC88BU)
static uint8_t KN02RG64[] = { 0x43, 0x0D, 0x00, 0x79, 0xD8, 0x50, 0x03, 0x24, 0xA0, 0xEB, 0xFF, 0x9B, 0x5A, 0x6F, 0x63, 0x41, 0xA1, 0x84, 0xCC, 0x64, 0xD6, 0x27, 0x9C, 0xE7, 0x13, 0x95, 0xAD, 0x48, 0x08, 0xEF, 0x69, 0xF5, 0xEA, 0xC7, 0x54, 0x04, 0xEF, 0x71, 0x62, 0x73, 0xA6, 0x6B, 0x82, 0x64, 0x0B, 0xA1, 0x21, 0x40, 0xE0, 0x87, 0x98, 0x09, 0xD3, 0x2C, 0x4E, 0x82, 0x1D, 0xD9, 0xD4, 0xFE, 0xEA, 0x61, 0xCA, 0x60, 0xC3, 0x2D, 0x53, 0x8F, 0x7C, 0x90, 0x06, 0x9A, 0x05, 0x51, 0x39, 0x83, 0x0F, 0x54, 0xB8, 0xCA, 0x43, 0xD8, 0x18, 0x44, 0xC8, 0xDB, 0x59, 0x50, 0x95, 0x12, 0x1D, 0x46, 0x3F, 0xC1, 0x57, 0xD9, 0x03, 0x2A, 0xE0, 0x0B, 0x81, 0x6E, 0x5D, 0x84, 0x3E, 0x17, 0x57, 0x6E, 0xF5, 0xB8, 0x8A, 0x35, 0xC6, 0xD0, 0x90, 0x28, 0xEC, 0x0B, 0x82, 0x87, 0x00, 0x9E, 0xE0, 0x01, 0x4A, 0x6B, 0x3A, 0xBB, 0x23, 0x80, 0xC7, 0xA8, 0x6C, 0xD7, 0x68, 0x03, 0x95, 0x41, 0x37, 0x34, 0x88, 0x3E, 0x7F, 0x0E, 0x13, 0x7B, 0xDA, 0xB5, 0xA4, 0xCA, 0x2D, 0x69, 0x03, 0xFC, 0xD1, 0x4B, 0x65, 0x85, 0xD0, 0x17, 0x92, 0xD1, 0x80, 0x33, 0xDE, 0xBB, 0xDE, 0x06, 0xCF, 0x41, 0x26, 0x31, 0x26, 0x03, 0x73, 0xF5, 0xD1, 0x00, 0x8F, 0xE2, 0x6A, 0x53, 0x62, 0x13, 0x1C, 0xD9, 0xD3, 0x82, 0x9D, 0x90, 0x60, 0x22, 0x91, 0x21, 0xA4, 0x48, 0xB1, 0x46, 0xA3, 0x56, 0x89, 0x09, 0x5D, 0xD9, 0x58, 0x74, 0xD7, 0x43, 0xDF, 0xF3, 0xB5, 0x72, 0xB1, 0x71, 0x34, 0x7C, 0x30, 0x6C, 0xE1, 0x51, 0x91, 0xF2, 0xF9, 0xF3, 0xEB, 0x20, 0xF1, 0x90, 0x39, 0x34, 0x19, 0x54, 0xD5, 0xF1, 0xE2, 0x3A, 0xFE, 0x04, 0xFD, 0x7E, 0xAA, 0x88, 0x55, 0x5C, 0xBE, 0x5C, 0x20, 0xEF, 0x7D, 0x13, 0xC8, 0xE4, 0xFE, 0x0A, 0x33, 0x45, 0x1E, 0x97, 0xAB, 0x0A, 0x6B, 0x2C, 0x37, 0x04, 0x16, 0xE7, 0xFB, 0x12, 0xE4, 0x92, 0xE3, 0xA7, 0x56, 0x32, 0x12, 0x5A, 0x12, 0x4C, 0xF9, 0x10, 0x27, 0x01, 0x68, 0x00, 0x1A, 0x3B, 0x22, 0x6F, 0x2F, 0xD5, 0x98, 0x21, 0xC9, 0x61, 0x5E, 0x0F, 0x0C, 0x84, 0x12, 0x26, 0xE7, 0x62, 0x11, 0x9C, 0x57, 0xC8, 0xDC, 0x77, 0xF2, 0x8C, 0x6F, 0xC8, 0xFD, 0x04, 0xAD, 0x55, 0x20, 0x9A, 0xC3, 0x32, 0xBF, 0xB4, 0x66, 0x39, 0x61, 0xBD, 0x6C, 0x0A, 0x2F, 0x8A, 0xF2, 0x56, 0xA3, 0x84, 0x92, 0xD2, 0xB8, 0xBD, 0xE6, 0xFA, 0x6C, 0x96, 0x5B, 0xD5, 0x85, 0x43, 0x6A, 0x8F, 0xE8, 0x99, 0x2F, 0xEF, 0xDE, 0xB7, 0x3C, 0x61, 0x23, 0x56, 0x3F, 0x72, 0x42, 0x16, 0x36, 0x17, 0x30, 0x32, 0x1D, 0x92, 0xA2, 0x2F, 0xB6, 0x6A, 0x78, 0xB2, 0xDB, 0x5D, 0xFA, 0x3F, 0x79, 0x4E, 0x60, 0x30, 0x92, 0xB3, 0x09, 0x08, 0xF5, 0xC9, 0x43, 0x99, 0x0F, 0x6D, 0x8C, 0x4E, 0x9B, 0xE8, 0x59, 0x2D, 0xFE, 0x08, 0xC0, 0x63, 0x49, 0x5B, 0x51, 0xC0, 0x58, 0x8D, 0x01, 0x1D, 0xD6, 0xF5, 0xF4, 0x96, 0x8E, 0x66, 0x02, 0xC9, 0x17, 0xC6, 0xEC, 0x31, 0xB1, 0x13, 0x3C, 0xCC, 0x9C, 0xF7, 0x16, 0xB7, 0x39, 0xA5, 0x94, 0xF3, 0xF0, 0xF8, 0xD7, 0xEA, 0xC1, 0xE6, 0x1E, 0x7B, 0x7D, 0xDA, 0x69, 0x1B, 0xDB, 0x21, 0x38, 0xA0, 0xF3, 0x11, 0x4D, 0xFF, 0x36, 0xFE, 0x38, 0x29, 0xA2, 0x90, 0xCE, 0x6D, 0x39, 0x66, 0x10, 0x8B, 0x4F, 0x58, 0x01, 0x5F, 0xAA, 0x93, 0x8E, 0xFE, 0xEF, 0x79, 0x48, 0x3C, 0x42, 0xB6, 0xA7, 0xF2, 0x97, 0xAD, 0x21, 0x7B, 0xA5, 0x70, 0xD9, 0xED, 0x01, 0x3F, 0xBE, 0x00, 0x39, 0x61, 0x2B, 0x79, 0x15, 0xDB, 0x54, 0x9F, 0x76, 0x14, 0x3A, 0xC0, 0x5E, 0x3F, 0x4A, 0x98, 0x56, 0x0A, 0x4D, 0x5A, 0x91, 0xCC, 0x99, 0xC0, 0x98, 0xE4, 0xFB, 0x62, 0x99, 0x6C, 0x99, 0xE6, 0xE2, 0xD4, 0x9F, 0x2A, 0xD8, 0x3A, 0x3F, 0x4B, 0xA3, 0x13, 0x9A, 0xE1, 0xE6, 0x52, 0x23, 0x53, 0x4A, 0xF9, 0x0A, 0x7B, 0xD1, 0x58, 0xBB, 0x03, 0x99, 0x4F, 0x82, 0x38, 0xE9, 0x0C, 0xF0, 0xED, 0x74, 0x8C, 0x52, 0x67, 0xC9, 0x4D, 0x26, 0x1F, 0x18, 0x94, 0x93, 0xE2, 0x4A, 0xB7, 0x6B, 0x99, 0x16, 0x11, 0x05, 0x0D, 0xE2, 0x8D, 0x45, 0xC7, 0x0E, 0xA5, 0x69, 0xF6, 0xDA, 0x23, 0x61, 0xFB, 0x29, 0xED, 0xF9, 0x20, 0x28, 0xA1, 0xCE, 0x29, 0x97, 0x37, 0xB5, 0xA2, 0x33, 0x7D, 0xC6, 0xFB, 0x6A, 0x72, 0x32, 0x50, 0xBB, 0x6A, 0xA7, 0xC8, 0x8D, 0xD9, 0x96, 0x1E, 0x2D, 0xA0, 0x40, 0xAD, 0x15, 0x33, 0x61, 0xBD, 0xA8, 0x81, 0x56, 0xA9, 0xFB, 0x07, 0xD4, 0xF9, 0xAC, 0x51, 0x4A, 0x89, 0x24, 0xFD, 0xF4, 0x8D, 0x69, 0x25, 0xCE, 0x61, 0x71, 0xFF, 0x40, 0x12, 0xDC, 0x78, 0x85, 0xA6, 0x9A, 0xA4, 0x6B, 0xF1, 0x0D, 0xB7, 0x40, 0x5A, 0x16, 0xAF, 0x3C, 0x78, 0xBC, 0x31, 0x1B, 0xF4, 0xEA, 0x23, 0x71, 0x5E, 0xB0, 0xB6, 0xFA, 0x3D, 0x17, 0xE7, 0xCE, 0x8B, 0xCE, 0x5F, 0x02, 0xDB, 0x5D, 0xCF, 0x2C, 0xDC, 0x8C, 0x7B, 0xF3, 0x79, 0x27, 0xC6, 0xF7, 0x6B, 0x2E, 0x89, 0x0F, 0x33, 0xC5, 0x47, 0xC5, 0x33, 0xCB, 0xCD, 0xE4, 0x8C, 0xF3, 0x47, 0x3D, 0xB9, 0xF6, 0xAB, 0xB1, 0x47, 0x00, 0xB5, 0x56, 0xEC, 0x49, 0xB4, 0xED, 0xF6, 0x49, 0xD4, 0xEF, 0xC3, 0x99, 0xD1, 0x25, 0xC6, 0xF5, 0x73, 0xFA, 0xD0, 0xB8, 0xBA, 0x23, 0x5B, 0xE5, 0x22, 0xAE, 0x12, 0xD9, 0xDE, 0x45, 0xF0, 0x05, 0x21, 0x51, 0xE7, 0x7F, 0xE3, 0x82, 0xF0, 0x25, 0x45, 0xA4, 0x07, 0x1A, 0x77, 0x24, 0x15, 0x84, 0xB4, 0xC1, 0x8A, 0x2A, 0x6A, 0x85, 0x9E, 0xA0, 0x5D, 0xBD, 0x58, 0x17, 0xCE, 0x91, 0x85, 0xDF, 0x03, 0x0C, 0x6A, 0x27, 0x4C, 0x93, 0x8B, 0xF7, 0x70, 0x83, 0xBF, 0x92, 0xD7, 0x0D, 0xAF, 0x19, 0xCC, 0xFD, 0x7C, 0xDB, 0xE6, 0x48, 0x10, 0x75, 0x79, 0x51, 0x90, 0xFC, 0x23, 0x26, 0xE7, 0x26, 0x55, 0xEF, 0x50, 0xA9, 0x00, 0x5C, 0x00, 0x0D, 0xF0, 0x2A, 0x8C, 0xC4, 0xC8, 0x92, 0x4C, 0x33, 0x2C, 0x70, 0x5F, 0x91, 0x85, 0x87, 0x8E, 0x16, 0xC0, 0x67, 0x7A, 0xC6, 0x65, 0x26, 0x6D, 0x78, 0x09, 0x29, 0x29, 0x49, 0x2B, 0xCF, 0x2C, 0xAB, 0xCB, 0xCF, 0x99, 0xB3, 0x0C, 0xA9, 0xFD, 0x67, 0xC2, 0x8E, 0xA7, 0x95, 0x52, 0xEC, 0x73, 0x84, 0x6C, 0x4C, 0xFC, 0xD2, 0xC2, 0xB2, 0xD2, 0x19, 0xE9, 0x58, 0x91, 0xE5, 0x95, 0x8F, 0x13, 0x4E, 0xF3, 0x3D, 0x3D, 0x84, 0x7F, 0x2C, 0x88, 0x66, 0x12, 0x09, 0x59, 0xCA, 0x99, 0xE8, 0x52, 0x6B, 0x52, 0x58, 0xB1, 0x07, 0x37, 0x68, 0xFD, 0x58, 0x28, 0x68, 0x5D, 0xE0, 0xD3, 0x83, 0x72, 0x83, 0x87, 0xC7, 0x4D, 0xF5, 0x77, 0xD7, 0xFC, 0xC4, 0x8D, 0xA4, 0x63, 0x37, 0xD7, 0xE5, 0x76, 0x64, 0x50, 0xCD, 0x88, 0x31, 0xB6, 0xE3, 0xAD, 0x7C, 0x1D, 0x59, 0x26, 0xC4, 0x9D, 0x62, 0x20, 0xB9, 0xAA, 0x30, 0x4B, 0x56, 0xBC, 0x57, 0x9B, 0xFC, 0x5C, 0xCE, 0xAB, 0xF9, 0x46, 0xEF, 0xB0, 0xCE, 0x4C, 0xC8, 0x68, 0x68, 0x28, 0xDA, 0x76, 0x6F, 0x92, 0xFA, 0x75, 0xED, 0x3D, 0x4A, 0xEE, 0x76, 0x05, 0x64, 0x13, 0xE5, 0xC8, 0xF7, 0x1F, 0xB0, 0xAB, 0x5F, 0x31, 0x64, 0x2D, 0xD3, 0x6F, 0x78, 0xB8, 0xF2, 0x69, 0x39, 0x3E, 0x7F, 0x0D, 0x34, 0x40, 0x6A, 0xF2, 0xF1, 0x5A, 0x69, 0xA2, 0xD3, 0x76, 0x6E, 0x08, 0xA5, 0x92, 0xFB, 0x1D, 0x64, 0xC9, 0x95, 0x61, 0x88, 0x4C, 0x4D, 0x49, 0x79, 0x5A, 0x68, 0x53, 0xAD, 0x52, 0x65, 0x6C, 0xBE, 0x8E, 0x45, 0x01, 0x1C, 0xC5, 0x44, 0x3C, 0xA6, 0xD2, 0x40, 0x08, 0xB1, 0xBC, 0x80, 0x20, 0xF4, 0x39, 0xC1, 0x6C, 0x26, 0x92, 0x0C, 0xD8, 0x30, 0x71, 0x31, 0x75, 0xB5, 0x32, 0x25, 0xDB, 0xC1, 0x7A, 0x8D, 0xD5, 0xF4, 0xD1, 0x6C, 0x9B, 0x77, 0x00, 0x80, 0xF6, 0x33, 0xAE, 0x6D, 0x33, 0xC6, 0x1B, 0x0D, 0x34, 0xFC, 0x66, 0x82, 0xF4, 0xE9, 0x13, 0xBC, 0x26, 0x11, 0xCD, 0x32, 0xCD, 0xCD, 0x08, 0xF4, 0x6B, 0xAC, 0x50, 0x19, 0x86, 0x89, 0x0F, 0x16, 0x23, 0xC9, 0x1C, 0x9E, 0xEF, 0xAB, 0xD2, 0x86, 0x26, 0xE3, 0x98, 0x89, 0x8A, 0x57, 0x91, 0xCF, 0x3B, 0x10, 0xA6, 0xBA, 0xA6, 0x7E, 0xAA, 0x83, 0xDF, 0x18, 0x9A, 0x60, 0x0D, 0x94, 0x85, 0x9D, 0x05, 0xCC, 0x6E, 0xE5, 0x22, 0xFA, 0x1D, 0x58, 0xB7, 0xF2, 0x96, 0xDD, 0x8B, 0x2F, 0xF0, 0xC7, 0x87, 0x8A, 0xC7, 0x96, 0xDC, 0x33, 0x4E, 0x97, 0x41, 0x38, 0x02, 0x01, 0x5F, 0x0E, 0x98, 0xE1, 0xA8, 0x77, 0xF2, 0xEC, 0xA1, 0x02, 0x89, 0x84, 0x5E, 0x73, 0xE6, 0xF3, 0x47, 0x9F, 0x33, 0xAA, 0x9C, 0x67, 0x58, 0xCD, 0x36, 0xA8, 0xA8, 0x50, 0xC2, 0xC2, 0x66, 0xC5, 0xEA, 0x87, 0x4A, 0xFD, 0x78, 0x1F, 0x89, 0xCB, 0x44, 0x4A, 0x47, 0xBA, 0xF0, 0x32, 0x1F, 0x45, 0xE5, 0x9A, 0xE8, 0xBF, 0x91, 0x95, 0x90, 0x42, 0x49, 0xF8, 0x86, 0x39, 0x46, 0xE2, 0xD2, 0x0D, 0x54, 0x83, 0xC1, 0xF3, 0xBF, 0x09, 0x16, 0x26, 0x34, 0xDA, 0x08, 0x07, 0x5E, 0x72, 0x86, 0x49, 0xC2, 0x96, 0x5B, 0x6D, 0x89, 0x71, 0x98, 0x89, 0x5E, 0x96, 0xDF, 0x0B, 0xA8, 0x44, 0x75, 0x22, 0x94, 0xB1, 0x8D, 0x89, 0x1D, 0x2B, 0xCC, 0xA0, 0x01, 0x0B, 0x24, 0xE4, 0x0F, 0xC0, 0x9D, 0xAF, 0x27, 0x8F, 0x61, 0xBD, 0x3F, 0xCE, 0x05, 0xD8, 0x04, 0x4C, 0x67, 0x84, 0xC9, 0xB4, 0x5D, 0xC8, 0x3E, 0x86, 0x1C, 0x07, 0x68, 0x94, 0xA9, 0x89, 0x10, 0x95, 0xEF, 0x5A, 0xD1, 0xBA, 0x8B, 0xA6, 0x8D, 0x15, 0x24, 0xB3, 0xE3, 0x9A, 0x32, 0xB1, 0x19, 0xA2, 0x87, 0xD8, 0xBB, 0x80, 0x03, 0x7A, 0x45, 0x08, 0xAF, 0x5B, 0xD5, 0x93, 0xFD, 0x2F, 0x73, 0x6B, 0xA4, 0x3B, 0xE2, 0xC7, 0x06, 0x08, 0xF2, 0xB4, 0x38, 0xAB, 0x0D, 0x32, 0xA4, 0x5D, 0x33, 0xE7, 0xD4, 0x91, 0x23, 0x08, 0xDF, 0xCF, 0xCA, 0xFF, 0x48, 0x1B, 0x38, 0x4E, 0x45, 0xE9, 0xAA, 0xA9, 0xFD, 0x3C, 0x73, 0xAC, 0xAF, 0x35, 0x0D, 0xB7, 0x1F, 0x7E, 0x9B, 0x61, 0x5D, 0xF1, 0x94, 0x17, 0x27, 0xD4, 0xF7, 0xA5, 0x5E, 0x30, 0x49, 0x5E, 0xA0, 0x82, 0x56, 0xE1, 0x39, 0x47, 0x66, 0xDF, 0xD5, 0xCC, 0x51, 0xF8, 0xC0, 0x44, 0xAE, 0x1A, 0x7F, 0x8E, 0xFA, 0x26, 0x8F, 0x29, 0x9E, 0x7C, 0x27, 0xE7, 0xE3, 0x42, 0x23, 0x0E, 0x86, 0xF3, 0xAF, 0x5D, 0x74, 0x78, 0xB4, 0x68, 0xA9, 0xCA, 0x5B, 0x5F, 0xB1, 0x5C, 0x2A, 0x76, 0xD5, 0x7A, 0x30, 0xD7, 0xD3, 0xD3, 0x23, 0x57, 0x55, 0x67, 0xA6, 0xE7, 0xE5, 0x46, 0x59, 0xC8, 0xBA, 0xF6, 0x01, 0xDB, 0x68, 0x26, 0x2B, 0x2C, 0xBC, 0x92, 0x5D, 0xBA, 0xB7, 0x96, 0xD3, 0x90, 0x3A, 0x6F, 0x7D, 0x3D, 0x55, 0xED, 0x81, 0xD2, 0x5C, 0xEB, 0x5D, 0x56, 0x2D, 0x87, 0x9E, 0x1E, 0xD4, 0xE1, 0x19, 0xD3, 0xE1, 0x50, 0xA6, 0x92, 0xCD, 0x72, 0x4A, 0xCF, 0x0B, 0xBD, 0x1B, 0x4C, 0xE0, 0x22, 0xEB, 0xB3, 0x51, 0x94, 0xDD, 0xC9, 0xBC, 0xFE, 0xC5, 0xC9, 0xA7, 0x58, 0xA1, 0xFC, 0xB5, 0xE9, 0xCD, 0x4D, 0x37, 0xDA, 0xC7, 0x5B, 0x85, 0xFB, 0x04, 0x30, 0xD8, 0x3C, 0xCE, 0x58, 0xCF, 0x96, 0xD4, 0x4D, 0xA1, 0xD4, 0x53, 0x6A, 0xCD, 0xA7, 0x73, 0xDD, 0x03, 0x68, 0xFC, 0xC4, 0xCB, 0xC7, 0x89, 0xAD, 0xB2, 0x7A, 0xD7, 0xF7, 0xC2, 0xF6, 0xE1, 0xD6, 0x31, 0x70, 0x9E, 0x10, 0x25, 0x2F, 0x12, 0x7E, 0x37, 0x4C, 0xDD, 0xDC, 0x75, 0x88, 0x5F, 0xE6, 0x9B, 0x7B, 0xAC, 0x05, 0x70, 0xB8, 0x75, 0x0A, 0x87, 0x4A, 0xE4, 0x99, 0x43, 0xE0, 0x7F, 0xBB, 0x59, 0x92, 0x76, 0xC7, 0x2B, 0x18, 0x44, 0x30, 0xF1, 0xC4, 0x82,  };

// Function: L'Ecuyer 32 RND seed: sec_srs_f.
#define LECUSR32 eaa910b0
#define LECUSR32_KEY (0xD3001984U)
static uint8_t LECUSR32[] = { 0x5C, 0x2E, 0xA3, 0xAF, 0xAE, 0x8C, 0xAF, 0x62, 0x29, 0xFE, 0x65, 0xBB, 0x0B, 0xD0, 0x63, 0x81, 0x72, 0xAD, 0x26, 0xA6, 0xEF, 0x35, 0xAA, 0x74, 0xE8, 0xD6, 0x02, 0x2E, 0xF6, 0x1C, 0xE8, 0x88, 0x7A, 0x8D, 0xAD, 0x0E, 0x41, 0x37, 0x6C, 0xE4, 0xD5, 0x65, 0x99, 0xCF, 0x9E, 0x8E, 0xE1, 0x86, 0x2B, 0x53, 0xB0, 0x76, 0x35, 0x59, 0x2C, 0xF3, 0x75, 0x10, 0x80, 0x1F, 0xE5, 0xCA, 0xFF, 0xB9, 0x81, 0x0A, 0x2B, 0xDF, 0x62, 0x02, 0xAB, 0x62, 0x01, 0x53, 0x99, 0xB5, 0x51, 0x27, 0x86, 0x9E, 0x07, 0x58, 0xA4, 0x23, 0xE2, 0xB3, 0x23, 0xC3, 0x54, 0x4E, 0xCB, 0xA6, 0x76, 0x91,  };

// Function: L'Ecuyer 32 RNG generate: sec_r32_f.
#define LECURG32 bf4b2ab3
#define LECURG32_KEY (0x38390D3CU)
static uint8_t LECURG32[] = { 0xD0, 0xD0, 0x88, 0x64, 0xA2, 0xB6, 0xD6, 0xD8, 0x7B, 0x8A, 0xF7, 0x31, 0x22, 0x7C, 0x9F, 0x0B, 0x43, 0xF7, 0x3F, 0x21, 0x0F, 0x30, 0x00, 0xDE, 0x90, 0xE3, 0x3F, 0x25, 0x92, 0x04, 0x12, 0xF4, 0x81, 0xDA, 0x06, 0xBA, 0x24, 0x79, 0x0C, 0x06, 0x6B, 0x3C, 0x40, 0xB6, 0x70, 0xAA,  };

// Function: GFSR4 32 RND seed: sec_srs_f.
#define GFSRSR32 c646520c
#define GFSRSR32_KEY (0xD9C4A779U)
static uint8_t GFSRSR32[] = { 0x29, 0xAB, 0xFE, 0x0F, 0x7E, 0xDE, 0xB9, 0x82, 0xBE, 0x39, 0xF5, 0x29, 0xF0, 0xAD, 0xC9, 0x06, 0x07, 0x1C, 0x1F, 0xC9, 0xBC, 0x75, 0xF0, 0xD4, 0x92, 0x79, 0xF0, 0x5A, 0xF0, 0x95, 0x12, 0x8E, 0x7C, 0x62, 0x9A, 0x52, 0x28, 0x44, 0xB3, 0xF3, 0xF9, 0xFA, 0x12, 0x63, 0x85, 0x9A, 0x87, 0xAE, 0x48, 0xE8, 0xEF, 0xF0, 0x9E, 0xEB, 0x91, 0x0D, 0xE2, 0x25, 0x2C, 0xFF, 0x65, 0x30, 0xB1, 0x4E, 0x50, 0x97, 0xEE, 0x11, 0xA7, 0x0C, 0xAC, 0x09, 0xD1, 0xE9, 0xF8, 0x8C, 0xD3, 0xF0, 0x9F, 0xBA, 0xA4, 0x3E, 0x9C, 0x78, 0x57, 0x90, 0x0C, 0xA6, 0x19, 0x9D, 0x47, 0x48, 0xBE, 0xB7, 0x79, 0x4C, 0x70, 0xB4, 0x28, 0x90, 0x24, 0x65, 0x33, 0x50, 0x14, 0xB3, 0xA6, 0x3A, 0x32, 0xFF, 0x80, 0xEA, 0xE7, 0x94, 0x9E, 0xF3, 0x11, 0xC4, 0x07, 0xF0, 0x95, 0x52, 0x66, 0x65, 0x12, 0x50, 0x9E, 0x52, 0x86, 0x54, 0x92, 0x38, 0xA5, 0x72, 0xCF, 0x24, 0xE4, 0xBF, 0xB0, 0x9E, 0x2D, 0xB7, 0xFA, 0x7C, 0xE5, 0xDB, 0x49, 0x72, 0xB2, 0x32, 0xC3, 0x9F, 0xAE, 0xCE, 0xC1, 0x53, 0xE3, 0x87, 0xAE, 0x15, 0x84, 0x8D, 0x31, 0xD2, 0x14, 0x9B, 0xFC, 0x87, 0xCA, 0x60, 0x26, 0x0B, 0x75, 0x32, 0xBA, 0xC7, 0x1A, 0x2A, 0x68, 0xAC, 0xCD, 0x8A, 0x83, 0x89, 0x2B, 0x31, 0x32, 0x63, 0x36, 0x5E, 0x47,  };

// Function: GFSR4 32 RNG generate: sec_r32_f.
#define GFSRRG32 df823127
#define GFSRRG32_KEY (0x40A0057FU)
static uint8_t GFSRRG32[] = { 0x64, 0x99, 0xAC, 0x1C, 0xAD, 0x68, 0xB1, 0x7C, 0xCD, 0xA0, 0x84, 0xC6, 0xBA, 0x5B, 0x24, 0xCB, 0x9E, 0x50, 0x1D, 0xD4, 0x2F, 0x9D, 0x94, 0x1A, 0xA8, 0xB7, 0x14, 0x5C, 0xD6, 0x85, 0x30, 0xDD, 0xF5, 0xE7, 0xD8, 0x38, 0xF7, 0xDE, 0x2B, 0xE7, 0x0A, 0xBE, 0x4C, 0x86, 0x41, 0x35, 0xE8, 0xBC, 0x47, 0xE7, 0x97, 0x9E, 0x05, 0x8F, 0x93, 0xE2, 0x3A, 0x11, 0xD9, 0x9A, 0x13, 0x46, 0x4E, 0x67, 0xB3, 0xFD, 0x23, 0xCF, 0x90, 0xCA, 0x34, 0xF1, 0x57, 0xEF, 0x10, 0x7D, 0xF7, 0x69, 0x35, 0x7A, 0xDD, 0xF0, 0x12, 0xCC, 0x25, 0x3B, 0x82, 0x21, 0x3C, 0x62,  };

// Function: Split Mix 64 RNG seed: sec_srs_f.
#define SPMXSR64 b57b5dfd
#define SPMXSR64_KEY (0xB65E99C3U)
static uint8_t SPMXSR64[] = { 0xAB, 0xF5, 0xE5, 0xD6,  };

// Function: Split Mix 64 RNG generate: sec_r64_f.
#define SPMXRG64 d1346272
#define SPMXRG64_KEY (0xCE6A6B63U)
static uint8_t SPMXRG64[] = { 0x4B, 0xA4, 0x01, 0xC9, 0x72, 0x4F, 0x7B, 0x59, 0x4B, 0xFD, 0x27, 0x6B, 0x8F, 0x2B, 0x28, 0xEE, 0xA6, 0xD6, 0x98, 0x35, 0x3A, 0x97, 0x1C, 0x36, 0x0F, 0x7E, 0x1C, 0xE4, 0x44, 0x5B, 0x41, 0x3C, 0x73, 0x1B, 0x54, 0xE3, 0x6E, 0xEA, 0x27, 0x83, 0xD6, 0xBB, 0x90, 0x27, 0xAD, 0xAB, 0xE2, 0x51, 0x4D, 0x36, 0xD4, 0x0E, 0x49, 0xC8, 0x3A, 0x2D, 0x54, 0xBC, 0xE9, 0x98, 0xAF, 0x85, 0xAC, 0xE8, 0xF3, 0x73, 0x54, 0x2E, 0xAD, 0x4F, 0x21, 0x3A, 0x0F, 0xB0, 0x66,  };

// Function: Xoroshiro128+ 64 RNG seed: sec_srs_f.
#define XSHISR64 a8051eff
#define XSHISR64_KEY (0x41CEF5CBU)
static uint8_t XSHISR64[] = { 0x03, 0x4D, 0xC0, 0xB9, 0x08, 0x14, 0x41, 0x49, 0x8C, 0x80, 0x35, 0x1A, 0x97, 0x63, 0xB5, 0x1F, 0x8F, 0xBC, 0x3D, 0x81, 0xDF, 0xCB, 0x4D, 0xBE, 0x3B, 0x16, 0xEF, 0x86, 0x80, 0xD5, 0x64, 0xC0, 0x69, 0xAB, 0x55, 0x0C, 0x57, 0xE6, 0x81, 0x82, 0xF5, 0x10, 0x4A, 0xCE, 0xF0, 0xA5, 0xEA, 0x51, 0xAC, 0xC3, 0x24, 0x25, 0xDB, 0x63, 0xF9, 0x8A, 0x7C, 0xFB, 0x66, 0x9D, 0x11, 0xFA, 0x80, 0x62, 0x4B, 0x61, 0xF6, 0x55, 0x7C, 0xFC, 0x84, 0x92, 0x8B, 0xB5, 0xEC, 0x4B, 0x56, 0x0E, 0x78, 0x0E, 0x0A, 0x18, 0x1B, 0x94, 0x6B, 0xC0, 0x0C, 0x70, 0x97, 0x7E, 0xD1, 0xCA, 0x4C, 0xD1, 0xDE, 0x92, 0x9A, 0xA0, 0x1A, 0x80, 0xF1, 0x55, 0xD6, 0x4D, 0xC7, 0x54, 0x15, 0xE2, 0xB6, 0xF8, 0x0B, 0xB5, 0x2F, 0x93, 0x51, 0x4B, 0x35, 0x80, 0x9B, 0x16, 0xFD, 0x79, 0x21, 0xD0, 0x52, 0x12, 0x69, 0xBA, 0xE3, 0xF6, 0xCC, 0xD8, 0xA8, 0xD3, 0xA8, 0x7B, 0xDC, 0xC4, 0x45, 0xA0, 0x9F, 0x01, 0x9D, 0xD7, 0x72, 0xBC, 0x99, 0x8F, 0xF0, 0xAD, 0xE9, 0x2B, 0x32, 0xFF, 0x49, 0x8C, 0x20, 0x7B, 0xD1, 0x03, 0xC4, 0xBE, 0xF6, 0x87, 0x31, 0x72, 0x69, 0x47, 0x1F, 0x39, 0x25, 0x41, 0xDA, 0xF6, 0xC5, 0x56, 0x5B, 0xF8, 0xA2, 0x9C, 0x34, 0xE2, 0xD5, 0xA8, 0x04, 0x93, 0x40, 0x99, 0x14, 0x11, 0x16, 0x01, 0xE7, 0xC3, 0x35, 0xB1, 0x54, 0x02, 0xDC, 0x9B, 0x3B, 0xC9, 0x9F, 0x87, 0xD4, 0x75, 0xD9, 0x62, 0x16, 0x8B, 0xC1, 0x26, 0x72, 0x37,  };

// Function: Xoroshiro128+ 64 RNG generate: sec_r64_f.
#define XSHIRG64 df84fb38
#define XSHIRG64_KEY (0xDEA05755U)
static uint8_t XSHIRG64[] = { 0x41, 0xD5, 0x2F, 0x8B, 0x69, 0xDB, 0x74, 0x19, 0x4B, 0xE1, 0xC8, 0xF1, 0x4B, 0xCD, 0xD4, 0xEA, 0xA9, 0x56, 0x2B, 0xC7, 0x2C, 0x28, 0xFD, 0xD2, 0x08, 0xF4, 0x1D, 0xEC, 0x2A, 0xD3, 0xDE, 0x5B, 0xE9, 0x57, 0x3A, 0x22, 0x59, 0x0E, 0x4A, 0x31, 0x61, 0x84, 0x16,  };

// Function: XorShift1024* 64 RNG seed: sec_srs_f.
#define XSFSSR64 ed24947c
#define XSFSSR64_KEY (0xE1E5A6C0U)
static uint8_t XSFSSR64[] = { 0xD4, 0xC2, 0x39, 0xEA, 0x2D, 0x28, 0xD2, 0x19, 0x7D, 0xAD, 0x99, 0x43, 0xB9, 0x30, 0x1D, 0x90, 0xE3, 0x83, 0xE8, 0xFA, 0x64, 0x33, 0x13, 0xF3, 0x8E, 0x50, 0x64, 0x58, 0x95, 0xA8, 0x9F, 0x2D, 0xA3, 0xC6, 0x4C, 0x09, 0xCF, 0xDA, 0xD9, 0x81, 0x6D, 0xA3, 0x5F, 0x36, 0xE5, 0x0B, 0x4C, 0xFD, 0x97, 0xCE, 0xA6, 0xCB, 0x64, 0x51, 0x90, 0xE9, 0x8F, 0x21, 0xC4, 0xD9, 0xEF, 0x1B, 0xB4, 0x95, 0x1D, 0x36, 0x85, 0xDE, 0x18, 0x5C, 0x07, 0x27, 0x7E, 0xF5, 0xCE, 0x32, 0x0D, 0xDC, 0x52, 0x8F, 0x19, 0x84, 0xDF, 0x8F, 0xAA, 0xE0, 0x03, 0x83, 0xC3, 0x6B, 0x9B, 0xB0, 0x08, 0x1D, 0x08, 0xC6, 0x54, 0x71, 0x56, 0x40, 0x11, 0xF2, 0x15, 0xDB, 0x1F, 0x24, 0xBD, 0x3C, 0xFF, 0xD4, 0x25, 0x69, 0x27, 0x93, 0x91, 0x94, 0x04, 0xA0, 0xF8, 0x53, 0x6D, 0x89, 0x26, 0x39, 0xDF, 0x8C, 0x2A, 0x33,  };

// Function: XorShift1024* 64 RNG generate: sec_r64_f.
#define XSFSRG64 e97be174
#define XSFSRG64_KEY (0x975D6901U)
static uint8_t XSFSRG64[] = { 0x01, 0x89, 0xDB, 0x7F, 0x55, 0x92, 0x09, 0x7A, 0x0F, 0xB3, 0xE4, 0x2B, 0x14, 0xDE, 0xF2, 0xDD, 0xF8, 0x26, 0x82, 0xBA, 0xA8, 0xBD, 0xD1, 0xD7, 0x92, 0xC0, 0x02, 0x91, 0x21, 0xE4, 0x3A, 0x5E, 0x7B, 0x62, 0xF1, 0x0A, 0x85, 0x18, 0x5F, 0xE1, 0x65, 0x79, 0xE2, 0x3C, 0x31, 0xE4, 0x67, 0xF7, 0x8B, 0xFB, 0x9A, 0xB0, 0x7C, 0xE6, 0x2B, 0xB6, 0xA9, 0x48, 0xAF, 0xBE, 0xB4, 0x4F, 0xC7, 0x9F, 0x32, 0x07, 0x05, 0x6D, 0x52, 0x51, 0x1C, 0xB3, 0x43, 0x48, 0x90, 0x20, 0xC3, 0x1F, 0xB7, 0x32, 0x67, 0x74, 0xC6,  };

// Function: Mersenne Twister 19937 64 RNG seed: sec_srs_f.
#define MERSSR64 a288ed9a
#define MERSSR64_KEY (0x7DBA1EE6U)
static uint8_t MERSSR64[] = { 0x82, 0x5E, 0xE2, 0x6C, 0x27, 0x16, 0x10, 0x0F, 0x62, 0xC7, 0xEF, 0x7D, 0xA5, 0x2E, 0x53, 0x88, 0x42, 0xD9, 0xAF, 0xF0, 0xBB, 0x12, 0x7C, 0x5E, 0x36, 0xDD, 0xBE, 0xDB, 0x85, 0x11, 0xB2, 0xB3, 0x29, 0x1C, 0x6B, 0x77, 0x95, 0x5D, 0xD7, 0xA6, 0x8C, 0x5F, 0x92, 0xF7, 0x7F, 0x30, 0x08, 0x2B, 0xE9, 0x92, 0xD4, 0xBB, 0x42, 0x28, 0x0B, 0xA3, 0xC9, 0x8E, 0xD5, 0x15, 0x7E, 0x6D, 0xFB, 0x38, 0x68, 0xB2, 0x40, 0xC5, 0xE7, 0x9B, 0xDC, 0x96,  };

// Function: Mersenne Twister 19937 64 RNG generate: sec_r64_f.
#define MERSRG64 a5b6866b
#define MERSRG64_KEY (0x71D8CCEEU)
static uint8_t MERSRG64[] = { 0x7A, 0x9C, 0xB7, 0xE8, 0x1F, 0xDB, 0x90, 0x12, 0xED, 0x6F, 0xCC, 0x6A, 0x8F, 0x43, 0x72, 0xFD, 0xD9, 0x04, 0x57, 0x78, 0xDA, 0x71, 0x31, 0xA0, 0x4F, 0xFD, 0x33, 0xFB, 0x37, 0xC0, 0x77, 0x2A, 0xF0, 0xE7, 0xD2, 0x17, 0xC5, 0x97, 0x33, 0xAA, 0x2C, 0xE6, 0x22, 0x6C, 0x22, 0xCA, 0x70, 0xE3, 0x79, 0xB0, 0x6B, 0xC7, 0xB6, 0xF7, 0x83, 0xE7, 0x9E, 0x97, 0x09, 0xA9, 0x77, 0x51, 0x9B, 0x7B, 0xEB, 0xFB, 0xDD, 0xA1, 0xCF, 0x57, 0xBD, 0xA3, 0x02, 0x6E, 0xE1, 0xBE, 0x0E, 0x0C, 0xED, 0x9E, 0xA0, 0x73, 0xD9, 0xB1, 0x9F, 0xE6, 0x88, 0xDF, 0x6E, 0xD7, 0xBC, 0xF9, 0x76, 0x2C, 0xE6, 0xBC, 0xB9, 0x37, 0x69, 0xEE, 0xD8, 0x7C, 0x11, 0x00, 0x05, 0x18, 0xD2, 0xE3, 0xBC, 0x28, 0x18, 0x27, 0xBC, 0x37, 0xB7, 0xC0, 0x32, 0x10, 0x5F, 0xC0, 0x43, 0x73, 0x80, 0x36, 0xD8, 0xBE, 0x01, 0x9D, 0xA3, 0x69, 0x3E, 0x21, 0xF9, 0x2C, 0xDA, 0xFB, 0xA8, 0xF5, 0x57, 0x96, 0x92, 0x25, 0x4E, 0x31, 0x3C, 0xDE, 0xC5, 0x54, 0xBE, 0x03, 0x27, 0x33, 0xD2, 0x9B, 0x96, 0x47, 0x96, 0x6C, 0x63, 0xC1, 0x0A, 0x83, 0xFA, 0x97, 0x73, 0x7C, 0x8E, 0x56, 0x74, 0xC6, 0xE6, 0x3D, 0x9A, 0xAC, 0xD7, 0x45, 0xBF, 0xF8, 0x23, 0xBB, 0x5F, 0xBB, 0x46, 0xBA, 0xD8, 0xD6, 0x52, 0x77, 0x5A, 0x37, 0x67, 0x44, 0xDC, 0x5A, 0x25, 0x0E, 0x10, 0xCC, 0x37, 0xA4, 0xB2, 0x23, 0x37, 0x8E, 0x27, 0xE8, 0x23, 0xCE, 0x86, 0x6A, 0x93, 0x4B, 0x9D, 0xFC, 0x1B, 0x20, 0xB2, 0x9B, 0x92, 0xBE, 0x3A, 0x39, 0x4A, 0x3C, 0x01, 0x04, 0xA1, 0xFA, 0xB6, 0xFD, 0xC0, 0xA4, 0x8B, 0xEA, 0x25, 0xAC, 0xBD, 0xA4, 0x40, 0xE5, 0x1A, 0xED, 0x1E, 0xBB, 0x39, 0x13, 0xD2, 0x95, 0xC6, 0xBD, 0xDF, 0x97, 0xA3, 0x70, 0x88, 0x63, 0x41, 0x0D, 0x29, 0xFD, 0x97, 0xC0, 0x92, 0xA8, 0xF0, 0x13, 0x9F, 0xE4, 0x65, 0x4D, 0x2D, 0x86, 0x44, 0x3F, 0x2A, 0x12, 0xB7, 0xA1, 0x6B, 0x11, 0x13, 0xF5, 0x9B, 0x05, 0xD2, 0x14, 0x0D, 0x5B, 0x15, 0x73, 0x1F, 0x5B, 0x5D, 0xFD, 0x18, 0xFB, 0x57, 0x64, 0xB6, 0x38, 0x16, 0x78, 0x20, 0xB1, 0x75, 0x38, 0xC7, 0x4E, 0x96, 0x8C, 0x2B, 0xF0, 0xD5, 0x7F, 0xF8, 0x57, 0x6A, 0xC3, 0x5D, 0xD5, 0xA4, 0x57, 0x9A, 0x8E, 0xBF, 0x7F, 0x1E, 0xFC, 0x16, 0x0E, 0xAE, 0x9D, 0x1D, 0x54, 0xF7, 0xDE, 0x7B, 0x17, 0xA5, 0x4D, 0x31, 0xA3, 0x4A, 0x6D, 0x00, 0x5F, 0x05, 0xD5, 0xB8, 0x10, 0x90, 0xE6, 0x96, 0xB2, 0x95, 0x3E, 0xE7, 0x8C, 0x3C, 0x63, 0x06, 0x32, 0x24, 0xC6, 0x0B, 0x7D, 0xD0, 0x95, 0x5C, 0x0E, 0x3F, 0x77, 0x6C, 0xFD, 0x8D, 0x12, 0x22, 0xE3, 0xCD, 0xB2, 0xC7, 0x2C, 0xA3, 0x08, 0x23, 0x9B, 0x44, 0xAC, 0x9A, 0xE4, 0xBE, 0x0F, 0x6A, 0x69, 0xB6, 0xE8, 0x00, 0x55, 0x8C, 0x2A, 0x31, 0xCA, 0xCE, 0xEE, 0x8B, 0x51, 0xC8, 0x8E, 0x28, 0x24, 0xB4, 0x97, 0xF1, 0x01, 0x15, 0x8E, 0xE9, 0x9C,  };

// Function: Rand 48 32 RND seed: sec_srs_f.
#define RANDSR48 f53ebb45
#define RANDSR48_KEY (0x969A4C95U)
static uint8_t RANDSR48[] = { 0x4D, 0x9E, 0x6E, 0x07,  };

// Function: Rand 48 32 RND generate: sec_r32_f.
#define RANDRG48 c4b71254
#define RANDRG48_KEY (0x267438BBU)
static uint8_t RANDRG48[] = { 0x7B, 0x34, 0x4C, 0x8D,  };

// Function: Compress data: sec_cpr_f. Needs pointer to buffer of size COMPHTAB.
#define COMPRESS ee591d39
#define COMPRESS_KEY (0xB554A9DAU)
static uint8_t COMPRESS[] = { 0xE2, 0x62, 0x73, 0xB8, 0x8B, 0xBA, 0x54, 0x22, 0xC6, 0x44, 0xBA, 0xB2, 0xA5, 0x12, 0x1B, 0xAD, 0xB0, 0xA4, 0xBE, 0x08, 0x07, 0xB0, 0x9E, 0x5D, 0x4B, 0xAE, 0x66, 0xAF, 0xF3, 0xCC, 0x55, 0x92, 0xA4, 0xA4, 0x2B, 0x6C, 0x03, 0x24, 0x5B, 0x6B, 0xA2, 0x77, 0x7E, 0x31, 0x5E, 0xB3, 0xA8, 0xC7, 0xC4, 0x3A, 0x9B, 0x88, 0x63, 0x33, 0x07, 0x62, 0xBE, 0xAE, 0x10, 0x6C, 0xE2, 0x24, 0x73, 0x4B, 0x13, 0xD2, 0xF5, 0xC6, 0xA3, 0x42, 0x99, 0x79, 0x44, 0x6D, 0xA3, 0xD1, 0x73, 0x04, 0x5F, 0x92, 0x7D, 0xB6, 0xEC, 0x1B, 0x46, 0x2F, 0x49, 0x6D, 0xD4, 0x60, 0xB0, 0x1D, 0x7F, 0xBD, 0xF4, 0xDD, 0x7F, 0xC0, 0x7A, 0x10, 0xB9, 0x6F, 0xEC, 0x82, 0x00, 0xAC, 0xE2, 0x09, 0x82, 0xE7, 0x87, 0x38, 0x70, 0x04, 0xF4, 0xFA, 0x32, 0x56, 0x46, 0xF2, 0x08, 0xFC, 0xCD, 0x04, 0x4F, 0x52, 0x64, 0x39, 0x06, 0x7C, 0xAE, 0xF5, 0xDC, 0x01, 0x24, 0xA3, 0xEB, 0xAC, 0x3A, 0x13, 0x47, 0x67, 0x68, 0x2E, 0x0D, 0x68, 0xE6, 0xB6, 0x57, 0xCC, 0xB0, 0xDB, 0x14, 0xAF, 0x7E, 0xEF, 0xD3, 0xD5, 0x05, 0xD1, 0x6C, 0x2B, 0x93, 0x06, 0x75, 0x4B, 0x23, 0xFC, 0x2C, 0xDF, 0x63, 0xA9, 0x69, 0x3B, 0xBF, 0x66, 0x8A, 0xDF, 0xFE, 0x49, 0xA7, 0x40, 0xB7, 0xCB, 0xD8, 0x22, 0xC8, 0x67, 0x90, 0xC3, 0xC9, 0x2C, 0x1E, 0xC7, 0xCA, 0xA7, 0xA6, 0x77, 0xEF, 0x90, 0xB2, 0x71, 0x47, 0x31, 0x2C, 0xBC, 0xFE, 0x53, 0x49, 0xE5, 0x88, 0xFA, 0xC2, 0xFC, 0x0D, 0xAD, 0xE7, 0xE7, 0x35, 0x7D, 0x0D, 0x26, 0xD1, 0xB6, 0xEA, 0x58, 0x8E, 0xDD, 0x4F, 0xCA, 0x24, 0xE1, 0x10, 0x3E, 0xFB, 0x94, 0x9A, 0xE2, 0x21, 0xF2, 0x05, 0xE3, 0x31, 0x67, 0x46, 0x0B, 0xAC, 0x1D, 0x36, 0x0D, 0x5C, 0x09, 0xE6, 0x48, 0x2F, 0xDE, 0xCE, 0xBA, 0x8D, 0x5B, 0x9F, 0xCB, 0xC2, 0x06, 0xED, 0x5F, 0x3F, 0x01, 0xDB, 0x1C, 0x94, 0xE8, 0x8B, 0xD9, 0x94, 0x5A, 0xBB, 0x22, 0xB1, 0x80, 0xE4, 0x6B, 0xE9, 0x77, 0x18, 0x6F, 0xCD, 0x3E, 0x91, 0x7E, 0x3C, 0xCA, 0x91, 0x40, 0x24, 0x45, 0x99, 0xD1, 0x1C, 0x19, 0xB7, 0x80, 0x00, 0xE4, 0xCD, 0xC8, 0xFD, 0xB7, 0xEA, 0x51, 0xFD, 0x20, 0x9E, 0x63, 0xCD, 0x09, 0x92, 0x6F, 0x71, 0xC0, 0x61, 0x5C, 0x3C, 0xB1, 0x26, 0x42, 0x91, 0xFB, 0x39, 0xDB, 0x93, 0x19, 0x87, 0xCE, 0x40, 0xC8, 0xF9, 0xE3, 0x81, 0xF9, 0xFC, 0x8F, 0x63, 0x5B, 0x0F, 0x2C, 0x33, 0x0B, 0x27, 0x13, 0xD9, 0x62, 0x9B, 0x52, 0xA5, 0xE2, 0xD3, 0xC0, 0xB7, 0x40, 0xB8, 0x6F, 0x7C, 0xBB, 0xFC, 0x8E, 0xF0, 0xB2, 0x7E, 0x51, 0xD9, 0xEA, 0xC2, 0xE2, 0xA1, 0x7E, 0x33, 0x76, 0x1E, 0x25, 0x9B, 0x8F, 0x0C, 0x3D, 0x25, 0xC2, 0x34, 0x44, 0xD2, 0xB9, 0xDB, 0xB7, 0xD4, 0x9B, 0x17, 0x2C, 0x46, 0xEB, 0xF6, 0x17, 0xE3, 0xB9, 0xA2, 0x13, 0x04, 0x13, 0x0D, 0xCE, 0xB7, 0x13, 0xA7, 0x17, 0xA7, 0xAA, 0x70, 0x7E, 0x56, 0xD0, 0xCB, 0x79, 0xBE, 0x82, 0xAD, 0x89, 0x4F, 0x1E, 0x92, 0x51, 0xFB, 0x57, 0xAD, 0x7C, 0xF4, 0x9A, 0x91, 0xCA, 0xA1, 0x3E, 0x1C, 0x3B, 0xB5, 0xC2, 0x1A, 0x31, 0xEB, 0x87, 0x8E, 0x60, 0x1E, 0x77, 0x16, 0xC5, 0x8A, 0x57, 0xE0, 0x82, 0xE5, 0x70, 0x49, 0xFF, 0x40, 0x1F, 0x13, 0x8C, 0xD0, 0x18, 0x8B, 0xA4, 0x98, 0x51, 0xAC, 0x84, 0x91, 0x64, 0x25, 0x63, 0x7F, 0x72, 0xEB, 0xAC, 0x0B, 0xA5, 0x86, 0xD7, 0x78, 0x56, 0xEF, 0xE4, 0x9B, 0x4D, 0x51, 0x20, 0x96, 0x76, 0x3D, 0x9B, 0x8D, 0xB8, 0x60, 0x14, 0xCE, 0x76, 0x95, 0xBD, 0x40, 0x47, 0x59, 0x25, 0x54, 0xC7, 0xB6, 0x7B, 0xED, 0xDE, 0xC6, 0x20, 0xED, 0x94, 0x6B, 0x61, 0x2D, 0xBA, 0x0E, 0xC3, 0x0D, 0x8F, 0x5C, 0x52, 0x16, 0x07, 0xA5, 0x83, 0x7A, 0xEF, 0x67, 0x70, 0x94, 0x4C, 0xA2, 0xF3, 0xFD, 0xEE, 0xBC, 0xF3, 0xA9, 0xA4, 0x53, 0x99, 0x86, 0x14, 0x69, 0xF4, 0x73, 0x33, 0x53, 0xE8, 0x79, 0x12, 0x25, 0x14, 0x6F, 0x8E, 0xEA, 0x66, 0xBD, 0xD5, 0x11, 0xEF, 0x69, 0xE4, 0xEF, 0xF8, 0xD9, 0x8C, 0xB6, 0x70, 0x0F, 0x35, 0xAD, 0x46, 0x51, 0xF6, 0x9E, 0x66, 0x7A, 0x0D, 0x10, 0xA8, 0xFA, 0x6D, 0xEB, 0x17, 0x18, 0x9D, 0xFC, 0xFE, 0x6E, 0xB2, 0x92, 0xC1, 0xF7, 0x7E, 0xF9, 0xCD, 0x79, 0x0E, 0xA2, 0x45, 0xAB, 0x12, 0xA6, 0x28, 0x75, 0x17, 0x9D, 0xA4, 0x7E, 0xE0, 0x06, 0xA2, 0x16, 0x2F, 0x4B, 0x89, 0x37, 0x87, 0x4A, 0x8E, 0xB9, 0x53, 0xA7, 0x66, 0x94, 0x8A, 0xED, 0xB0, 0xE3, 0xD1, 0x5C, 0xD5, 0xDA, 0xBD, 0xED, 0x24, 0x43, 0xA2, 0xE7, 0x14, 0x5C, 0x5F, 0x5C, 0xD7, 0xBD, 0x1E, 0xDC, 0x75, 0x33, 0x0E, 0x2E, 0xF4, 0x17, 0x4A, 0xBD, 0x0E, 0x70, 0x06, 0x10, 0x59, 0x5A, 0x0F, 0x55, 0xBB, 0x17, 0xBD, 0x6C, 0x31, 0x85, 0xCD, 0x1E, 0xAD, 0x0E, 0x99, 0x78, 0x29, 0x72, 0xF2, 0x07, 0x12, 0x34, 0xED, 0x6E, 0xA5, 0xC6, 0xF6, 0x3A, 0x74, 0x8C, 0x37, 0x8A, 0x6A, 0xBC, 0x21, 0xFA, 0x9C, 0xEF, 0xE2, 0x90, 0x85, 0xB1, 0x2B, 0x0B, 0x96, 0xBD, 0xBC, 0x52, 0x83, 0xCF, 0x3F, 0xA2, 0x4D, 0xC7, 0x8E, 0x9A, 0x7B, 0x43, 0xDB, 0xBB, 0x87, 0x92, 0x12, 0xC9, 0xA4, 0x61, 0x5B, 0x66, 0x1C, 0x88, 0x87,  };

// Function: Decompress data: sec_dcp_f.
#define DECOMPRS f51e0999
#define DECOMPRS_KEY (0x8E1AAA6DU)
static uint8_t DECOMPRS[] = { 0x0D, 0xBF, 0x52, 0x7B, 0x82, 0xAB, 0xA2, 0x26, 0x73, 0xA1, 0xD0, 0x19, 0xBB, 0xAC, 0x5C, 0xF2, 0x40, 0xBA, 0x69, 0x77, 0x90, 0x3D, 0x7D, 0x47, 0xBA, 0x2F, 0x27, 0xC6, 0x1F, 0x71, 0x1C, 0x2B, 0x28, 0xFF, 0x42, 0x22, 0x98, 0xD7, 0x33, 0xE9, 0x04, 0x45, 0xFE, 0xDF, 0x77, 0x3F, 0xD7, 0xA2, 0x17, 0xB9, 0xE7, 0xDA, 0x66, 0xF2, 0x28, 0x43, 0x24, 0xD2, 0xE4, 0x38, 0x55, 0x20, 0xE5, 0x70, 0x3D, 0x5B, 0x21, 0x29, 0x86, 0xEA, 0x0C, 0x98, 0xA6, 0x84, 0x7C, 0x64, 0x1A, 0x87, 0xDA, 0xF7, 0x07, 0x4A, 0xE4, 0x2B, 0x97, 0x37, 0x61, 0x53, 0xC8, 0x5B, 0x33, 0xB8, 0xDA, 0x1B, 0x0A, 0xC7, 0xA0, 0x4B, 0x26, 0x8E, 0x27, 0xDC, 0x1E, 0xA6, 0x1E, 0x93, 0x80, 0xA3, 0x08, 0x46, 0xAD, 0x96, 0x47, 0x39, 0x32, 0xF6, 0x75, 0x1B, 0x1A, 0xD7, 0xAE, 0xA2, 0xB0, 0xB4, 0x55, 0x9E, 0x56, 0xD5, 0xA2, 0xBD, 0x5C, 0xE1, 0xFB, 0x3E, 0x03, 0x26, 0xCD, 0x3C, 0xC6, 0xD8, 0xB1, 0x8C, 0x29, 0x38, 0xDF, 0x28, 0x16, 0x84, 0x8E, 0x44, 0x40, 0x01, 0xD6, 0x56, 0x84, 0x0C, 0xC8, 0x85, 0x83, 0xF1, 0xFE, 0x56, 0x48, 0x86, 0x44, 0x04, 0x80, 0xEE, 0x93, 0xF5, 0x4E, 0xC9, 0xBD, 0x8D, 0xDC, 0x41, 0x3F, 0xCC, 0x1F, 0xC2, 0xA3, 0x75, 0x85, 0xB0, 0x04, 0xC7, 0x3E, 0x29, 0xA9, 0x6B, 0x09, 0x57, 0xAD, 0xF4, 0x6E, 0x50, 0x66, 0xC7, 0xED, 0x01, 0x79, 0xCC, 0x17, 0x94, 0x49, 0xB7, 0xF9, 0x78, 0x93, 0xFC, 0x5D, 0x0E, 0x95, 0x4F, 0xE0, 0x53, 0xA4, 0x1E, 0x77, 0xD2, 0x62, 0xCE, 0x5C, 0x0C, 0xA3, 0xD0, 0xF4, 0xB1, 0x48, 0x7D, 0x40, 0x23, 0x30, 0xA9, 0x4B, 0xB7, 0x6B, 0x5D, 0xA8, 0x56, 0xA4, 0x7D, 0x20, 0x5E, 0xC1, 0x4D, 0x03, 0x1C, 0xCB, 0xB7, 0xF9, 0x56, 0x40, 0xC8, 0xAF, 0x76, 0x58, 0x06, 0x02, 0x27, 0x48, 0xFE, 0xA8, 0x0A, 0x2A, 0xF5, 0xCC, 0x26, 0x44, 0xC5, 0x5B, 0xB4, 0x37, 0xAA, 0x78, 0x16, 0xCE, 0x6A, 0xF0, 0xC2, 0x23, 0x41, 0x27, 0xD0, 0x18, 0x89, 0x5C, 0x1D, 0x83, 0xDC, 0xEA, 0x34, 0x1E, 0x98, 0xDC, 0xC2, 0x07, 0xB6, 0xEB, 0x29, 0x88, 0xD0, 0x4B, 0x93, 0xB9, 0x48, 0x78, 0x3A, 0x50, 0xD8, 0xD6, 0x89, 0xF0, 0x25, 0x57, 0x30, 0x9D, 0x61, 0xC8, 0x56, 0xB0, 0x2C, 0x1F, 0xD9, 0x1A, 0x4E, 0x12, 0x60, 0xCC, 0xDB, 0x53, 0x2A, 0x28, 0x21, 0xFE, 0x32, 0x58, 0xA6, 0x2B, 0xBC, 0x33, 0xEC, 0x99, 0xC4, 0x7F, 0xE5, 0xB1, 0xAD, 0x84, 0xB1, 0x28, 0x31, 0x01, 0x72, 0xAF, 0xD0, 0x23, 0x2E, 0x3A, 0xBA, 0x64, 0xD3, 0x3F, 0xB5, 0x5D, 0x34, 0x76, 0xFB, 0xA7, 0x94, 0x0B, 0x25, 0x9B, 0x3F, 0x4B, 0x04, 0x49, 0x61, 0x7B, 0x4C, 0xDE, 0x1B, 0x0B, 0x62, 0x80, 0x9C, 0xFD, 0x78, 0x18, 0xA0, 0x38, 0xA4, 0xC3, 0x0B, 0xA2, 0x56, 0x57, 0x27, 0xE0, 0xE1, 0x37, 0x3E, 0x77, 0x94, 0x5D, 0x19, 0xF3, 0xAF, 0x1B, 0xC3, 0xAF, 0x30, 0x6E, 0x77, 0x44, 0x43, 0x8B, 0x40, 0x29, 0x90, 0xFD, 0x44, 0xC2, 0x7C, 0x3C, 0xDD, 0x96, 0x87, 0x6A, 0xEA, 0x2E, 0x4F, 0xB1, 0x31, 0x46, 0x7E, 0xFA, 0xBA, 0xE2, 0x89, 0x22, 0x26, 0x75, 0x31, 0x58, 0x7A, 0x59, 0x27, 0xFD, 0xE1, 0x05, 0xB9, 0xEF, 0x28, 0xA0, 0xBE, 0x1A, 0x6A, 0x90, 0x29, 0xE9, 0x7B, 0x24, 0xA8, 0x64, 0xDA, 0xDE, 0x31, 0xD0, 0xE2, 0x79, 0x57, 0x70, 0xA6, 0xA6, 0x80, 0xFF, 0x56, 0xAF, 0xF4, 0x54, 0x90, 0x5C, 0x15, 0xE6, 0x95,  };

// Data: CRC 32-Bit LUT Used by CRC32FUN.
#define CRC32TAB fb09a026
#define CRC32TAB_KEY (0xB7B50478U)
static uint8_t CRC32TAB[] = { 0xF8, 0xB9, 0xED, 0x1A, 0x39, 0x0B, 0x1B, 0xD2, 0xFA, 0x8C, 0x09, 0x61, 0x41, 0xCA, 0x7D, 0x4D, 0x86, 0x23, 0xAD, 0x4F, 0x3B, 0xA4, 0x5F, 0x19, 0xFD, 0x06, 0x28, 0xC2, 0xB7, 0xA8, 0xFB, 0xD1, 0x11, 0x4B, 0xED, 0x9A, 0xA9, 0x76, 0xC9, 0x5C, 0x56, 0xDE, 0x1D, 0x6E, 0xDD, 0xCD, 0xBB, 0x3F, 0xD9, 0xD4, 0x79, 0x1C, 0x50, 0x10, 0x58, 0x8D, 0x5E, 0xF6, 0xBE, 0xB6, 0x2F, 0xC6, 0x51, 0xF2, 0x3C, 0xF1, 0x7F, 0x7C, 0x70, 0xE6, 0x87, 0x97, 0x27, 0xE7, 0xEF, 0x92, 0x4E, 0x64, 0xF3, 0xCA, 0xB7, 0x38, 0x3C, 0x82, 0x5B, 0x4B, 0xC4, 0xDE, 0x8E, 0x73, 0x3F, 0x37, 0xEC, 0xE1, 0xDD, 0x95, 0x30, 0x00, 0x2D, 0x2C, 0x61, 0xEB, 0x5D, 0xB9, 0x2B, 0xC9, 0xF4, 0x25, 0xEB, 0x79, 0x8D, 0x84, 0xBD, 0x1D, 0x76, 0xB4, 0xC9, 0x14, 0xA5, 0xD5, 0x5D, 0x6E, 0x27, 0xA6, 0xCE, 0xB5, 0xB7, 0xA0, 0x81, 0xCA, 0xFD, 0x49, 0xA5, 0x81, 0x92, 0xE1, 0xD1, 0xF2, 0xA9, 0xF8, 0xE5, 0xED, 0x31, 0x5C, 0x63, 0xBE, 0x47, 0x4B, 0x28, 0xBD, 0x92, 0xB5, 0xD1, 0x04, 0x6E, 0xEA, 0xD4, 0x06, 0x2F, 0x76, 0x85, 0x19, 0x38, 0xBC, 0xEF, 0x94, 0xE0, 0xE3, 0xE2, 0xC9, 0x11, 0x1D, 0x2F, 0xE1, 0x34, 0x37, 0x95, 0x06, 0x97, 0x42, 0xFC, 0x84, 0xE2, 0x77, 0x1B, 0xFF, 0xA9, 0xF0, 0xA9, 0x2C, 0x22, 0x1B, 0xFC, 0x93, 0x46, 0xB4, 0x2B, 0x04, 0xFD, 0xE8, 0xEE, 0x96, 0xD4, 0x2F, 0x81, 0x74, 0x74, 0x08, 0xB8, 0x4E, 0x2D, 0x87, 0xD2, 0x5A, 0x9E, 0x0D, 0xA4, 0x60, 0x7A, 0x54, 0xA5, 0x2F, 0xD6, 0x24, 0xAF, 0xFE, 0x8F, 0xDE, 0x37, 0x71, 0xB2, 0x3A, 0x3C, 0xF1, 0x4E, 0x1B, 0xD1, 0x8D, 0xD7, 0x20, 0x25, 0x7F, 0x9A, 0xF5, 0x43, 0x48, 0x0E, 0x93, 0xE7, 0x37, 0x6F, 0xA7, 0x0D, 0x0B, 0x91, 0x97, 0x7C, 0x1C, 0x3A, 0x02, 0x8E, 0x74, 0x26, 0xA8, 0xF3, 0x51, 0x95, 0x58, 0xDE, 0x6A, 0x61, 0x59, 0xA8, 0xAF, 0x4F, 0xE9, 0x51, 0x44, 0x28, 0xDE, 0x2D, 0xC4, 0x32, 0x89, 0x1C, 0xB3, 0xF7, 0x64, 0x3F, 0xAF, 0x20, 0xFD, 0xF9, 0xDB, 0x82, 0xDB, 0xD9, 0xD0, 0x21, 0xD3, 0x29, 0xF6, 0x4E, 0x0C, 0x69, 0x77, 0x20, 0x9E, 0x87, 0x6B, 0xA8, 0x60, 0xA9, 0x07, 0xAF, 0xA3, 0xE9, 0xC5, 0x93, 0x3C, 0x41, 0xDE, 0x7B, 0xD3, 0xCA, 0xDB, 0xB1, 0x13, 0x6B, 0x06, 0x89, 0xEA, 0xEF, 0x35, 0x94, 0xF7, 0x32, 0xDC, 0x22, 0xF1, 0xB6, 0x99, 0xF5, 0xF0, 0x9D, 0xB0, 0x14, 0x09, 0x10, 0x9C, 0x2E, 0x8A, 0x54, 0xED, 0x3E, 0x11, 0x24, 0xC9, 0x95, 0xD1, 0x29, 0x59, 0x56, 0x8E, 0xA6, 0xD3, 0x5D, 0xF6, 0xAA, 0x40, 0x12, 0x35, 0xD3, 0xBE, 0xDA, 0xC7, 0x51, 0xBF, 0xAB, 0xB8, 0x35, 0x3B, 0xD6, 0x80, 0xD6, 0x00, 0xA4, 0x8F, 0x0A, 0x9B, 0xF9, 0x2D, 0xB6, 0x52, 0xD0, 0xF9, 0x51, 0xB0, 0x8F, 0x8E, 0x66, 0x1C, 0x7B, 0x8F, 0x28, 0x9A, 0x27, 0x41, 0x7F, 0x04, 0x8A, 0x5F, 0x71, 0xB8, 0xFC, 0x02, 0x60, 0x93, 0x86, 0x7A, 0xDE, 0x4B, 0xA5, 0x71, 0xE6, 0x39, 0x8E, 0x30, 0x0D, 0xFC, 0xC3, 0x32, 0xE7, 0xC0, 0xE1, 0xB3, 0x93, 0x49, 0xB4, 0x68, 0xDB, 0x4F, 0xA2, 0xF8, 0x65, 0x8D, 0x20, 0x03, 0x41, 0x6A, 0xFD, 0xA9, 0x7B, 0x2F, 0x5E, 0x02, 0x54, 0x16, 0x2A, 0xE5, 0xA1, 0x83, 0x11, 0xA7, 0x97, 0xCC, 0x34, 0xCC, 0xA0, 0x6F, 0x81, 0xF1, 0xBF, 0x83, 0x8B, 0x78, 0x37, 0xB7, 0x5A, 0x6B, 0x81, 0xB9, 0x3A, 0x51, 0x89, 0x11, 0x72, 0x9C, 0xF0, 0x26, 0x8A, 0x41, 0xE8, 0x11, 0xA0, 0x9C, 0xBA, 0x50, 0x98, 0x13, 0xF3, 0x24, 0xE7, 0x8C, 0xE0, 0x26, 0x14, 0x27, 0x4C, 0x1B, 0x3A, 0x75, 0xF5, 0x44, 0x3E, 0xFD, 0x66, 0x3C, 0xC5, 0x49, 0xF1, 0xB3, 0xD5, 0x7F, 0x31, 0x4E, 0xF8, 0x89, 0x77, 0x2F, 0xA7, 0xE7, 0x33, 0x7F, 0xF3, 0x90, 0x43, 0x06, 0x75, 0x34, 0xF8, 0x3B, 0x5D, 0xBA, 0xC7, 0xB7, 0x29, 0x35, 0xCC, 0xD4, 0x42, 0x7F, 0x06, 0xBF, 0x3B, 0x73, 0x9B, 0xF3, 0xE7, 0x10, 0x2C, 0x97, 0x16, 0xED, 0x8F, 0xBE, 0x05, 0xCA, 0xA6, 0x95, 0x88, 0xA5, 0x71, 0x44, 0x58, 0xD1, 0x4B, 0x87, 0x09, 0x46, 0x59, 0x70, 0x4F, 0xB3, 0x32, 0xF8, 0xFA, 0x16, 0x74, 0xFE, 0x28, 0x1C, 0x88, 0x7F, 0x6E, 0x58, 0xBF, 0xAC, 0x13, 0xA6, 0xBD, 0x35, 0x5C, 0x2F, 0x79, 0xD2, 0xE9, 0x43, 0x4D, 0x72, 0xD7, 0x73, 0x1D, 0xAA, 0xDC, 0x0D, 0xB5, 0x6C, 0x79, 0xE6, 0x88, 0x41, 0x93, 0xFD, 0x6E, 0x9E, 0x77, 0x79, 0xA1, 0x9C, 0xF6, 0xF2, 0xD0, 0x4C, 0x79, 0xE5, 0x86, 0x95, 0x60, 0xD3, 0x81, 0x59, 0xC1, 0x21, 0x12, 0x71, 0x52, 0x5C, 0x2E, 0x7E, 0x29, 0xCE, 0x30, 0x9A, 0x40, 0x4C, 0x77, 0xBE, 0xA9, 0x47, 0x55, 0x84, 0x44, 0xD8, 0x58, 0x80, 0xE3, 0xEC, 0xC7, 0x95, 0xDD, 0x22, 0x92, 0xC9, 0x29, 0xCF, 0xED, 0xF5, 0x6F, 0xDA, 0xB8, 0x95, 0x23, 0x2E, 0x96, 0x1B, 0xE7, 0x78, 0x94, 0x45, 0xBD, 0x17, 0x6B, 0xFE, 0x57, 0x74, 0x2F, 0x9A, 0xE5, 0x8F, 0x4C, 0xAE, 0xB3, 0xDE, 0x33, 0xFC, 0xE6, 0xEE, 0xD6, 0x0B, 0xB5, 0xC8, 0x87, 0xDB, 0xF1, 0x67, 0x6F, 0x5A, 0x23, 0x8A, 0x1A, 0x49, 0xA9, 0xB5, 0x02, 0x80, 0xE6, 0x69, 0xDB, 0x26, 0x15, 0x70, 0x24, 0xDC, 0x5B, 0xDA, 0x4E, 0xAC, 0x39, 0x5D, 0xA1, 0xF5, 0x3B, 0x8D, 0xD6, 0xDB, 0x9B, 0x84, 0xC6, 0x61, 0x2D, 0x7D, 0xA6, 0x3C, 0xE7, 0x9E, 0x7E, 0x04, 0x49, 0x89, 0x47, 0xA8, 0xCD, 0x4A, 0x51, 0xE7, 0xCD, 0xCF, 0x68, 0xF0, 0x71, 0x35, 0x68, 0xC0, 0x7B, 0x3E, 0x14, 0x89, 0x4E, 0x46, 0x07, 0x27, 0xC4, 0x25, 0x50, 0xA3, 0xAF, 0xB9, 0xF9, 0xB7, 0x69, 0xF1, 0x4F, 0xCC, 0x63, 0xCB, 0xBB, 0xA6, 0xB0, 0x54, 0x20, 0xC3, 0x45, 0xE9, 0x25, 0xE0, 0x11, 0x86, 0x83, 0x89, 0x66, 0x34, 0xBB, 0xB4, 0x02, 0xE1, 0xB5, 0xEB, 0xB7, 0xA7, 0x20, 0x49, 0xED, 0x89, 0x3B, 0xEE, 0x51, 0x7B, 0xAF, 0xCB, 0xEE, 0x6A, 0x51, 0x8B, 0x6F, 0xAD, 0x03, 0x92, 0x1E, 0x0E, 0xF6, 0x3F, 0x39, 0x1F, 0xD7, 0x27, 0x37, 0xD9, 0x8A, 0xDA, 0x79, 0x9F, 0x08, 0x6A, 0xAA, 0xC3, 0xFF, 0x7A, 0x5F, 0x19, 0xED, 0x15, 0x2F, 0x98, 0x20, 0x07, 0x3C, 0x58, 0xD2, 0x30, 0x0C, 0x35, 0xAF, 0xF7, 0x77, 0x6A, 0x3E, 0x72, 0x59, 0x54, 0x41, 0xB9, 0x6B, 0x5E, 0x5B, 0x7E, 0x9E, 0x3C, 0x73, 0x84, 0x13, 0x36, 0xDF, 0xA3, 0x79, 0xBB, 0x3C, 0x77, 0x50, 0x5F, 0xB6, 0xE3, 0x1D, 0x6B, 0x71, 0x85, 0xB8, 0x0F, 0x3F, 0xC0, 0xAA, 0x56, 0x6B, 0x24, 0x57, 0x2B, 0xDC, 0x49, 0x7E, 0x73, 0x1F, 0x98, 0xF7, 0x20, 0x26, 0xE7, 0x36, 0xDF, 0xAB, 0x7B, 0x22, 0xC5, 0x0F, 0xDC, 0x3A, 0xB3, 0xA8, 0xAA, 0xF4, 0xF9, 0xB5, 0x7D, 0x09, 0xD2, 0x36, 0x0F, 0x22, 0x60, 0xCD, 0x2B, 0xC5, 0x24, 0xE4, 0x22, 0xD2, 0x47, 0x39, 0xC7, 0xCD, 0x71, 0xD3, 0x93, 0x20, 0xAB, 0x5E, 0x6A, 0x82, 0xFA, 0xDD, 0x44, 0xAC, 0xF5, 0x9A, 0x3E, 0x66, 0xC9, 0xE3, 0xD6, 0xD8, 0xA2, 0xC0, 0xFC, 0x35, 0xDD, 0xFB, 0x11, 0x8C, 0x34, 0x86, 0x3C, 0xD6, 0xC1, 0x58, 0x5F, 0x8C, 0x84, 0x76, 0xCC, 0xD3, 0x9F, 0xC6, 0x10, 0xBE, 0x9A, 0x8A, 0x7D, 0xD1, 0xD9, 0x21, 0xC5, 0x81, 0x9C, 0x16, 0xA8, 0x98, 0x51, 0xE9, 0xB7, 0x4D, 0xAA, 0x0E, 0x8F, 0x0A, 0xB4, 0xE8,  };

// Function: CRC 32: sec_c32_f. Needs pointer to LUT referenced by CRC32TAB.
#define CRC32FUN cd270bef
#define CRC32FUN_KEY (0xAC849E93U)
static uint8_t CRC32FUN[] = { 0x3F, 0x47, 0xDE, 0x12, 0x79, 0xAD, 0x37, 0x90, 0x98, 0x3B, 0x39, 0x95, 0xE1, 0x57, 0x93, 0x1F, 0x1B, 0x02, 0xF6, 0xBE, 0x26, 0xA3, 0xA9, 0xAF, 0x27, 0xA7, 0xCF, 0x5D, 0x21, 0x5D, 0x45, 0x91, 0x64, 0x04, 0xBD, 0x83, 0x20, 0x57, 0x39, 0xF0, 0x02, 0x32, 0x58, 0xAC, 0x45, 0xEB, 0xA1, 0x49, 0x78, 0x8C, 0x7B, 0x64, 0x83, 0xF1, 0x28,  };

// Data: CRC 64-Bit LUT Used by CRC64FUN.
#define CRC64TAB c2cd4349
#define CRC64TAB_KEY (0x79E6888DU)
static uint8_t CRC64TAB[] = { 0xE5, 0x56, 0xC6, 0x7F, 0x3A, 0x0A, 0x94, 0x8A, 0xE7, 0x54, 0x54, 0x44, 0x18, 0x0D, 0x6D, 0xE3, 0xA2, 0x05, 0xE9, 0xA7, 0xED, 0x39, 0xE4, 0x9D, 0x55, 0x2B, 0x98, 0xB6, 0xE7, 0xC9, 0x5F, 0xC5, 0x8F, 0x20, 0xFF, 0xBE, 0x5B, 0x5A, 0x62, 0x75, 0x36, 0x42, 0x19, 0xE8, 0x65, 0x47, 0x8B, 0x78, 0x82, 0xF8, 0xE4, 0x37, 0xF9, 0xDE, 0xC5, 0x84, 0xF5, 0xC3, 0x53, 0x1B, 0x82, 0x50, 0xC5, 0x2D, 0xE8, 0xCC, 0x5C, 0x58, 0xDA, 0x6D, 0x38, 0x77, 0x52, 0x9B, 0xB6, 0x68, 0xA2, 0x5B, 0xCB, 0x18, 0xE3, 0xCE, 0x7E, 0xF5, 0xA6, 0x40, 0x51, 0xA6, 0xCA, 0xFA, 0x89, 0x10, 0x95, 0x0E, 0x61, 0xFF, 0xDE, 0x3B, 0x5B, 0xD5, 0x34, 0x11, 0xCE, 0x6C, 0x63, 0xB1, 0xE6, 0x0C, 0xB8, 0x5B, 0x85, 0xA7, 0xE0, 0xF5, 0xFD, 0x4A, 0xC9, 0x12, 0x52, 0xD6, 0x7E, 0xD9, 0xD8, 0xCE, 0x8A, 0x95, 0x7B, 0x59, 0x7C, 0xF0, 0x08, 0x04, 0xA4, 0xB3, 0xE3, 0x40, 0x56, 0xB5, 0x6A, 0x25, 0xA2, 0x23, 0x19, 0x97, 0x81, 0x31, 0x69, 0x05, 0xFE, 0xB9, 0x57, 0x2E, 0xE1, 0x82, 0xC4, 0xF4, 0x04, 0xD4, 0x03, 0xE3, 0x9F, 0xD9, 0x16, 0xFE, 0x13, 0xFF, 0x51, 0x3B, 0x46, 0x8C, 0x9B, 0x0B, 0x15, 0x44, 0x3E, 0xA7, 0x16, 0x89, 0x00, 0xCF, 0x57, 0xE5, 0x67, 0x55, 0xAA, 0x6F, 0xFC, 0xAB, 0x46, 0xC9, 0x30, 0xED, 0xBC, 0x4D, 0xE5, 0x32, 0x81, 0xB8, 0x46, 0x3D, 0x5D, 0x4B, 0xE1, 0x2D, 0x2D, 0x0C, 0x66, 0x81, 0x3E, 0x5B, 0x33, 0x58, 0x2B, 0xD4, 0x93, 0x90, 0x3C, 0x7C, 0xDC, 0x83, 0x1C, 0xEF, 0x74, 0x77, 0xF3, 0x5A, 0x7B, 0xB9, 0x5C, 0x90, 0x3B, 0x62, 0xF6, 0xAE, 0xCE, 0xD4, 0x8C, 0xB0, 0x87, 0x6C, 0xCC, 0x60, 0xFF, 0xA7, 0x41, 0x91, 0xC3, 0x93, 0x60, 0x25, 0x9E, 0xA3, 0x09, 0x64, 0x75, 0x9F, 0xB9, 0xF6, 0x28, 0x52, 0x8E, 0x21, 0xD1, 0xD2, 0x78, 0x7C, 0xE7, 0xAE, 0xD8, 0xC3, 0x33, 0x61, 0x88, 0xCE, 0xF4, 0x8C, 0x86, 0x17, 0xE7, 0x52, 0xF5, 0x9A, 0x2D, 0x3A, 0xCB, 0xA2, 0x95, 0x04, 0xC5, 0x43, 0x7F, 0x56, 0x06, 0xC7, 0x4D, 0x2A, 0x93, 0xFB, 0x0A, 0xE6, 0xAC, 0x10, 0x2E, 0x97, 0x46, 0x52, 0x90, 0xF0, 0x2D, 0x89, 0x27, 0x4D, 0x74, 0x7F, 0x1F, 0x55, 0x05, 0x1B, 0x59, 0xC1, 0xEF, 0xE6, 0x6B, 0x64, 0x61, 0x34, 0x00, 0x65, 0x86, 0xB3, 0xEF, 0xDD, 0x80, 0xEA, 0xFC, 0xC1, 0x74, 0x3D, 0xD3, 0x85, 0x48, 0x7C, 0x70, 0x42, 0x2B, 0x54, 0x2F, 0x6F, 0x68, 0x9B, 0xE2, 0xC4, 0xEA, 0xDF, 0x69, 0x67, 0x72, 0x71, 0x64, 0x0A, 0x4D, 0x6E, 0x7B, 0x64, 0xB6, 0xBB, 0x07, 0xCF, 0x0D, 0x79, 0xEA, 0x8C, 0x52, 0x32, 0x91, 0xF6, 0x66, 0x45, 0xE7, 0x81, 0x72, 0x4D, 0x8A, 0x77, 0x9D, 0x45, 0x5C, 0x3B, 0x04, 0xC3, 0x08, 0xCA, 0x67, 0x5A, 0x3E, 0xE3, 0x97, 0x2E, 0x89, 0x77, 0x92, 0x98, 0x5E, 0x0C, 0x7F, 0x1A, 0xF2, 0xFC, 0x9B, 0xCD, 0x1B, 0x1A, 0x22, 0x00, 0xA0, 0x61, 0x28, 0x10, 0x4B, 0xF9, 0x21, 0x40, 0x44, 0x13, 0x16, 0xB3, 0xC9, 0xED, 0xB6, 0x2D, 0x7D, 0x1A, 0x10, 0x04, 0x8D, 0xBD, 0x37, 0xDC, 0x43, 0x52, 0x3E, 0x90, 0x7A, 0xE6, 0xD7, 0x64, 0xEC, 0xEB, 0x7B, 0xBD, 0xB3, 0xE0, 0xD4, 0x1F, 0xB9, 0x99, 0x0B, 0x84, 0xD0, 0x32, 0x70, 0x8F, 0x53, 0x56, 0x8B, 0x9A, 0x27, 0xD8, 0x50, 0x85, 0x2C, 0x4A, 0x8D, 0xD2, 0x10, 0xC2, 0x4F, 0x09, 0xDE, 0x3C, 0xB9, 0x2C, 0x8B, 0x1D, 0xD3, 0x7E, 0xAD, 0x96, 0x6A, 0xB0, 0x29, 0x4F, 0xBA, 0x4A, 0xC0, 0xB6, 0xA5, 0x4E, 0xC2, 0xCC, 0x70, 0x3B, 0xAA, 0xB4, 0x6D, 0x79, 0xC8, 0x66, 0x0F, 0x1A, 0xFE, 0x87, 0x49, 0x2C, 0xF8, 0xD0, 0x31, 0x2D, 0xA5, 0x74, 0x6A, 0x58, 0x6B, 0x84, 0x26, 0x4B, 0x11, 0x28, 0xA9, 0xCC, 0xFC, 0xCD, 0x37, 0x46, 0xE7, 0x1D, 0xCB, 0x26, 0xBC, 0x1E, 0xB8, 0x4E, 0x06, 0xAB, 0xC5, 0x59, 0x54, 0xD9, 0x7E, 0x02, 0x20, 0x4F, 0xBA, 0x2C, 0xD0, 0x71, 0x31, 0xA7, 0x5C, 0x2A, 0x15, 0x70, 0x36, 0x8A, 0x72, 0x8E, 0xD1, 0xD2, 0x6D, 0xAF, 0xAE, 0xD8, 0xCA, 0x6C, 0x25, 0x7B, 0x3D, 0xB3, 0x09, 0xBC, 0xA3, 0x39, 0x07, 0x04, 0xA5, 0x97, 0x4E, 0x3E, 0x4A, 0x4B, 0xF9, 0x61, 0xFA, 0x3E, 0x43, 0xAD, 0x10, 0xC3, 0xFF, 0x39, 0x1F, 0x89, 0x87, 0xCA, 0x90, 0x25, 0x82, 0x46, 0x01, 0x44, 0x1E, 0x06, 0x1E, 0xE4, 0x8A, 0xA7, 0x21, 0x1F, 0x72, 0x7B, 0x8B, 0xB9, 0x50, 0x3B, 0xDD, 0x39, 0x11, 0x0F, 0xF3, 0xA0, 0x98, 0x80, 0x31, 0xF2, 0xE5, 0xCD, 0x50, 0x4F, 0x35, 0x43, 0x3C, 0x0C, 0xEB, 0xAE, 0x43, 0x59, 0x58, 0xE0, 0x37, 0x3C, 0x01, 0xD9, 0x67, 0x80, 0x91, 0x30, 0x75, 0x7C, 0x5C, 0x33, 0xD3, 0x54, 0x7E, 0x0E, 0x2A, 0x03, 0x90, 0x3C, 0x87, 0x9F, 0xAE, 0x08, 0x2A, 0xC4, 0xCA, 0xCD, 0x43, 0x66, 0x17, 0x67, 0xB0, 0x5D, 0x46, 0xE8, 0x7C, 0xB8, 0x34, 0x49, 0x15, 0x05, 0x11, 0x96, 0x10, 0xF9, 0x4B, 0x1F, 0xB2, 0x1D, 0xEB, 0x9C, 0xF3, 0xF5, 0x74, 0x21, 0xFD, 0xB1, 0xEA, 0x6E, 0x2C, 0xB7, 0xC5, 0x6A, 0xAE, 0x8D, 0xED, 0xA7, 0x91, 0xC0, 0xC8, 0x44, 0x10, 0x17, 0x58, 0xA4, 0xAD, 0x18, 0xA0, 0xAB, 0xA1, 0x3B, 0xA6, 0x7D, 0x0D, 0x18, 0x74, 0xF2, 0x98, 0x25, 0xDE, 0xCE, 0xA4, 0xE6, 0x7B, 0xAC, 0x98, 0x85, 0x8A, 0x87, 0x07, 0xAE, 0xEA, 0x10, 0x4D, 0xE0, 0x5F, 0x0C, 0xAC, 0xAF, 0x7D, 0xF2, 0x5C, 0xB1, 0xD7, 0x0A, 0x47, 0x7A, 0xA6, 0x60, 0x49, 0x2F, 0x9E, 0xDD, 0x3E, 0x77, 0x99, 0x37, 0x1D, 0x29, 0xC1, 0x6A, 0x91, 0x6E, 0x53, 0xC2, 0x1C, 0x07, 0xBB, 0x5E, 0xFC, 0xF0, 0xD3, 0x24, 0x13, 0xAF, 0x71, 0x2A, 0xB8, 0xB7, 0xB3, 0x43, 0x74, 0x1A, 0x3B, 0xC8, 0x88, 0x20, 0x07, 0x96, 0x69, 0x29, 0xA0, 0xC9, 0x10, 0xA8, 0xA9, 0xB3, 0x7A, 0x9B, 0xEA, 0x09, 0x5A, 0x51, 0x9F, 0xC1, 0xC6, 0x89, 0x7A, 0xCF, 0x55, 0xE7, 0x41, 0xAC, 0x53, 0xF0, 0x90, 0xE0, 0xF8, 0xF5, 0x26, 0x01, 0x79, 0x81, 0xB0, 0xF4, 0x56, 0xEE, 0xA6, 0xAC, 0x2C, 0xEA, 0xE5, 0xA5, 0x24, 0xF7, 0xC6, 0x14, 0xC9, 0x8F, 0x39, 0xBD, 0xC5, 0xF6, 0x1A, 0xC5, 0x3E, 0x44, 0xF8, 0xAE, 0xD6, 0x00, 0x34, 0x21, 0x0F, 0xC9, 0xB7, 0x5A, 0x3C, 0xE6, 0xF8, 0x1E, 0x64, 0x0B, 0xA2, 0x9B, 0x08, 0x88, 0x92, 0x68, 0x40, 0x75, 0xBC, 0xE9, 0xCA, 0x0F, 0xEC, 0x2D, 0xF7, 0x31, 0x27, 0x59, 0xE6, 0xA1, 0x5B, 0x43, 0x22, 0x1A, 0xAD, 0xC3, 0xAB, 0xA4, 0x19, 0x88, 0x9D, 0xAD, 0x4D, 0x72, 0xDD, 0x51, 0xC2, 0xA5, 0x47, 0x54, 0x1B, 0x3D, 0x79, 0xC3, 0x01, 0x91, 0x65, 0x65, 0x4C, 0x82, 0xA0, 0xD3, 0x12, 0x02, 0x18, 0x2B, 0xA0, 0xE0, 0xDC, 0x54, 0xB8, 0x3D, 0x23, 0x80, 0xA3, 0x1A, 0x37, 0xC4, 0x6F, 0x79, 0xE3, 0xEA, 0x65, 0x91, 0x85, 0x54, 0x48, 0xCE, 0x4D, 0x4F, 0x13, 0xF0, 0xA1, 0x7A, 0xE2, 0x06, 0xC8, 0x5B, 0xB5, 0xF0, 0x67, 0xE2, 0xDD, 0x5B, 0x93, 0xC1, 0xD4, 0xFC, 0x6E, 0xCA, 0x27, 0xF9, 0x95, 0x4D, 0xF2, 0xF4, 0x2E, 0x76, 0x59, 0xD1, 0xFA, 0x5B, 0xB6, 0xD4, 0x70, 0xB3, 0xF1, 0x00, 0xFC, 0x93, 0xD2, 0x54, 0x86, 0xD4, 0xA8, 0xC2, 0x58, 0x88, 0x4A, 0xCF, 0xC5, 0x05, 0xFC, 0x14, 0x66, 0xE7, 0xEC, 0x37, 0x5B, 0x8C, 0x35, 0x77, 0x03, 0x75, 0x7D, 0xCA, 0x06, 0x60, 0x56, 0xC8, 0x66, 0x6C, 0xAE, 0x24, 0xC6, 0xB5, 0xF5, 0xFE, 0x20, 0x05, 0x1F, 0xBB, 0xBF, 0x43, 0xCA, 0xF5, 0xF1, 0xD2, 0x37, 0xEF, 0x3A, 0xC0, 0x05, 0x21, 0xA1, 0x80, 0x02, 0xEB, 0xDD, 0xBC, 0xAE, 0x2F, 0x95, 0xF8, 0xC8, 0x91, 0x4D, 0x0B, 0xBD, 0x43, 0xA8, 0xCB, 0x87, 0x85, 0x47, 0x41, 0xED, 0xEF, 0xDD, 0x64, 0x16, 0xF5, 0x5D, 0x97, 0xA5, 0xDF, 0xC2, 0xAA, 0x32, 0x7F, 0xAA, 0xD1, 0xEE, 0xAD, 0xC7, 0x01, 0x50, 0x63, 0xDC, 0x6B, 0x20, 0xE1, 0x3D, 0xC8, 0x47, 0xF5, 0xED, 0x75, 0x74, 0xC2, 0x72, 0x5F, 0x52, 0xED, 0x9C, 0x4F, 0xF3, 0x9E, 0x1C, 0x5E, 0x12, 0xDE, 0xC8, 0xFD, 0x0E, 0x4E, 0x3C, 0x8D, 0x68, 0x2A, 0x2A, 0xCB, 0x23, 0x40, 0x61, 0x6F, 0xFA, 0xBC, 0x9B, 0x41, 0x6F, 0xC1, 0x5A, 0x05, 0xBD, 0x5C, 0xA9, 0x16, 0xEF, 0xB5, 0xC3, 0xA8, 0x7A, 0x9F, 0x2E, 0xD1, 0x9D, 0x30, 0xAF, 0x85, 0x78, 0x3D, 0x8A, 0x12, 0x01, 0x42, 0xF6, 0xA8, 0x7C, 0xA1, 0x04, 0x04, 0x4D, 0x86, 0xBB, 0x73, 0x43, 0xD5, 0xD1, 0x51, 0x18, 0xAD, 0xEE, 0x60, 0x28, 0x53, 0x00, 0xF1, 0xB4, 0x3B, 0xAD, 0xEC, 0xC3, 0x45, 0x97, 0x08, 0x01, 0x80, 0x3B, 0x91, 0xCC, 0xD5, 0x5B, 0xCA, 0x60, 0x5E, 0xE2, 0x4C, 0x56, 0x1E, 0x8C, 0x0E, 0xE0, 0xEE, 0x94, 0x17, 0x3D, 0xE9, 0xD8, 0xE0, 0x24, 0x28, 0x20, 0xFF, 0x5D, 0xD1, 0xD3, 0x64, 0x92, 0xE8, 0xB8, 0xE1, 0x46, 0x58, 0x0C, 0x2A, 0x5E, 0x3D, 0xBA, 0x11, 0x9F, 0xD7, 0xAD, 0x32, 0xC5, 0x86, 0x2E, 0x1F, 0x57, 0xB2, 0xAF, 0x58, 0x6B, 0x66, 0xF1, 0x7B, 0xA0, 0xBA, 0xA8, 0xAB, 0x45, 0x2F, 0x5D, 0x57, 0x78, 0x19, 0x58, 0xCA, 0xC0, 0xCD, 0x02, 0xC2, 0x43, 0x31, 0xD2, 0x68, 0xF8, 0xD9, 0x6A, 0xB6, 0xA3, 0x07, 0x60, 0xBA, 0x48, 0xE3, 0x91, 0x16, 0xEF, 0xEE, 0x99, 0x2B, 0xF3, 0xFC, 0x9B, 0xDE, 0x2D, 0xE0, 0xF5, 0xFE, 0x94, 0x80, 0x81, 0x33, 0x52, 0xD5, 0xC6, 0xBB, 0x90, 0x11, 0x0C, 0x03, 0x2B, 0x0D, 0x9C, 0x7F, 0x91, 0xC9, 0x8C, 0x95, 0x18, 0x50, 0x57, 0x3E, 0x68, 0xC4, 0x20, 0x30, 0xB3, 0xEE, 0xC1, 0x16, 0x3E, 0xEA, 0x8E, 0x14, 0x6A, 0xAE, 0x2A, 0xF4, 0x41, 0x87, 0x8F, 0xA9, 0xDB, 0xED, 0x51, 0xE2, 0xF7, 0xBF, 0x43, 0x9C, 0x33, 0x6E, 0xA4, 0xC4, 0x63, 0xE8, 0xDB, 0x10, 0x59, 0x35, 0xB3, 0x5C, 0x65, 0xB6, 0x65, 0x21, 0x04, 0xA2, 0x91, 0x47, 0x7D, 0xB4, 0xDC, 0x9A, 0x6C, 0x3E, 0xDD, 0x80, 0xA4, 0xD0, 0x72, 0x42, 0xA3, 0xC3, 0x22, 0x5F, 0xDD, 0xBF, 0xF4, 0x16, 0x4D, 0x6E, 0x00, 0xF6, 0x7C, 0x55, 0x32, 0xAA, 0xB6, 0xBE, 0x35, 0xBE, 0x2F, 0x8B, 0x51, 0x0A, 0xCE, 0x54, 0x50, 0xD1, 0x9A, 0x6B, 0x6E, 0x3A, 0xCC, 0x63, 0xCF, 0x32, 0xA1, 0x32, 0xB6, 0x71, 0x0F, 0x28, 0xD0, 0x98, 0x93, 0xF5, 0x41, 0x2C, 0xCC, 0xBD, 0x87, 0x90, 0xCE, 0x2F, 0x81, 0x59, 0x83, 0x24, 0x63, 0x31, 0x71, 0xA3, 0x31, 0xA3, 0xBD, 0x97, 0xE4, 0x8B, 0x97, 0x80, 0x8D, 0xAF, 0x16, 0x7B, 0x85, 0xFB, 0x3A, 0xF0, 0x9E, 0xE3, 0x43, 0xB0, 0x10, 0x13, 0xC4, 0x43, 0x28, 0xF2, 0x5C, 0x29, 0x3D, 0xC9, 0x07, 0x7D, 0x26, 0x20, 0xA6, 0x5E, 0xFD, 0x49, 0xF7, 0xF7, 0x00, 0x3F, 0xB2, 0x48, 0xCC, 0x20, 0xF6, 0xB7, 0xA5, 0x6F, 0xA3, 0x86, 0x4E, 0xD4, 0xC9, 0x7A, 0xA4, 0x69, 0x8E, 0x6C, 0x21, 0xC6, 0x95, 0x05, 0xB9, 0x56, 0x69, 0x9D, 0x2C, 0x22, 0xB9, 0x85, 0xA5, 0x29, 0xF5, 0xE6, 0x99, 0xD0, 0x29, 0x0B, 0xE1, 0xE2, 0xE6, 0x8F, 0x24, 0x26, 0x43, 0xB5, 0x4D, 0x63, 0x82, 0x67, 0xB5, 0xB6, 0x33, 0xD5, 0x8B, 0x06, 0x2F, 0xD4, 0x16, 0xE2, 0x11, 0x15, 0xC2, 0x2C, 0x18, 0x11, 0x47, 0x5E, 0x36, 0x3C, 0x91, 0xFF, 0xF3, 0x07, 0x45, 0x57, 0x83, 0xC9, 0x34, 0x19, 0x01, 0x5A, 0x49, 0xCB, 0x0C, 0xBF, 0xF5, 0x34, 0xA2, 0x66, 0xF7, 0x9F, 0xDB, 0xE9, 0xAF, 0x22, 0x26, 0x04, 0x48, 0x26, 0x1E, 0x89, 0xFF, 0xA8, 0x4F, 0x57, 0x0D, 0x13, 0xF4, 0xAB, 0x82, 0xF0, 0x06, 0xE7, 0x33, 0xF9, 0xB1, 0xA6, 0x50, 0x53, 0x40, 0x2D, 0x3F, 0x1F, 0x72, 0xF0, 0x01, 0xE3, 0x3E, 0x8D, 0x37, 0x96, 0x7A, 0xFD, 0x17, 0xB4, 0xBC, 0x17, 0x39, 0xE4, 0xC3, 0x5C, 0x43, 0x01, 0xB4, 0x2F, 0x64, 0xE6, 0x92, 0xFD, 0xCE, 0x0D, 0x9C, 0x4D, 0xB4, 0x09, 0x63, 0x78, 0x9D, 0x05, 0xB6, 0xED, 0xC2, 0x50, 0x25, 0xB7, 0xF5, 0x75, 0x64, 0x6C, 0x16, 0xEC, 0xA0, 0x31, 0x37, 0x56, 0x28, 0xF5, 0xAD, 0xBB, 0xC6, 0xCA, 0x56, 0x6F, 0xF2, 0xA9, 0xAF, 0x90, 0x89, 0x05, 0xEE, 0x85, 0x5C, 0x87, 0xA8, 0xC5, 0xA9, 0xAF, 0xD8, 0xC2, 0x47, 0x3D, 0xDA, 0x1A, 0x73, 0x46, 0x7B, 0xFD, 0x77, 0x0E, 0x81, 0x0A, 0x22, 0x45, 0x2B, 0x6D, 0x9C, 0x99, 0x9E, 0xC8, 0x8A, 0x6E, 0x88, 0x7B, 0xBA, 0xA0, 0x7C, 0xC9, 0xE0, 0x0C, 0xC4, 0x8A, 0xA7, 0x5B, 0xD8, 0x5A, 0x2F, 0x2F, 0xBA, 0xD5, 0xD5, 0xD1, 0x34, 0x08, 0x77, 0x9E, 0x63, 0x4F, 0x7D, 0xDB, 0x8D, 0x94, 0x3C, 0x1D, 0x30, 0xCA, 0x94, 0x4C, 0x3E, 0xCD, 0x0F, 0x26, 0xDB, 0x76, 0x05, 0x09, 0xCC, 0xDD, 0x52, 0xA2, 0x22, 0x00, 0xAC, 0x3F, 0x08, 0x7F, 0xBB, 0xAA, 0x3F, 0x09, 0x04, 0x08, 0x8C, 0x56, 0xC4, 0xBF, 0x3B, 0xBC, 0x20, 0xB2, 0xF5, 0x14, 0xD6, 0x91, 0x30, 0x06, 0xAE, 0x5C, 0x80, 0xAE, 0xCA, 0xC6, 0x3D, 0x48, 0x34, 0x8A, 0x3B, 0xDB, 0x0F, 0x25, 0xA4, 0x63, 0xA9, 0xD2, 0xF1, 0x84, 0x03, 0x0E, 0xA0, 0xF7, 0xC2, 0x12, 0x53, 0xE9, 0x8C, 0x95, 0x85, 0x66, 0x0E, 0x79, 0x1C, 0xBA, 0x05, 0xB5, 0x75, 0x7A, 0x3A, 0xFB, 0x10, 0x4E, 0x5B, 0x98, 0xD6, 0xA1, 0x92, 0x7F, 0x0A, 0xA6, 0x3F, 0x8F, 0x1F, 0xD8, 0x2A, 0x73, 0xD6, 0x2F, 0x26, 0xA5, 0xC6, 0x0E, 0x9B, 0xD5, 0x92, 0xF0, 0x3A, 0xE6, 0x0D, 0x52, 0x67, 0xB1, 0x68, 0xC2, 0xC0, 0xEC, 0xFC, 0x4B, 0xEF, 0x40, 0xE4, 0x0F, 0xD9, 0x85, 0x3E, 0x27, 0x4C, 0x05, 0xDF, 0x11, 0x44, 0xC1, 0x69, 0xC2, 0x72, 0x10, 0xBC, 0xC4, 0x18, 0x5D, 0xEB, 0xE9, 0x21, 0x75, 0xDA, 0x12, 0x45, 0x12, 0xA0, 0xC5, 0xCA, 0x1C, 0xD2, 0x24, 0xCA, 0x49, 0x36, 0x41, 0xAE, 0xE1, 0x79, 0xEC, 0x5D, 0x28, 0x72, 0x72, 0x6D, 0xD3, 0xE5, 0xDC, 0x19, 0xF7, 0x5D, 0x1E, 0x34, 0xD6, 0x7B, 0x53, 0x39, 0xAB, 0xFB, 0x48, 0xA9, 0x33, 0x92, 0x98, 0xD1, 0x2D, 0x1A, 0x67, 0xAC, 0xB6, 0x95, 0xD5, 0x94, 0x94, 0xFA, 0x95, 0xA4, 0xAD, 0x75, 0x75, 0x4C, 0xEC, 0x6F, 0x0C, 0x62, 0x7D, 0xB3, 0x1D, 0x77, 0xDA, 0x9F, 0x3A, 0x4A, 0x1E, 0x4C, 0xD3, 0x36, 0x76, 0x0F, 0xCA, 0xD8, 0x4C, 0x0A, 0x82, 0x1E, 0xD2, 0xC3, 0x5D, 0x5C, 0xF7, 0x5E, 0xC3, 0x09, 0x71, 0x7D, 0x64, 0x54, 0xD9, 0x29, 0x95, 0xBC, 0x42, 0x35, 0x9F, 0x75, 0xBD, 0x89, 0x2E, 0xD9, 0x3A, 0x65, 0x0B, 0xC9, 0x24, 0x4C, 0x37, 0xFC, 0x14, 0x03, 0x70, 0xD1, 0x00, 0x9F, 0x83, 0x40, 0x93, 0x90, 0x2F, 0x94, 0xA3, 0x0F, 0x29, 0x72, 0xF2, 0x0F, 0x89, 0x34, 0x66, 0xB2, 0x1C, 0x52, 0xCC, 0x98, 0xDB, 0xA2, 0x85, 0xCC, 0x8E, 0x67, 0x9F, 0x8A, 0x70, 0xA1, 0xA0, 0x90, 0x48, 0x09, 0x63,  };

// Function: CRC 64: sec_c64_f. Needs pointer to LUT referenced by CRC64TAB.
#define CRC64FUN cff27e44
#define CRC64FUN_KEY (0x127E2D52U)
static uint8_t CRC64FUN[] = { 0x8B, 0xA6, 0xCF, 0xE0, 0x06, 0xC1, 0x0B, 0x89, 0x90, 0x55, 0x4E, 0x29, 0xE1, 0xBA, 0xAE, 0x9E, 0x35, 0x2B, 0xBD, 0x0E, 0xE6, 0x38, 0x3F, 0x0C, 0x10, 0xEB, 0xAE, 0x97, 0x23, 0x05, 0x38, 0x04, 0xA0, 0xAB, 0x46, 0x53, 0x91, 0x97, 0x38, 0x96, 0x90, 0x22, 0x65, 0xBD, 0x26, 0x0C, 0x0C, 0x46, 0xD5, 0x37, 0x9F, 0x2F, 0x0A, 0xF4,  };

// Function: Same as memcpy: sec_cpy_f.
#define MEMCPYFN bcfb8bf9
#define MEMCPYFN_KEY (0xEF1F9296U)
static uint8_t MEMCPYFN[] = { 0xFA, 0x54, 0x6B, 0x9B, 0xB3, 0xEB, 0x89, 0x38, 0xCA, 0xE6, 0x65, 0xE7, 0xE6, 0x4D, 0xCF, 0x67, 0xA5, 0x7C, 0x5F, 0x48, 0xE2, 0xD9, 0xC1, 0xD1, 0xDB, 0x4A, 0xC0, 0x97, 0x47, 0xBD, 0x64, 0x88, 0x96, 0x8F, 0x16, 0x75, 0x32, 0x49, 0x8A, 0x0E, 0x4A, 0x87, 0xE9, 0xB1, 0x6B, 0x30, 0x6B, 0xC6, 0x11, 0x0D, 0x9F, 0x37, 0xF0, 0x44, 0x7A, 0x9A, 0x29, 0x60, 0x8D, 0x4C, 0x2E, 0xC5, 0x22, 0x6B, 0x7D, 0x55, 0xA4, 0x81, 0x1E, 0x0B, 0xC2, 0x8D, 0xD1, 0xF5, 0x19, 0xBB, 0x5C, 0xE1, 0x8B, 0xFA, 0x78, 0x66, 0x73, 0x9E, 0x6C, 0x8D, 0x7E, 0xE2, 0x2D, 0x90, 0x5B, 0xE2,  };

// Function: Same as memmem: sec_mem_f.
#define MEMMEMFN dba68735
#define MEMMEMFN_KEY (0x05CB1CE9U)
static uint8_t MEMMEMFN[] = { 0x59, 0x9B, 0x8E, 0xBF, 0x3E, 0xD0, 0x2C, 0xED, 0x93, 0x50, 0x66, 0xC9, 0x71, 0x52, 0xD8, 0xBC, 0xF7, 0x23, 0xC2, 0xE0, 0xB3, 0x18, 0xAB, 0x95, 0xC7, 0x69, 0x9B, 0xF7, 0x21, 0x1C, 0x08, 0x67, 0x64, 0xD9, 0x96, 0x66, 0x34, 0x65, 0xE5, 0xD9, 0x57, 0x6A, 0x8A, 0xD5, 0x79, 0x0E, 0xFF, 0x95, 0x77, 0x3C, 0xFA, 0xB5, 0xC5, 0x1E, 0x90, 0xE1, 0xB9, 0x3A, 0x90, 0xE6, 0x69, 0x04, 0xF9, 0xF7, 0xF2, 0x25, 0x23, 0x25, 0x1B, 0xF2, 0x6A, 0x80, 0x39, 0xC5, 0x45, 0xC3, 0x55, 0x87, 0x87, 0x25, 0xD1, 0xE6, 0x37, 0x6C, 0x3E, 0x81, 0x18, 0x97, 0x1F, 0x97, 0xC2, 0x8A, 0xE4, 0x22, 0xE0, 0x75, 0x51, 0x67, 0x9F, 0x81, 0xAB, 0xB2, 0xCC, 0x85, 0x83, 0xB3, 0x96, 0x68, 0x23, 0x1E, 0x99, 0x12, 0x55, 0x64, 0x79, 0xE6, 0xC2, 0x89, 0x76, 0x65, 0xB4, 0xF0, 0x56, 0x47, 0x0C, 0x40, 0x4E, 0x54, 0xA4, 0x1B, 0xC3, 0x92, 0x5A, 0xBD, 0xAE, 0x51, 0xDF, 0x4F, 0x18, 0xDD, 0xF5, 0x23, 0x79, 0xC8, 0x0E, 0x41, 0x43, 0xCB, 0x09, 0xA8, 0xC7, 0xA6, 0x8F, 0xFA, 0x3B, 0x94, 0xF7, 0x96, 0xF1, 0xAE, 0xFD, 0x38, 0x18, 0x7F, 0xA0, 0x28, 0xD2, 0xA0, 0x90, 0x23, 0x0E, 0xB1, 0xA2, 0x62, 0xA9, 0xD0, 0x32, 0xEE, 0x93, 0x1B, 0x33, 0x11, 0xCF, 0xDD, 0xC3, 0x21, 0x62, 0xDB, 0xE6, 0x1E, 0xEA, 0xF8,  };

// Function: Memory XOR given RNG function and state: sec_mxr_f.
#define MEMXORRG b6eb4564
#define MEMXORRG_KEY (0x82827218U)
static uint8_t MEMXORRG[] = { 0x5C, 0xD0, 0x51, 0x9E, 0x51, 0x75, 0xC2, 0x19, 0x89, 0x50, 0xC0, 0x86, 0xBB, 0x34, 0x54, 0xAC, 0xB6, 0xA6, 0xAD, 0xE2, 0x1D, 0x9D, 0x83, 0x90, 0x41, 0xF3, 0xE4, 0xCA, 0x97, 0xE6, 0x05, 0xA5, 0xE7, 0x92, 0x7F, 0xA9, 0x4C, 0x83, 0xD9, 0xAB, 0x96, 0x28, 0x91, 0x89, 0x29, 0xF1, 0xE4, 0x1D, 0x26, 0x14, 0x98, 0x0B, 0x86, 0x9B, 0x74, 0xDF, 0x08, 0x1C, 0xE8, 0xAF, 0xA0, 0x74, 0x83, 0xEC, 0xB9, 0xDB, 0xC7, 0xE0, 0xD1, 0x90, 0xF7, 0x8F, 0xE6, 0x89, 0xF6, 0x40, 0xA9, 0x7E, 0x92, 0x5C, 0xD8, 0x89, 0x2C, 0xC0, 0x29, 0xCB, 0x3C, 0x87, 0x4B, 0x8A, 0x29, 0x47, 0x18, 0x87, 0x26, 0x25,  };

// Function: City Hash 64-Bit, up to 8 bytes: sec_h64_f.
#define HCITYB64 b133cb9a
#define HCITYB64_KEY (0xD51DD526U)
static uint8_t HCITYB64[] = { 0x42, 0x9E, 0xAF, 0x8C, 0xBF, 0x93, 0x18, 0x2F, 0x47, 0xA6, 0x66, 0x34, 0x99, 0x4A, 0x72, 0x3A, 0x3C, 0x54, 0xCB, 0x38, 0x73, 0xBD, 0xD0, 0x34, 0xA2, 0x87, 0x92, 0x38, 0x5C, 0x02, 0x50, 0x47, 0xE5, 0x9F, 0xD4, 0x80, 0x5D, 0x80, 0xF8, 0xD5, 0x6F, 0x3F, 0x20, 0x48, 0xCB, 0x4B, 0x88, 0x1B, 0xE4, 0x94, 0x06, 0xB8, 0x4F, 0x6B, 0x0A, 0xD5, 0x76, 0x8F, 0xD9, 0x95, 0x45, 0x05, 0xB3, 0x47, 0xC2, 0xF3, 0x75, 0xA6, 0xAF, 0x5D, 0x4B, 0x57, 0x6B, 0x40, 0x70, 0xB9, 0xBB, 0xB7, 0x77, 0x6D, 0x87, 0xA8, 0x32, 0x62, 0x17, 0x10, 0x8B, 0xCD, 0x7E, 0x8A, 0x5B, 0xED, 0xCA, 0xB4, 0xB2, 0x79, 0x9B, 0xB5, 0xF5, 0x45, 0x9C, 0x6D, 0x53, 0x0A, 0xAE, 0xBD, 0xD7, 0x8D, 0x00, 0x18, 0x2E, 0x2B, 0xF5, 0x7E, 0x3D, 0xCF, 0xCA, 0xC3, 0x24, 0x8D, 0xB0, 0x9B, 0x29, 0xFC, 0x2B, 0xF7, 0x53, 0x90, 0x6A, 0xA1, 0x2A, 0xAB, 0x58, 0x1E, 0x38, 0xBF, 0xB2, 0xF5, 0xBB, 0xAE, 0x65, 0x56, 0x2A, 0x66, 0xF8, 0x8A, 0x60, 0x59, 0xA5, 0x57, 0x60, 0x9C, 0x32, 0xDE, 0xBC, 0xB1, 0xB6, 0xA3, 0xCD, 0x2E, 0xFE, 0x08, 0x1D, 0x6F, 0x1C, 0x35, 0x16, 0xF7, 0xB7, 0xFA, 0x88, 0xB9, 0x25, 0x30, 0x3C, 0xF1, 0x77, 0xC3, 0x81, 0xA8, 0xC4, 0xAF, 0xA4, 0x69, 0xB4, 0x86, 0x53, 0xF4, 0x2B, 0xF3, 0xC5, 0x78, 0x92, 0x9D, 0x7C, 0xB2, 0x08, 0xAD, 0x2B, 0xA7, 0x6E, 0x7C, 0x68, 0x96, 0x36, 0xEB, 0xFA, 0x4E, 0x5C, 0x31, 0x4F, 0x09, 0xE2, 0xE7, 0x09, 0x27, 0x89, 0xDF, 0x16, 0x7D, 0x68, 0x5F, 0xF3, 0x57, 0x65, 0xB5, 0xED, 0x23, 0x1E, 0x7E, 0xE8, 0x6C, 0xD3, 0x71, 0xDC, 0x84, 0x4D, 0x58, 0x64, 0x59, 0x63, 0x5D, 0xAD, 0xE1, 0x41, 0xD2, 0x60, 0xE2, 0xC5, 0x73, 0x33, 0x55, 0xCA, 0x75, 0x82, 0x8F, 0xA8, 0xE1, 0x49, 0x24, 0xAF, 0x5A, 0xB5, 0xA8, 0x43, 0xCA, 0x33, 0x19, 0x9D, 0x2E, 0xB2, 0xBA, 0xDD, 0xFB, 0x50, 0x2B, 0x35, 0xD5, 0xCB, 0x5D, 0x49, 0xB7, 0xDD, 0xE5, 0x29, 0xB7, 0xC2, 0x43, 0xA0, 0xE6, 0xE3, 0x90, 0xBF, 0xEC, 0x00, 0x41, 0xE4, 0x77, 0x9E, 0x61, 0xF6, 0x3E, 0xB5, 0x8A, 0x1E, 0xAA, 0xB3, 0x02, 0xEE, 0xFB, 0x7B, 0xFB, 0xBF, 0x2D, 0xDC, 0xDC, 0x21, 0xED, 0xA2, 0x44, 0xBE, 0x5B, 0x79, 0xFD, 0x17, 0xF7, 0x36, 0xED, 0x4D, 0xFC, 0x80, 0xDD, 0xEC, 0xF2, 0x78, 0x8B, 0xDD, 0xCD, 0x70, 0x26, 0x13, 0xE8, 0xF7, 0x37, 0xCC, 0x43, 0x2D, 0x0F, 0x00, 0xC2, 0x52, 0x7A, 0x94, 0x4B, 0xA4, 0xEE, 0x5F, 0xC7, 0xAE, 0xDF, 0xD1, 0x98, 0x75, 0x96, 0x73, 0xE5, 0x70, 0x21, 0xC8, 0x4D, 0xDD, 0x7D, 0x6D, 0xFD, 0x56, 0xC9, 0x1B, 0x0B, 0x1D, 0xC6, 0x6F, 0xDC, 0x09, 0x21, 0x86, 0xFA, 0xC0, 0x0B, 0xF5, 0x18, 0xCC, 0x4E, 0xA3, 0xA4, 0x86, 0xDB, 0x23, 0x98, 0xAC, 0xA2, 0xA0, 0x33, 0x2C, 0xD5, 0x9A, 0x43, 0x59, 0x66, 0x88, 0x22, 0x94, 0x5C, 0x74, 0xC1, 0xE7, 0xA1, 0x1D, 0x1F, 0x7E, 0x69, 0x5B, 0x34, 0x03, 0x9D, 0xE0, 0x96, 0x06, 0xED, 0x17, 0xCB, 0xA9, 0xCC, 0xD8, 0x50, 0x1F, 0xC6, 0x0C, 0x26, 0x8C, 0x9E, 0x73, 0xA1, 0x9B, 0x07, 0xCC, 0x49, 0xCA, 0xF5, 0x39, 0x64, 0xDB, 0x19, 0x72, 0x42, 0x64, 0x6E, 0xB6, 0x24, 0x00, 0x75, 0xDE, 0xC3, 0x1F, 0x18, 0x1C, 0xD7, 0x4F, 0xB9, 0x3D, 0xD3, 0x61, 0x4C, 0xBC, 0x0B, 0x67, 0xA4, 0x85, 0x4C, 0x74, 0xF0, 0x6E, 0xC5, 0x80, 0x96, 0x8D, 0x8E, 0x02, 0x76, 0xE7, 0xE3, 0x32, 0xCF, 0xC6, 0xA8, 0xFE, 0x30, 0x98, 0xE5, 0x63, 0x6F, 0x40, 0x73, 0x98, 0x2D, 0xEC, 0xF3, 0x4F, 0x82, 0xB9, 0x7C, 0x3D, 0x9C, 0x5B, 0x8B, 0x48, 0x13, 0x24, 0xC8, 0xDC, 0x9B, 0x41, 0x90, 0xDE, 0xD3, 0x20, 0xD9, 0x98, 0x2E, 0x58, 0x15, 0x76, 0x09, 0xC4, 0x46, 0x22, 0xF1, 0xD5, 0xB9, 0xD1, 0xB6, 0x63, 0x7E, 0xF2, 0x40, 0xEE, 0x33, 0x61, 0xE7, 0x74, 0xC7, 0xD0, 0x26, 0xBF, 0xD7, 0x14, 0xB9, 0x84, 0xD2, 0x8F, 0x8C, 0xD4, 0x33, 0x5C, 0x27, 0x29, 0x6A, 0x22, 0xF9, 0x4A, 0xB8, 0x43, 0x3B, 0x02, 0xB1, 0x25, 0x8B, 0xE3, 0xE6, 0xE8, 0xD4, 0xD8, 0xA8, 0xD9, 0x55, 0xAF, 0xEE, 0x8F, 0x3A, 0xE1, 0xA0, 0x51, 0x15, 0x36, 0x5C, 0x7C,  };

// Function: Murmur Hash 32-Bit: sec_h32_f.
#define HMURMU32 ed4de135
#define HMURMU32_KEY (0x0D4DED51U)
static uint8_t HMURMU32[] = { 0x15, 0x31, 0x90, 0xC2, 0x54, 0x7D, 0xB5, 0xF8, 0x8D, 0x88, 0xB4, 0x11, 0x06, 0xE7, 0x84, 0x41, 0x49, 0x7B, 0x16, 0xCB, 0x31, 0x30, 0x2B, 0x75, 0x93, 0x63, 0x03, 0x1E, 0xDF, 0x73, 0x94, 0x0E, 0x37, 0x93, 0x5E, 0xA1, 0x8D, 0x4E, 0xB0, 0x35, 0x75, 0xA0, 0x8E, 0xAD, 0xD3, 0x65, 0x8A, 0x01, 0x68, 0x84, 0x51, 0x03, 0x8F, 0xBF, 0xE3, 0xF8, 0xA4, 0x53, 0xA2, 0x43, 0x72, 0x95, 0x13, 0x61, 0x9C, 0x82, 0x4E, 0x75, 0xA1, 0xE4, 0xE5, 0x55, 0x85, 0x98, 0x20, 0x76, 0x21, 0x22, 0x0C, 0x6D, 0xDB, 0xCE, 0x16, 0xE9, 0x37, 0x85, 0x83, 0x74, 0xAB, 0x6B, 0xD6, 0xD8, 0xA3, 0xDF, 0xF6, 0x67, 0x99, 0xA2, 0x88, 0x68, 0xA8, 0x0A, 0xF9, 0x49, 0x15, 0xB5, 0x8A, 0x11, 0xE4, 0xF0, 0xE2, 0x7B, 0x9D, 0xF3, 0x5F, 0xED, 0x9A, 0xDF, 0xC9, 0x3A, 0x00, 0xDD, 0x26, 0x9B, 0x81, 0x60, 0x7A, 0x1F, 0xBD, 0xC2, 0x8B, 0x9F, 0x3A, 0x31, 0x2C, 0xB4, 0x25, 0x2C, 0xB1, 0x12, 0x55, 0x94, 0x2E, 0x86, 0x27, 0x3B, 0x92, 0x30, 0xE1, 0x5B, 0x82, 0xD9, 0x1D, 0x33, 0xF0, 0xDB, 0x51, 0x35, 0x32, 0x5E, 0xC4, 0xA5, 0x95, 0xFF, 0x3C, 0x48, 0x5C, 0x02, 0x10, 0x6E, 0xD7, 0x6D, 0x42, 0x93, 0xEB, 0xCC, 0x4E, 0x95, 0xE9, 0x00,  };

// Function: Murmur Hash 64-Bit: sec_h64_f.
#define HMURMU64 db665286
#define HMURMU64_KEY (0x24F38B7CU)
static uint8_t HMURMU64[] = { 0xE0, 0xD4, 0xB5, 0x7A, 0x3D, 0xD6, 0x73, 0xD2, 0x03, 0x8C, 0x03, 0xE6, 0x70, 0x96, 0xD1, 0xD9, 0xA8, 0x1D, 0xBA, 0x2F, 0xF1, 0xE7, 0xBB, 0xBF, 0x7F, 0x28, 0x72, 0x20, 0xF5, 0x2C, 0xAF, 0x4C, 0x0F, 0x54, 0x80, 0xFC, 0xEA, 0xBF, 0x98, 0x79, 0x1C, 0xB8, 0x48, 0x36, 0x0B, 0x89, 0xDA, 0x72, 0x35, 0xF9, 0x2D, 0xEE, 0x4D, 0xDC, 0xBD, 0x00, 0x20, 0x78, 0xAF, 0x5B, 0x60, 0x9F, 0xF0, 0x1D, 0xEB, 0xE0, 0x0A, 0x84, 0xB9, 0x9E, 0xDD, 0xCD, 0x8E, 0xCC, 0x76, 0xEF, 0x31, 0x1E, 0x46, 0x78, 0xAE, 0x62, 0xBF, 0xD1, 0xB8, 0xDF, 0x24, 0xCF, 0x18, 0xE9, 0x19, 0xEF, 0x4D, 0x4A, 0xF3, 0x02, 0x68, 0x55, 0x4F, 0xCD, 0x55, 0xCE, 0x41, 0x97, 0x43, 0xCC, 0x28, 0x08, 0x48, 0xB5, 0x55, 0xE9, 0x6E, 0xDF, 0x19, 0x25, 0x83, 0xFD, 0xDE, 0x9F, 0x3B, 0xBA, 0x2D, 0x95, 0xE0, 0xAB, 0xE1, 0x6A, 0x88, 0x67, 0x79, 0x74, 0xDA, 0xCC, 0x39, 0xCB, 0x98, 0x09, 0xFE, 0x14, 0x65, 0xC3, 0xCB, 0x77, 0x70, 0xE2, 0xA9, 0xCD, 0x03, 0x97, 0x59, 0xF4, 0x82, 0x90, 0x2B, 0x2B, 0x32, 0x52, 0xC5, 0x81, 0xA1, 0x29, 0x2C, 0xC6, 0x92, 0xF8, 0x9C, 0x9C, 0x15, 0xA3, 0x28, 0x59, 0xA8, 0x49, 0x62, 0x4E, 0xA5, 0x02, 0x05, 0x5D, 0x23, 0xDA, 0x9A, 0xD3, 0x5B, 0x1C, 0x7B, 0x13, 0xE7, 0xD6, 0x34, 0x19, 0x0B, 0xE3, 0x4A, 0xFD, 0x8C, 0x3F, 0x11, 0xBA, 0xF3, 0x3A, 0x98, 0x37, 0x31, 0x4D, 0xA9, 0xDC, 0xBB, 0x9F, 0xE4, 0x74, 0x2C, 0xA2, 0x8F, 0x03, 0x29, 0xAB, 0x03, 0xBC, 0x96, 0x45, 0xE7, 0xAD, 0x8A, 0x0B, 0xBD, 0x68, 0x1E, 0x15, 0x8F, 0x22, 0xBF, 0x2F, 0xD8, 0x1A, 0xCA, 0x02, 0x64, 0x67, 0x44, 0xD4, 0x7B, 0x3F, 0x40, 0x75, 0x65, 0xBE, 0xB2, 0xCF, 0x70, 0xC2, 0x4B, 0xD2, 0x91, 0x14, 0x66, 0x78, 0x7C, 0xE3, 0xAD, 0x59, 0xDD, 0xBF, 0x2C, 0x59, 0xC8, 0xAF, 0xAA, 0xEC, 0x36, 0x51, 0xBA, 0xC5, 0x28, 0xD4, 0x1D, 0x77, 0x70, 0x0D, 0x57, 0xCD, 0x19, 0x3B, 0xB6, 0xEB, 0x01, 0xA8, 0x83, 0xF9, 0x8E, 0xF6, 0x3D, 0xDC, 0x20, 0x91, 0x42, 0x43, 0x14, 0x81, 0x7B, 0x5D, 0xC5, 0xC9, 0x70, 0x43, 0xD0, 0x79, 0xE3, 0x9C, 0xE9, 0x96, 0x9D, 0x75, 0xF7, 0xB3, 0xAD, 0x27, 0xD5, 0x2B, 0x5D, 0x86, 0x3F, 0x1D, 0xA5, 0xD5, 0xD7, 0xC2, 0xEA, 0x0D, 0xBB, 0x1B, 0xDB, 0x97, 0xE9, 0x78, 0x5C, 0x9D, 0xB8, 0xFA, 0x8F, 0xC9, 0xD2, 0x3D, 0xBE, 0xDD, 0xF5, 0x24, 0x26, 0x67, 0x4D, 0x48, 0x14, 0xC0, 0x0D, 0xAD, 0x36, 0x35, 0x51, 0x0B, 0x77, 0x9F, 0x71, 0x35, 0xE0, 0x1C, 0xDF, 0x1B, 0x08, 0x0B, 0x22, 0xCD, 0xB5, 0x93, 0x38, 0x60, 0x39, 0x7F, 0x9D, 0x67, 0x2C, 0x8A, 0xEF, 0xB9, 0xE9, 0xB4, 0xAA, 0x40, 0x7A, 0x36, 0x0A, 0x14, 0x88, 0x79, 0xEC, 0x41, 0x69, 0x19, 0x9C, 0x71, 0xA7, 0xC0, 0xAD, 0xDC, 0x59, 0x9E, 0x08, 0x51, 0x45, 0x44, 0xEA, 0xD9, 0x3D, 0x83, 0x84, 0x94, 0x54, 0x4F, 0x0F, 0x64, 0x5B, 0xD6, 0x93, 0x69, 0x4B, 0xA0, 0x8B, 0x56, 0x17, 0x5A, 0x44, 0xDB, 0xF5, 0x5D, 0xE9, 0xC8, 0x0A, 0xCF, 0x7E, 0x7F, 0x1C, 0x34, 0x42, 0xB6, 0x43, 0xA8, 0xF0, 0x12, 0x50, 0xFA, 0x60, 0xF0, 0x1F, 0x69, 0x33, 0x84, 0xA7, 0x2A, 0x8E, 0xB2, 0x93, 0x69, 0xC5, 0xAF, 0x12, 0x8D, 0x55, 0xE8, 0xEB, 0xC0, 0x18, 0x22, 0xD3, 0xAE, 0xB3, 0xE2, 0x02, 0x8C, 0x52, 0x0E, 0x03, 0x5B, 0x97, 0xD3, 0xCB, 0x6D, 0xCF, 0xC9, 0x0D, 0x28, 0x66, 0x55, 0xCC, 0x09, 0x9C, 0x4F, 0x31, 0xEB, 0x79, 0xE4,  };

