# ran-x86-x64-le.code - Assorted 64-bit random number generators.


# Modified Fishman-20 64 state size.
SZ: ran_a_state = sizeof(uint64_t);
# Modified Fishman-20 64 generate. 
IF: ran_a_rand = 48, 89, 5C, 24, 08, 48, 89, 6C, 24, 10, 48, 89, 74, 24, 18, 48, 89, 7C, 24, 20, 41, 56, 4C, 8B, C9, 49, BB, 69, D8, 3B, 4C, C8, 89, 47, 5E, 49, 8B, C3, 48, F7, 21, 48, 69, 09, 8F, BC, 00, 00, 48, C1, EA, 0E, 48, 69, C2, FF, FF, FF, 7F, 48, 2B, C8, 79, 0C, 48, 8D, 81, FF, FF, FF, 7F, 49, 89, 01, EB, 03, 49, 89, 09, 41, 8B, 01, 45, 8B, 41, 04, 4C, 33, C0, B8, 01, 00, 00, 80, 4C, 0B, C0, 49, 8B, C3, 49, F7, 21, 48, C1, EA, 0E, 48, 69, C2, FF, FF, FF, 7F, 49, 69, 11, 8F, BC, 00, 00, 48, 2B, D0, 79, 0C, 48, 8D, 82, FF, FF, FF, 7F, 49, 89, 01, EB, 03, 49, 89, 11, 41, 8B, 01, BB, 00, 00, FF, FF, 41, 8B, 51, 04, 48, BF, 00, FF, 00, 00, 00, FF, 00, 00, 48, 33, D0, 48, BE, F0, 00, F0, 00, F0, 00, F0, 00, 49, 33, D0, 48, BD, 0C, 0C, 0C, 0C, 0C, 0C, 0C, 0C, 48, 8B, CA, 49, BE, 22, 22, 22, 22, 22, 22, 22, 22, 48, C1, E9, 10, 48, 33, CA, 48, 23, CB, 48, 8B, C1, 48, C1, E0, 10, 48, 33, C1, 48, 33, D0, 48, 8B, CA, 48, C1, E9, 08, 48, 33, CA, 48, 23, CF, 48, 8B, C1, 48, C1, E0, 08, 48, 33, C1, 48, 33, D0, 48, 8B, CA, 48, C1, E9, 04, 48, 33, CA, 48, 23, CE, 48, 8B, C1, 48, C1, E0, 04, 48, 33, C1, 48, 33, D0, 48, 8B, CA, 48, C1, E9, 02, 48, 33, CA, 48, 23, CD, 48, 8D, 04, 8D, 00, 00, 00, 00, 48, 33, C1, 48, 33, D0, 49, 8B, C3, 48, 8B, CA, 48, D1, E9, 48, 33, CA, 49, 23, CE, 4C, 8D, 14, 09, 4C, 33, D1, 4C, 33, D2, 49, F7, 21, 48, C1, EA, 0E, 48, 69, C2, FF, FF, FF, 7F, 49, 69, 11, 8F, BC, 00, 00, 48, 2B, D0, 79, 0C, 48, 8D, 82, FF, FF, FF, 7F, 49, 89, 01, EB, 03, 49, 89, 11, 49, F7, D0, B9, 20, 00, 00, 00, BA, FF, FF, FF, FF, 90, 48, 8B, C2, 49, 23, C0, 48, D3, E0, 4C, 33, C0, 48, D1, E9, 48, 8B, C2, 48, D3, E0, 48, 33, D0, 48, 85, C9, 75, E3, 41, 8B, 01, 41, 8B, 51, 04, 48, 33, D0, 49, 33, D0, 49, 33, D2, 48, 8B, CA, 48, C1, E9, 10, 48, 33, CA, 48, 23, CB, 48, 8B, 5C, 24, 10, 48, 8B, C1, 48, C1, E0, 10, 48, 33, C1, 48, 33, D0, 48, 8B, CA, 48, C1, E9, 08, 48, 33, CA, 48, 23, CF, 48, 8B, 7C, 24, 28, 48, 8B, C1, 48, C1, E0, 08, 48, 33, C1, 48, 33, D0, 48, 8B, CA, 48, C1, E9, 04, 48, 33, CA, 48, 23, CE, 48, 8B, 74, 24, 20, 48, 8B, C1, 48, C1, E0, 04, 48, 33, C1, 48, 33, D0, 48, 8B, CA, 48, C1, E9, 02, 48, 33, CA, 48, 23, CD, 48, 8B, 6C, 24, 18, 48, 8D, 04, 8D, 00, 00, 00, 00, 48, 33, C1, 48, 33, D0, 48, 8B, CA, 48, D1, E9, 48, 33, CA, 49, 23, CE, 48, 8D, 04, 09, 48, 33, C1, 48, 33, C2, 41, 5E, C3;
# Modified Fishman-20 64 seed.
IF: ran_a_seed = 48, 85, D2, 4C, 8B, C9, 48, B9, FF, FF, FF, FF, FF, FF, FF, 7F, 41, B8, DD, FF, FF, 3F, 4C, 0F, 45, C2, 33, D2, 49, 8B, C0, 48, F7, F1, B8, 01, 00, 00, 00, 48, 85, D2, BA, FF, FF, FF, FF, 4C, 0F, 44, C0, 4C, 23, C1, B9, 20, 00, 00, 00, 0F, 1F, 44, 00, 00, 48, 8B, C2, 49, 23, C0, 48, D3, E0, 4C, 33, C0, 48, D1, E9, 48, 8B, C2, 48, D3, E0, 48, 33, D0, 48, 85, C9, 75, E3, 4D, 89, 01, C3;


# Modified GFSR4 64 state size.
SZ: ran_b_state = (sizeof(int32_t) + (sizeof(uint32_t) * 0x4000));
# Modified GFSR4 64 generate.
IF: ran_b_rand = 8B, 01, 4C, 8B, C9, FF, C0, 25, FF, 3F, 00, 00, 44, 8B, C0, 05, 27, 1A, 00, 00, 25, FF, 3F, 00, 00, 44, 89, 01, 8B, 54, 81, 04, 41, 8D, 80, B4, E4, FF, FF, 25, FF, 3F, 00, 00, 8B, 44, 81, 04, 48, 33, D0, 41, 8D, 80, CE, F9, FF, FF, 25, FF, 3F, 00, 00, 8B, 4C, 81, 04, 41, 8D, 80, 29, FE, FF, FF, 25, FF, 3F, 00, 00, 48, 33, D1, 41, 8B, 4C, 81, 04, 48, 33, D1, 48, 8B, C2, 48, C1, E8, 20, 33, C2, 43, 89, 44, 81, 04, 49, 63, 09, 45, 8B, 54, 89, 04, 8D, 41, 01, 25, FF, 3F, 00, 00, 44, 8B, C0, 05, 27, 1A, 00, 00, 25, FF, 3F, 00, 00, 45, 89, 01, 41, 8B, 54, 81, 04, 41, 8D, 80, B4, E4, FF, FF, 25, FF, 3F, 00, 00, 41, 8B, 44, 81, 04, 48, 33, D0, 41, 8D, 80, CE, F9, FF, FF, 25, FF, 3F, 00, 00, 41, 8B, 4C, 81, 04, 41, 8D, 80, 29, FE, FF, FF, 25, FF, 3F, 00, 00, 48, 33, D1, 41, 8B, 4C, 81, 04, 48, 33, D1, 48, 8B, C2, 48, C1, E8, 20, 33, C2, 43, 89, 44, 81, 04, 49, 63, 11, 41, 8B, 4C, 91, 04, 8D, 42, 01, 25, FF, 3F, 00, 00, 41, 33, CA, 44, 8B, C0, 49, F7, D2, 05, 27, 1A, 00, 00, 45, 89, 01, 25, FF, 3F, 00, 00, 89, 4C, 24, 08, 41, 8B, 54, 81, 04, 41, 8D, 80, B4, E4, FF, FF, 25, FF, 3F, 00, 00, 41, 8B, 44, 81, 04, 48, 33, D0, 41, 8D, 80, CE, F9, FF, FF, 25, FF, 3F, 00, 00, 41, 8B, 4C, 81, 04, 41, 8D, 80, 29, FE, FF, FF, 25, FF, 3F, 00, 00, 48, 33, D1, 41, 8B, 4C, 81, 04, 48, 33, D1, B9, 20, 00, 00, 00, 48, 8B, C2, 48, C1, E8, 20, 33, C2, 43, 89, 44, 81, 04, 49, 63, 01, 45, 8B, 44, 81, 04, BA, FF, FF, FF, FF, 0F, 1F, 40, 00, 66, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 48, 8B, C2, 49, 23, C2, 48, D3, E0, 4C, 33, D0, 48, D1, E9, 48, 8B, C2, 48, D3, E0, 48, 33, D0, 48, 85, C9, 75, E3, BA, 00, 00, FF, FF, 45, 33, D0, 44, 89, 54, 24, 0C, 48, 8B, 44, 24, 08, 48, 8B, C8, 48, C1, E9, 10, 48, 33, C8, 48, 23, CA, 48, 8B, D1, 48, C1, E2, 10, 48, 33, D1, 48, 33, D0, 48, B8, 00, FF, 00, 00, 00, FF, 00, 00, 48, 8B, CA, 48, C1, E9, 08, 48, 33, CA, 48, 23, C8, 48, 8B, C1, 48, C1, E0, 08, 48, 33, C1, 48, 33, D0, 48, B8, F0, 00, F0, 00, F0, 00, F0, 00, 48, 8B, CA, 48, C1, E9, 04, 48, 33, CA, 48, 23, C8, 48, 8B, C1, 48, C1, E0, 04, 48, 33, C1, 48, 33, D0, 48, B8, 0C, 0C, 0C, 0C, 0C, 0C, 0C, 0C, 48, 8B, CA, 48, C1, E9, 02, 48, 33, CA, 48, 23, C8, 48, 8D, 04, 8D, 00, 00, 00, 00, 48, 33, C1, 48, 33, D0, 48, B8, 22, 22, 22, 22, 22, 22, 22, 22, 48, 8B, CA, 48, D1, E9, 48, 33, CA, 48, 23, C8, 48, 8D, 04, 09, 48, 33, C1, 48, 33, C2, C3;
# Modified GFSR4 64 seed.
IF: ran_b_seed = 48, 89, 5C, 24, 08, 48, 89, 74, 24, 10, 48, 89, 7C, 24, 18, 83, CB, FF, 41, BA, 05, 11, 00, 00, 48, 85, D2, 48, 8B, F1, 41, B8, 00, 00, 00, 80, 4C, 0F, 45, D2, 45, 33, DB, 0F, 1F, 44, 00, 00, 33, C0, 45, 8B, C8, 8D, 78, 10, 0F, 1F, 84, 00, 00, 00, 00, 00, 49, 69, CA, CD, 0D, 01, 00, 41, 8B, D1, 0B, D0, 49, 23, C8, 0F, 44, D0, 41, D1, E9, 49, 69, C2, 29, 76, 58, 1C, 8B, C8, 44, 8B, D0, 8B, C2, 41, 0B, C1, 49, 23, C8, 0F, 44, C2, 41, D1, E9, 48, 83, EF, 01, 75, CB, 42, 89, 44, 9E, 04, 49, FF, C3, 49, 81, FB, FF, 3F, 00, 00, 7E, AA, 48, 8D, 4E, 20, 8D, 57, 20, 0F, 1F, 00, 8B, C3, D1, EB, 23, 01, 48, 8D, 49, 0C, 41, 0B, C0, 41, D1, E8, 89, 41, F4, 48, 83, EA, 01, 75, E7, 48, 8B, 5C, 24, 08, 48, 8B, 7C, 24, 18, C7, 06, 20, 00, 00, 00, 48, 8B, 74, 24, 10, C3;


# Mersenne Twister 19937 64 state size.
SZ: ran_c_state = (sizeof(int32_t) + (sizeof(uint64_t) * 0x0138));
# Mersenne Twister 19937 64 generate.
IF: ran_c_rand = 48, 83, EC, 18, 48, B8, E9, 19, 66, A9, 5A, 6F, 02, B5, 48, C7, 04, 24, 00, 00, 00, 00, 48, 89, 44, 24, 08, 4C, 8B, D1, 8B, 01, 3D, 38, 01, 00, 00, 0F, 8C, 1C, 01, 00, 00, 3D, 39, 01, 00, 00, 75, 55, 48, C7, 41, 04, 71, 15, 00, 00, 48, 8D, 51, 0C, 41, B8, 01, 00, 00, 00, 44, 8D, 48, FE, 49, BB, 2D, 7F, 95, 4C, 2D, F4, 51, 58, 0F, 1F, 40, 00, 66, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 48, 8B, 4A, F8, 48, 8D, 52, 08, 48, C1, E9, 3E, 48, 33, 4A, F0, 49, 0F, AF, CB, 49, 03, C8, 49, FF, C0, 48, 89, 4A, F8, 49, 83, E9, 01, 75, DC, 45, 89, 0A, 45, 33, C9, 41, B8, 9C, 00, 00, 00, 43, 8B, 54, CA, 0C, 43, 33, 54, CA, 04, 0F, BA, F2, 1F, 4B, 33, 54, CA, 04, 48, 8B, C2, 48, D1, EA, 83, E0, 01, 48, 8B, 0C, C4, 48, 33, CA, 4B, 33, 8C, CA, E4, 04, 00, 00, 4B, 89, 4C, CA, 04, 49, FF, C1, 4D, 3B, C8, 7C, C8, 0F, 1F, 84, 00, 00, 00, 00, 00, 43, 8B, 54, C2, 0C, 43, 33, 54, C2, 04, 0F, BA, F2, 1F, 4B, 33, 54, C2, 04, 48, 8B, C2, 48, D1, EA, 83, E0, 01, 48, 8B, 0C, C4, 48, 33, CA, 4B, 33, 8C, C2, 24, FB, FF, FF, 4B, 89, 4C, C2, 04, 49, FF, C0, 49, 81, F8, 37, 01, 00, 00, 7C, C4, 41, 8B, 52, 04, 41, 33, 92, BC, 09, 00, 00, 0F, BA, F2, 1F, 49, 33, 92, BC, 09, 00, 00, 48, 8B, C2, 48, D1, EA, 83, E0, 01, 48, 8B, 0C, C4, 49, 33, 8A, DC, 04, 00, 00, 48, 33, CA, 49, 89, 8A, BC, 09, 00, 00, 41, C7, 02, 00, 00, 00, 00, 49, 63, 02, 48, BA, 55, 55, 55, 55, 05, 00, 00, 00, 49, 8B, 4C, C2, 04, 48, 8B, C1, 48, C1, E8, 1D, 48, 23, C2, 48, BA, D3, F6, FF, 3F, EB, 38, 00, 00, 48, 33, C8, 48, 8B, C1, 48, 23, C2, 48, C1, E0, 11, 48, 33, C8, 48, 8B, C1, 48, 25, 77, BF, FF, FF, 48, C1, E0, 25, 48, 33, C8, 48, 8B, C1, 48, C1, E8, 2B, 48, 33, C1, 48, 83, C4, 18, C3;
# Mersenne Twister 19937 64 seed.
IF: ran_c_seed = 48, 89, 51, 04, 48, 8D, 41, 0C, 41, B9, 01, 00, 00, 00, 41, BA, 37, 01, 00, 00, 49, BB, 2D, 7F, 95, 4C, 2D, F4, 51, 58, 66, 90, 4C, 8B, 40, F8, 48, 8D, 40, 08, 49, C1, E8, 3E, 4C, 33, 40, F0, 4D, 0F, AF, C3, 4D, 03, C1, 49, FF, C1, 4C, 89, 40, F8, 49, 83, EA, 01, 75, DC, 44, 89, 11, C3;


# Split Mix 64 extended state size.
SZ: ran_d_state = sizeof(uint64_t);
# Split Mix 64 extended generate.
IF: ran_d_rand = 48, B8, 15, 7C, 4A, 7F, B9, 79, 37, 9E, 48, 01, 01, 48, 8B, 01, 48, 8B, C8, 48, C1, E9, 1E, 48, 33, C8, 48, B8, B9, E5, E4, 1C, 6D, 47, 58, BF, 48, 0F, AF, C8, 48, B8, EB, 11, 31, 13, BB, 49, D0, 94, 48, 8B, D1, 48, C1, EA, 1B, 48, 33, D1, 48, 0F, AF, D0, 48, 8B, C2, 48, C1, E8, 1F, 48, 33, C2, C3;
# Split Mix 64 extended seed.
IF: ran_d_seed = 40, 53, 48, 8B, D9, 48, 85, D2, B8, 00, 00, FF, FF, 41, B8, DD, FF, FF, 3F, 4C, 0F, 45, C2, 4C, 89, 01, 4D, 8B, C8, 49, F7, D1, 49, 8B, D1, 48, C1, EA, 10, 49, 33, D1, 48, 23, D0, 48, 8B, C2, 48, C1, E0, 10, 48, 33, C2, 4C, 33, C8, 48, B8, 00, FF, 00, 00, 00, FF, 00, 00, 49, 8B, C9, 48, C1, E9, 08, 49, 33, C9, 48, 23, C8, 48, 8B, C1, 48, C1, E0, 08, 48, 33, C1, 4C, 33, C8, 48, B8, F0, 00, F0, 00, F0, 00, F0, 00, 49, 8B, C9, 48, C1, E9, 04, 49, 33, C9, 48, 23, C8, 48, 8B, C1, 48, C1, E0, 04, 48, 33, C1, 4C, 33, C8, 48, B8, 0C, 0C, 0C, 0C, 0C, 0C, 0C, 0C, 49, 8B, C9, 48, C1, E9, 02, 49, 33, C9, 48, 23, C8, 48, 8D, 04, 8D, 00, 00, 00, 00, 48, 33, C1, 4C, 33, C8, 48, B8, 22, 22, 22, 22, 22, 22, 22, 22, 49, 8B, C9, 48, D1, E9, 49, 33, C9, 48, 23, C8, 48, 8D, 04, 09, 48, 33, C1, 4C, 33, C8, 48, B8, F1, F0, F0, F0, F0, F0, F0, F0, 49, FF, C0, 4D, 8B, D1, 49, F7, E0, 48, C1, EA, 04, 48, 6B, C2, 11, BA, FF, FF, FF, FF, 4C, 2B, C0, 41, 83, E0, 3F, 41, 0F, B6, C8, F6, D9, 80, E1, 3F, 49, D3, EA, 41, 8B, C8, 49, D3, E1, B9, 20, 00, 00, 00, 4D, 0B, D1, 0F, 1F, 84, 00, 00, 00, 00, 00, 48, 8B, C2, 49, 23, C2, 48, D3, E0, 4C, 33, D0, 48, D1, E9, 48, 8B, C2, 48, D3, E0, 48, 33, D0, 48, 85, C9, 75, E3, 66, 45, 85, D2, 74, 17, 41, 0F, B7, CA, B8, E1, 83, 0F, 3E, F7, E1, C1, EA, 03, 6B, C2, 21, 2B, C8, 44, 0F, B7, D1, 66, 41, 83, C2, 0B, 45, 33, C9, 66, 45, 3B, CA, 0F, 83, CD, 00, 00, 00, 48, 89, 6C, 24, 10, 48, BD, EB, 11, 31, 13, BB, 49, D0, 94, 48, 89, 74, 24, 18, 48, BE, B9, E5, E4, 1C, 6D, 47, 58, BF, 48, 89, 7C, 24, 20, 48, BF, 15, 7C, 4A, 7F, B9, 79, 37, 9E, 0F, 1F, 80, 00, 00, 00, 00, 48, 01, 3B, 4C, 8B, 1B, 49, 8B, C3, 48, C1, E8, 1E, 49, 33, C3, 48, 0F, AF, C6, 4C, 8B, C0, 49, C1, E8, 1B, 4C, 33, C0, 4C, 0F, AF, C5, 41, F6, C1, 01, 74, 2F, 4D, 85, C0, 74, 2A, 33, D2, 41, 0F, B7, C9, 83, C1, 02, 49, 8B, C0, 48, F7, F1, 49, 8B, C0, 48, FF, C2, 83, E2, 3F, 0F, B6, CA, F6, D9, 80, E1, 3F, 48, D3, E0, 8B, CA, 49, D3, E8, EB, 1C, 41, 0F, B7, D1, 49, 8B, C0, FF, C2, 83, E2, 3F, 0F, B6, CA, F6, D9, 80, E1, 3F, 48, D3, E8, 8B, CA, 49, D3, E0, 49, 0B, C0, 66, 41, FF, C1, 49, 33, C3, 48, 89, 03, 66, 45, 3B, CA, 0F, 82, 76, FF, FF, FF, 48, 8B, 7C, 24, 20, 48, 8B, 74, 24, 18, 48, 8B, 6C, 24, 10, 5B, C3;


# Xoroshiro128+ 64 state size.
SZ: ran_e_state = (sizeof(uint64_t) * 2);
# Xoroshiro128+ 64 generate.
IF: ran_e_rand = 4C, 8B, 01, 4C, 8B, 49, 08, 4B, 8D, 04, 01, 4D, 33, C8, 49, 8B, D1, 49, C1, C8, 09, 48, C1, E2, 0E, 4C, 33, C2, 4D, 33, C1, 49, C1, C9, 1C, 4C, 89, 49, 08, 4C, 89, 01, C3;
# Xoroshiro128+ 64 seed.
IF: ran_e_seed = 48, 89, 5C, 24, 08, 4C, 8B, C1, 48, 8B, C2, 48, C1, E8, 1E, 48, B9, B9, E5, E4, 1C, 6D, 47, 58, BF, 48, 33, C2, 45, 33, C9, 48, 0F, AF, C1, 48, B9, EB, 11, 31, 13, BB, 49, D0, 94, 45, 8B, D1, 49, 89, 00, 48, BB, CB, FA, A5, EB, 67, 04, AC, BE, 48, 8B, C2, 48, C1, E8, 1B, 48, 33, C2, 48, 0F, AF, C1, 45, 32, DB, 49, 89, 40, 08, 4C, 0F, A3, DB, 73, 07, 4D, 33, 08, 4D, 33, 50, 08, 49, 8B, 10, 41, FE, C3, 48, 33, C2, 48, C1, CA, 09, 48, 8B, C8, 48, C1, E1, 0E, 48, 33, D1, 48, 33, D0, 48, C1, C8, 1C, 49, 89, 10, 49, 89, 40, 08, 41, 80, FB, 40, 72, C8, 45, 32, DB, 48, BB, 22, 99, AA, 86, 8B, 04, 6B, D8, 4C, 0F, A3, DB, 73, 07, 4D, 33, 08, 4D, 33, 50, 08, 49, 8B, 10, 41, FE, C3, 48, 33, C2, 48, C1, CA, 09, 48, 8B, C8, 48, C1, E1, 0E, 48, 33, D1, 48, 33, D0, 48, C1, C8, 1C, 49, 89, 10, 49, 89, 40, 08, 41, 80, FB, 40, 72, C8, 48, 8B, 5C, 24, 08, 4D, 89, 08, 4D, 89, 50, 08, C3;


# XorShift1024* 64 state size.
SZ: ran_f_state = (sizeof(int32_t) + (sizeof(uint64_t) * 16));
# XorShift1024* 64 generate.
IF: ran_f_rand = 48, 63, 11, 4C, 8B, 4C, D1, 04, 8D, 42, 01, 83, E0, 0F, 8B, D0, 4C, 8D, 04, C1, 89, 11, 49, 8B, 50, 04, 48, 8B, C2, 48, C1, E0, 1F, 48, 33, D0, 49, 8B, C1, 48, C1, E8, 13, 48, 33, C2, 48, C1, E8, 0B, 48, 33, C2, 48, BA, 13, 7C, 4A, 7F, B9, 79, 37, 9E, 49, 33, C1, 49, 89, 40, 04, 48, 63, 01, 48, 8B, 44, C1, 04, 48, 0F, AF, C2, C3;
# XorShift1024* 64 seed.
IF: ran_f_seed = 48, 89, 5C, 24, 08, 4C, 8D, 41, 04, C7, 01, 00, 00, 00, 00, 48, BB, EB, 11, 31, 13, BB, 49, D0, 94, 41, B9, 10, 00, 00, 00, 49, BA, EB, 83, B5, 80, 46, 86, C8, 61, 49, BB, B9, E5, E4, 1C, 6D, 47, 58, BF, 0F, 1F, 40, 00, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 49, 2B, D2, 4D, 8D, 40, 08, 48, 8B, C2, 48, C1, E8, 1E, 48, 33, C2, 49, 0F, AF, C3, 48, 8B, C8, 48, C1, E9, 1B, 48, 33, C8, 48, 0F, AF, CB, 48, 8B, C1, 48, C1, E8, 1F, 48, 33, C1, 49, 89, 40, F8, 49, 83, E9, 01, 75, C9, 48, 8B, 5C, 24, 08, C3;


# Modified PCG 64 state size.
SZ: ran_g_state = (sizeof(uint64_t) * 2);
# Modified PCG 64 generate.
IF: ran_g_rand = 48, 89, 5C, 24, 08, 48, 89, 6C, 24, 10, 48, 89, 74, 24, 18, 48, 89, 7C, 24, 20, 41, 54, 41, 55, 41, 56, 41, 57, 48, 8B, 19, 4C, 8B, D9, 48, 8B, C3, 48, BD, 2D, 7F, 95, 4C, 2D, F4, 51, 58, 48, 0F, AF, C5, 4C, 8B, C3, 41, BE, 00, 00, FF, FF, 48, 03, 41, 08, 49, F7, D0, 48, 89, 01, 49, 8B, D0, 48, C1, EA, 10, 49, BF, 00, FF, 00, 00, 00, FF, 00, 00, 49, 33, D0, 49, BC, F0, 00, F0, 00, F0, 00, F0, 00, 49, 23, D6, 49, BD, 0C, 0C, 0C, 0C, 0C, 0C, 0C, 0C, 48, 8B, C2, 41, B9, FF, FF, FF, FF, 48, C1, E0, 10, 48, 33, C2, 4C, 33, C0, 49, 8B, C8, 48, C1, E9, 08, 49, 33, C8, 49, 23, CF, 48, 8B, C1, 48, C1, E0, 08, 48, 33, C1, 4C, 33, C0, 49, 8B, C8, 48, C1, E9, 04, 49, 33, C8, 49, 23, CC, 48, 8B, C1, 48, C1, E0, 04, 48, 33, C1, 4C, 33, C0, 49, 8B, C8, 48, C1, E9, 02, 49, 33, C8, 49, 23, CD, 48, 8D, 04, 8D, 00, 00, 00, 00, 48, 33, C1, 48, B9, 22, 22, 22, 22, 22, 22, 22, 22, 4C, 33, C0, 49, 8B, C0, 48, D1, E8, 49, 33, C0, 48, 23, C1, 4C, 8D, 14, 00, 4C, 33, D0, B8, 20, 00, 00, 00, 4D, 33, D0, 8B, C8, 45, 8B, C1, 0F, 1F, 00, 49, 8B, D0, 49, 23, D2, 48, D3, E2, 4C, 33, D2, 48, D1, E9, 49, 8B, D0, 48, D3, E2, 4C, 33, C2, 48, 85, C9, 75, E3, 49, 8B, 33, 4B, 8D, 14, 12, 48, 83, CA, 01, 48, 8B, CE, 48, 0F, AF, CD, 49, 89, 53, 08, 4C, 8B, C6, 48, 03, CA, 49, F7, D0, 49, 89, 0B, 49, 8B, D0, 48, C1, EA, 10, 48, 8B, FB, 49, 33, D0, 48, C1, EF, 12, 49, 23, D6, 48, 33, FB, 48, 8B, CA, 48, C1, EF, 1B, 48, C1, E1, 10, 48, BD, 22, 22, 22, 22, 22, 22, 22, 22, 48, 33, CA, 48, C1, EB, 3B, 4C, 33, C1, 49, 8B, D0, 48, C1, EA, 08, 49, 33, D0, 49, 23, D7, 48, 8B, CA, 48, C1, E1, 08, 48, 33, CA, 4C, 33, C1, 49, 8B, D0, 48, C1, EA, 04, 49, 33, D0, 49, 23, D4, 48, 8B, CA, 48, C1, E1, 04, 48, 33, CA, 4C, 33, C1, 49, 8B, D0, 48, C1, EA, 02, 49, 33, D0, 49, 23, D5, 48, 8D, 0C, 95, 00, 00, 00, 00, 48, 33, CA, 4C, 33, C1, 49, 8B, C8, 48, D1, E9, 49, 33, C8, 48, 23, CD, 4C, 8D, 14, 09, 4C, 33, D1, 4D, 33, D0, 66, 0F, 1F, 44, 00, 00, 48, 8B, C8, 49, 8B, D1, 49, 23, D2, 48, D1, E8, 48, D3, E2, 48, 8B, C8, 4C, 33, D2, 49, 8B, D1, 48, D3, E2, 4C, 33, CA, 48, 85, C0, 75, DD, 48, 8B, D6, 4B, 8D, 04, 12, 48, 83, C8, 01, 48, C1, EA, 12, 49, 89, 43, 08, 48, 33, D6, 48, C1, EA, 1B, 4C, 8B, C2, 48, C1, EE, 3B, 40, 0F, B6, CE, F6, D9, 80, E1, 3F, 49, D3, E0, 48, 8B, CE, 48, 8B, 74, 24, 38, 48, D3, EA, 4C, 0B, C2, 49, 8B, C8, 48, C1, E9, 10, 49, 33, C8, 49, 23, CE, 48, 8B, C1, 48, C1, E0, 10, 48, 33, C1, 4C, 33, C0, 49, 8B, C8, 48, C1, E9, 08, 49, 33, C8, 49, 23, CF, 48, 8B, C1, 48, C1, E0, 08, 48, 33, C1, 4C, 33, C0, 49, 8B, C8, 48, C1, E9, 04, 49, 33, C8, 49, 23, CC, 48, 8B, C1, 48, C1, E0, 04, 48, 33, C1, 4C, 33, C0, 49, 8B, C8, 48, C1, E9, 02, 49, 33, C8, 49, 23, CD, 48, 8D, 04, 8D, 00, 00, 00, 00, 48, 33, C1, 0F, B6, CB, 4C, 33, C0, F6, D9, 80, E1, 3F, 48, 8B, C7, 48, D3, E0, 49, 8B, D0, 48, D1, EA, 48, 8B, CB, 48, 8B, 5C, 24, 28, 49, 33, D0, 48, 23, D5, 48, D3, EF, 48, 8B, 6C, 24, 30, 48, 0B, C7, 48, 8B, 7C, 24, 40, 48, 8D, 0C, 12, 48, 33, C1, 48, 33, C2, 49, 33, C0, 41, 5F, 41, 5E, 41, 5D, 41, 5C, C3;
# Modified PCG 64 seed.
IF: ran_g_seed = 48, 89, 5C, 24, 08, 48, 89, 6C, 24, 10, 48, 89, 74, 24, 18, 48, 89, 7C, 24, 20, 41, 54, 41, 55, 41, 56, 41, 57, 48, B8, 9B, EA, 8F, 74, E6, 49, 3C, 85, 4C, 8B, DA, 4C, 33, D8, 41, B9, FF, FF, FF, FF, B8, 20, 00, 00, 00, 48, 8B, D9, 8B, C8, 48, 8B, FA, 45, 8B, D1, 0F, 1F, 40, 00, 66, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 4D, 8B, C2, 49, 8B, D2, 4D, 23, C3, 49, D3, E0, 48, D1, E9, 4D, 33, D8, 48, D3, E2, 4C, 33, D2, 48, 85, C9, 75, E3, 49, 8B, F3, BD, 00, 00, FF, FF, 49, F7, D3, 49, BE, 00, FF, 00, 00, 00, FF, 00, 00, 4C, 8B, C7, 49, BF, F0, 00, F0, 00, F0, 00, F0, 00, 49, F7, D0, 49, BC, 0C, 0C, 0C, 0C, 0C, 0C, 0C, 0C, 49, 8B, D0, 49, BD, 22, 22, 22, 22, 22, 22, 22, 22, 48, C1, EA, 10, 49, 33, D0, 48, 23, D5, 48, 8B, CA, 48, C1, E1, 10, 48, 33, CA, 4C, 33, C1, 49, 8B, D0, 48, C1, EA, 08, 49, 33, D0, 49, 23, D6, 48, 8B, CA, 48, C1, E1, 08, 48, 33, CA, 4C, 33, C1, 49, 8B, D0, 48, C1, EA, 04, 49, 33, D0, 49, 23, D7, 48, 8B, CA, 48, C1, E1, 04, 48, 33, CA, 4C, 33, C1, 49, 8B, D0, 48, C1, EA, 02, 49, 33, D0, 49, 23, D4, 48, 8D, 0C, 95, 00, 00, 00, 00, 48, 33, CA, 4C, 33, C1, 49, 8B, C8, 48, D1, E9, 49, 33, C8, 49, 23, CD, 48, 8D, 14, 09, 48, 33, D1, 49, 33, D0, 49, B8, 2D, 7F, 95, 4C, 2D, F4, 51, 58, 48, 03, D2, 48, 83, CA, 01, 48, 89, 53, 08, 49, 0F, AF, F0, 48, 03, F2, 49, 8B, D3, 48, C1, EA, 10, 49, 33, D3, 48, 89, 33, 48, 23, D5, 48, 8B, CA, 48, C1, E1, 10, 48, 33, CA, 4C, 33, D9, 49, 8B, D3, 48, C1, EA, 08, 49, 33, D3, 49, 23, D6, 48, 8B, CA, 48, C1, E1, 08, 48, 33, CA, 4C, 33, D9, 49, 8B, D3, 48, C1, EA, 04, 49, 33, D3, 49, 23, D7, 48, 8B, CA, 48, C1, E1, 04, 48, 33, CA, 4C, 33, D9, 49, 8B, D3, 48, C1, EA, 02, 49, 33, D3, 49, 23, D4, 4D, 8B, C1, 48, 8D, 0C, 95, 00, 00, 00, 00, 48, 33, CA, 4C, 33, D9, 49, 8B, CB, 48, D1, E9, 49, 33, CB, 49, 23, CD, 4C, 8D, 14, 09, 4C, 33, D1, 48, 8B, C8, 4D, 33, D3, 0F, 1F, 80, 00, 00, 00, 00, 49, 8B, D0, 49, 23, D2, 48, D3, E2, 4C, 33, D2, 48, D1, E9, 49, 8B, D0, 48, D3, E2, 4C, 33, C2, 48, 85, C9, 75, E3, 4B, 8D, 14, 12, 49, BA, 2D, 7F, 95, 4C, 2D, F4, 51, 58, 48, 83, CA, 01, 4C, 8D, 04, 3E, 48, 89, 53, 08, 49, 8B, C8, 49, 0F, AF, CA, 49, F7, D0, 48, 03, CA, 49, 8B, D0, 48, C1, EA, 10, 49, 33, D0, 48, 89, 0B, 48, 23, D5, 48, 8B, CA, 48, C1, E1, 10, 48, 33, CA, 4C, 33, C1, 49, 8B, D0, 48, C1, EA, 08, 49, 33, D0, 49, 23, D6, 48, 8B, CA, 48, C1, E1, 08, 48, 33, CA, 4C, 33, C1, 49, 8B, D0, 48, C1, EA, 04, 49, 33, D0, 49, 23, D7, 48, 8B, CA, 48, C1, E1, 04, 48, 33, CA, 4C, 33, C1, 49, 8B, D0, 48, C1, EA, 02, 49, 33, D0, 49, 23, D4, 48, 8D, 0C, 95, 00, 00, 00, 00, 48, 33, CA, 4C, 33, C1, 49, 8B, C8, 48, D1, E9, 49, 33, C8, 49, 23, CD, 4C, 8D, 14, 09, 4C, 33, D1, 4D, 33, D0, 66, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 48, 8B, C8, 49, 8B, D1, 49, 23, D2, 48, D1, E8, 48, D3, E2, 48, 8B, C8, 4C, 33, D2, 49, 8B, D1, 48, D3, E2, 4C, 33, CA, 48, 85, C0, 75, DD, 48, 8B, 6C, 24, 30, 4B, 8D, 04, 12, 48, 8B, 74, 24, 38, 48, 83, C8, 01, 48, 8B, 7C, 24, 40, 48, 89, 43, 08, 48, 8B, 5C, 24, 28, 41, 5F, 41, 5E, 41, 5D, 41, 5C, C3;

