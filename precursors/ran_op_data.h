// ran_op_data.h - Auto-Generated (Tue Jan  2 19:14:39 2018): Data for the 'ran' module. Include in your module source file.

#define ran_a_state 0x8U // Size: Modified Fishman-20 64 state size.

// Bootstrap/Integral Function (RAN_A_RAND - opcode 0x7AC9): Modified Fishman-20 64 generate.
#define ran_a_rand_key ae504a46825a47ec
#define ran_a_rand_size abea9bea99698664
#define ran_a_rand_crc d1bece239f3ec77f
#define ran_a_rand_data a39e65ac1d2967fc
static uint64_t ran_a_rand_key = UINT64_C(0x51B169F5380763ED);
static uint64_t ran_a_rand_size = UINT64_C(0x243);
static uint64_t ran_a_rand_crc = UINT64_C(0x293CFBBC49C4947);
static uint8_t ran_a_rand_data[] = { 
	0xA9, 0xF2, 0xD1, 0x64, 0x4B, 0x8B, 0xA4, 0x4A, 0xB8, 0x1A, 0x29, 0x79, 0x70, 0xDE, 0x6F, 0x4E, 0x10, 
	0xC1, 0x42, 0x98, 0x83, 0xCF, 0x20, 0x53, 0x52, 0xED, 0x44, 0x85, 0x47, 0xC5, 0x2E, 0xB1, 0x0A, 
	0x7A, 0x30, 0xFF, 0x51, 0x9E, 0xC2, 0x31, 0x19, 0x5D, 0xDC, 0x8F, 0x91, 0x3E, 0xD4, 0xAC, 0x48, 
	0xD0, 0xDD, 0xB6, 0x87, 0x99, 0x2B, 0x1F, 0x19, 0x03, 0x37, 0x22, 0xCF, 0x9C, 0x57, 0x1B, 0x4E, 
	0x68, 0x96, 0x04, 0x07, 0xB8, 0x99, 0xBF, 0x81, 0x4F, 0xF4, 0x60, 0x20, 0x48, 0xDF, 0x66, 0x6E, 
	0xCC, 0xEB, 0xA8, 0xF6, 0x4F, 0xC8, 0x49, 0xB5, 0x3C, 0x4E, 0xC9, 0x85, 0xCC, 0xCC, 0x3A, 0x47, 
	0x3A, 0x98, 0x9C, 0xA1, 0x91, 0x70, 0xB7, 0x0E, 0xE7, 0x18, 0x6C, 0xEC, 0xE0, 0xAF, 0x62, 0xE0, 
	0xC0, 0x9C, 0x9B, 0x3D, 0x7E, 0xFE, 0x74, 0x6A, 0xD7, 0x91, 0x75, 0x47, 0x04, 0xA9, 0xFC, 0xE8, 
	0x0D, 0x77, 0x8D, 0x00, 0x2A, 0x0E, 0xC2, 0x4C, 0xCC, 0x72, 0xFB, 0x3B, 0xE2, 0x30, 0x41, 0xCA, 
	0x0F, 0x4B, 0x3A, 0xC0, 0x0A, 0x4B, 0xEC, 0x51, 0x3D, 0x89, 0x75, 0x7F, 0x8E, 0x87, 0x14, 0x28, 
	0xC8, 0x18, 0x65, 0x46, 0xDF, 0x35, 0x50, 0x47, 0x04, 0x49, 0x06, 0xD6, 0x3C, 0xBC, 0xE6, 0xE7, 
	0xD1, 0xE4, 0xF8, 0x15, 0x0B, 0x08, 0x75, 0x4F, 0x8B, 0xE2, 0xB6, 0x1B, 0x05, 0x53, 0x17, 0x65, 
	0xC8, 0x92, 0x3A, 0x09, 0xFD, 0xAD, 0xA9, 0x3B, 0x5C, 0x08, 0x98, 0x59, 0x6A, 0xA7, 0x97, 0xA5, 
	0x90, 0x31, 0xFC, 0x7B, 0xD3, 0x5D, 0x53, 0x91, 0x17, 0xDE, 0x51, 0xA1, 0x1F, 0x83, 0x92, 0xD1, 
	0xD5, 0xFF, 0x47, 0xD5, 0x4C, 0x38, 0x3A, 0x4D, 0xFE, 0xA3, 0xA3, 0x67, 0x2C, 0xE5, 0x84, 0xB5, 
	0x6D, 0x39, 0xB8, 0xDA, 0x1B, 0xA1, 0xE4, 0x11, 0x17, 0x21, 0x83, 0x50, 0x82, 0x32, 0xAE, 0xAC, 
	0x31, 0xD9, 0xD2, 0x25, 0xE7, 0xA6, 0x61, 0x83, 0x15, 0x44, 0x5A, 0x3C, 0x00, 0xCD, 0x5B, 0x5B, 
	0x59, 0xE8, 0x5E, 0x09, 0xDE, 0x38, 0x06, 0x19, 0x4D, 0x5E, 0x8D, 0x32, 0xCE, 0x6F, 0x64, 0xA4, 
	0xF4, 0x86, 0x0C, 0xD6, 0x0F, 0x0F, 0x75, 0xA9, 0x36, 0x21, 0xDE, 0x4C, 0x0B, 0x50, 0x26, 0x3C, 
	0x5B, 0xC9, 0xBC, 0xA6, 0xAB, 0x8A, 0xB4, 0x40, 0xF6, 0xE5, 0x45, 0x05, 0x32, 0x1F, 0xF9, 0xAC, 
	0x0B, 0xC9, 0x1A, 0x55, 0x38, 0x30, 0x83, 0x93, 0x0F, 0x8E, 0xCB, 0xCE, 0x9F, 0x83, 0x55, 0x44, 
	0x62, 0x7E, 0x66, 0xDD, 0x6F, 0xED, 0x7E, 0xE6, 0x58, 0xC5, 0xAB, 0xEE, 0x71, 0xD2, 0x25, 0x1D, 
	0xF8, 0xB4, 0x1E, 0x4C, 0x1C, 0x33, 0xBA, 0xDA, 0x54, 0x59, 0xC5, 0xB9, 0x67, 0x99, 0x57, 0x0E, 
	0xDD, 0xC1, 0x61, 0xDE, 0x2B, 0x4B, 0x2F, 0xAC, 0x7E, 0x8B, 0x15, 0xCE, 0x5D, 0x6F, 0x7D, 0xF4, 
	0x7A, 0xF1, 0x58, 0xD4, 0xAB, 0xAD, 0xFF, 0x4F, 0x44, 0xC2, 0xCE, 0xB5, 0x2D, 0x86, 0x5F, 0x26, 
	0x3B, 0x87, 0x83, 0x25, 0xA1, 0x54, 0xD3, 0x03, 0xC8, 0x71, 0x5B, 0x1D, 0x5E, 0x57, 0xB1, 0xF5, 
	0x2F, 0x8E, 0x51, 0xEF, 0x4F, 0x90, 0xE3, 0x7D, 0xD0, 0x76, 0x26, 0x5C, 0x63, 0x84, 0x75, 0xE6, 
	0x18, 0x60, 0x2C, 0x49, 0x4C, 0x12, 0x1A, 0xF2, 0x3D, 0x41, 0x12, 0x6D, 0x52, 0x40, 0x99, 0x05, 
	0xA9, 0x61, 0x05, 0x59, 0xEC, 0x3A, 0x69, 0x54, 0x6C, 0xD0, 0x66, 0xE2, 0x41, 0x38, 0x8A, 0xCB, 
	0xBA, 0x25, 0x95, 0x62, 0x49, 0x6E, 0xE9, 0x39, 0x38, 0x9B, 0x56, 0x5A, 0x2F, 0x56, 0xAE, 0xDE, 
	0xD6, 0x01, 0x67, 0x73, 0x59, 0xC9, 0x92, 0x62, 0x1E, 0xF0, 0x58, 0x83, 0xD7, 0x51, 0x01, 0x97, 
	0x03, 0x9D, 0xCB, 0xA1, 0x6F, 0x7F, 0x39, 0xE5, 0x50, 0x70, 0xB9, 0x03, 0x71, 0xED, 0x1F, 0xAD, 
	0xEB, 0xB1, 0xAA, 0xB5, 0xC7, 0x78, 0x7D, 0x12, 0x75, 0x91, 0x3B, 0xCC, 0x24, 0x40, 0xB7, 0x07, 
	0x64, 0x38, 0x4C, 0x4B, 0x58, 0x64, 0xFC, 0x6C, 0xC0, 0x8A, 0xB9, 0xF1, 0x27, 0xB4, 0x3D, 0xBD, 
	0xE2, 0x7D, 0x1F, 0xB7, 0x44, 0x30, 0x3B, 0x48, 0x8E, 0x38, 0xD2, 0x0D, 0xD0, 0x3E, 0xA9, 0x5A, 
	0x30, 0x68, 0xBE, 0x19, 0xE2, 0x6D, 0x17, 0x2B, 0x95, 0x22, 0x4D, 0x25, 0x6E, 0x79, 0x10, 0xD8, 
	0xC5, 0xD4 };

// Bootstrap/Integral Function (RAN_A_SEED - opcode 0xAA34): Modified Fishman-20 64 seed.
#define ran_a_seed_key f2db18e3a8a06342
#define ran_a_seed_size de1327cb42e9a901
#define ran_a_seed_crc af2c2f2810dc6e31
#define ran_a_seed_data eb3cedffce308894
static uint64_t ran_a_seed_key = UINT64_C(0xED971BA144380D6B);
static uint64_t ran_a_seed_size = UINT64_C(0x61);
static uint64_t ran_a_seed_crc = UINT64_C(0x1EBF07129FC0623F);
static uint8_t ran_a_seed_data[] = { 
	0xC5, 0x3E, 0x6B, 0x9D, 0xAE, 0x4A, 0x61, 0xEA, 0x32, 0x4D, 0x98, 0xF1, 0xCE, 0x4A, 0x38, 0xAE, 0x21, 
	0xD1, 0xFF, 0xCA, 0x11, 0x47, 0x03, 0xB4, 0xB8, 0x38, 0xC9, 0x8B, 0xA8, 0xE9, 0x46, 0x41, 0xB9, 
	0x92, 0xA8, 0x83, 0x52, 0x9C, 0xBD, 0x76, 0x91, 0x62, 0x71, 0xAB, 0x03, 0x75, 0xA1, 0x1F, 0x54, 
	0xF8, 0xAC, 0x9A, 0xAD, 0x31, 0x93, 0x5F, 0x9B, 0x18, 0xCC, 0xD5, 0x71, 0x2F, 0xEE, 0x1D, 0x20, 
	0xA1, 0xF6, 0xF1, 0xA2, 0x9E, 0xB8, 0x5C, 0x88, 0xAD, 0x49, 0xE1, 0xA5, 0x05, 0x6D, 0x7B, 0x66, 
	0x75, 0xDD, 0x85, 0xB6, 0x63, 0xFB, 0x67, 0xEA, 0x18, 0xEA, 0x31, 0xE8, 0x61, 0x1C, 0xF9, 0x5E
	 };

#define ran_b_state 0x10004U // Size: Modified GFSR4 64 state size.

// Bootstrap/Integral Function (RAN_B_RAND - opcode 0xC511): Modified GFSR4 64 generate.
#define ran_b_rand_key fa8d642e35d3d564
#define ran_b_rand_size d4cc1b4399cc7519
#define ran_b_rand_crc d555a8c9ed412f72
#define ran_b_rand_data ffeb8b8425050381
static uint64_t ran_b_rand_key = UINT64_C(0x705BC9245D00EC3E);
static uint64_t ran_b_rand_size = UINT64_C(0x247);
static uint64_t ran_b_rand_crc = UINT64_C(0xE2B0E490074516C7);
static uint8_t ran_b_rand_data[] = { 
	0x7D, 0x49, 0x87, 0x11, 0x94, 0x42, 0x14, 0xDF, 0xAC, 0x10, 0x3B, 0x9D, 0x48, 0xD7, 0x07, 0x62, 0x7E, 
	0x0D, 0x7B, 0xBB, 0xDE, 0xD8, 0x10, 0xC7, 0xFC, 0xA3, 0xA7, 0x71, 0x47, 0x7F, 0x87, 0x80, 0xBE, 
	0xEF, 0x8E, 0xBA, 0x11, 0x91, 0xD3, 0x06, 0xE7, 0xE8, 0xFE, 0xF3, 0x89, 0xD0, 0x47, 0xDA, 0x2D, 
	0x96, 0xBB, 0x4C, 0x19, 0x83, 0x41, 0x13, 0x28, 0x36, 0x31, 0xB4, 0x96, 0xEA, 0xC2, 0x0F, 0x3A, 
	0x26, 0x84, 0xDB, 0xD9, 0xAD, 0x4E, 0x18, 0xD3, 0x3A, 0xD2, 0xFD, 0x68, 0x40, 0x4A, 0x55, 0xE1, 
	0x0B, 0xC3, 0xC0, 0x22, 0x99, 0xDB, 0x96, 0xE5, 0xF9, 0x7D, 0x04, 0x7A, 0x22, 0xF4, 0x5F, 0x46, 
	0xAB, 0x41, 0x69, 0xBB, 0x6F, 0xE4, 0x3A, 0x5F, 0xE1, 0xD0, 0x41, 0x98, 0x0F, 0x07, 0x05, 0x10, 
	0xCB, 0xC0, 0xEE, 0x26, 0xB9, 0x0E, 0xCF, 0xAA, 0x56, 0xCE, 0xEC, 0x71, 0x4A, 0xEC, 0x49, 0xCD, 
	0x15, 0x05, 0x43, 0x88, 0x00, 0xD1, 0x57, 0x13, 0xC7, 0x15, 0xE9, 0x86, 0xF6, 0x7A, 0xC3, 0xE4, 
	0x6D, 0x12, 0x70, 0xFB, 0xE1, 0x71, 0x1F, 0x42, 0x41, 0xDF, 0x69, 0x9B, 0x92, 0xD1, 0xD7, 0x8C, 
	0x78, 0x66, 0x58, 0xB9, 0x1B, 0x9B, 0x1A, 0x80, 0x30, 0x70, 0xCE, 0x61, 0xE5, 0x11, 0x5A, 0x6A, 
	0x09, 0x86, 0x16, 0x30, 0x88, 0xD4, 0x2D, 0xA3, 0xE7, 0xC7, 0x16, 0x78, 0xBB, 0x16, 0x6D, 0xD0, 
	0x9F, 0x47, 0xF6, 0xAA, 0x01, 0x1A, 0x9A, 0x22, 0x10, 0x6B, 0x1D, 0xA2, 0x24, 0x70, 0x29, 0xEB, 
	0xBF, 0xA9, 0xF5, 0xFD, 0x85, 0x95, 0x2D, 0xAD, 0x8E, 0x7D, 0x07, 0x06, 0x2C, 0xFD, 0xBE, 0xF2, 
	0xD8, 0x1B, 0x44, 0x50, 0x97, 0x4E, 0xC7, 0x16, 0x19, 0x65, 0x4E, 0xE4, 0x3B, 0xCA, 0x0E, 0x4E, 
	0x7A, 0xFD, 0x53, 0x46, 0x55, 0xC7, 0xDD, 0x49, 0xF3, 0x7F, 0x5E, 0x28, 0xC9, 0xB0, 0xF8, 0xC7, 
	0x01, 0xBE, 0xE9, 0x75, 0x23, 0xC6, 0x50, 0xA8, 0x1A, 0x7A, 0x90, 0x3B, 0x7E, 0x71, 0x97, 0x23, 
	0x3D, 0xEE, 0xD6, 0xA6, 0xC5, 0x45, 0xD1, 0x12, 0x2C, 0x10, 0x20, 0x58, 0x72, 0xAC, 0xE8, 0xC4, 
	0x91, 0x68, 0x1C, 0xE5, 0x1A, 0x7C, 0xEB, 0xD4, 0x81, 0xA1, 0xB4, 0x92, 0x19, 0x90, 0xB3, 0xA9, 
	0xB8, 0x73, 0xCE, 0x61, 0x4D, 0x71, 0x2D, 0x68, 0xB7, 0xAE, 0x15, 0x27, 0x27, 0x5B, 0x4A, 0xB5, 
	0xF8, 0x8E, 0x52, 0xDE, 0x3B, 0x86, 0xB9, 0x19, 0xEE, 0x40, 0xD7, 0xBC, 0x6B, 0x5A, 0x88, 0x17, 
	0xF0, 0xCA, 0xA6, 0x1A, 0x56, 0x8E, 0x22, 0xC4, 0x7A, 0x1C, 0xF1, 0x35, 0xD3, 0x5C, 0x7E, 0xEB, 
	0x50, 0xE8, 0xE2, 0xDC, 0x70, 0xC7, 0x60, 0x9F, 0x68, 0xBE, 0xD0, 0x5F, 0xDF, 0xEF, 0xC0, 0x59, 
	0xD3, 0xCD, 0xC9, 0xEA, 0x2C, 0x19, 0xFF, 0xA5, 0x32, 0x90, 0xA5, 0xA0, 0x11, 0xC8, 0x35, 0x88, 
	0x7D, 0x80, 0xA3, 0x0A, 0x88, 0x4F, 0x9F, 0x29, 0xA8, 0xE5, 0xBA, 0xB0, 0x81, 0x53, 0xCB, 0xA8, 
	0x30, 0x69, 0x7E, 0x77, 0x74, 0xE1, 0xB7, 0xF2, 0x66, 0xD8, 0x52, 0xB4, 0xC4, 0x9C, 0x91, 0x06, 
	0x3C, 0xC1, 0xFD, 0xB9, 0xCB, 0x60, 0x7C, 0xE2, 0xF2, 0xF1, 0xDA, 0xB6, 0x81, 0x59, 0x89, 0xBF, 
	0x54, 0x8F, 0xA1, 0xF3, 0xE0, 0xE4, 0x76, 0xF3, 0x45, 0x0F, 0xAE, 0x26, 0x9D, 0x6F, 0xFA, 0x6E, 
	0x36, 0x55, 0xB4, 0xC5, 0x4C, 0x59, 0x90, 0x6F, 0x39, 0x99, 0xCD, 0xA4, 0xF8, 0x20, 0xBB, 0x5A, 
	0xAC, 0x3F, 0x13, 0xC2, 0xC4, 0x46, 0x2C, 0xE6, 0xED, 0x4E, 0xBA, 0xB3, 0xF7, 0x22, 0x1C, 0xC9, 
	0x1C, 0x97, 0x46, 0x51, 0xD0, 0xEB, 0x15, 0xB2, 0x66, 0x6C, 0x85, 0x6E, 0x60, 0x14, 0x3B, 0x81, 
	0x9C, 0xB0, 0x9E, 0x51, 0x9F, 0x12, 0x95, 0x30, 0x08, 0xCF, 0xDD, 0xCF, 0x81, 0xF4, 0xBF, 0xAE, 
	0xD3, 0xAE, 0xD4, 0x3D, 0x66, 0x15, 0x91, 0xB7, 0xBA, 0xAC, 0xF3, 0xC2, 0x5A, 0x06, 0xFC, 0x59, 
	0x8F, 0x03, 0x94, 0xD4, 0xD6, 0x35, 0x5A, 0x15, 0x3B, 0xCE, 0x26, 0x31, 0x70, 0xF7, 0x99, 0x71, 
	0x51, 0x33, 0x3E, 0xF2, 0xD4, 0xA5, 0xA9, 0x21, 0x21, 0xD7, 0xA0, 0x1D, 0x10, 0xAA, 0xF5, 0x1F, 
	0x69, 0x5B, 0x57, 0x3A, 0xD2, 0x5A, 0x0C, 0xA3, 0x88, 0x14, 0xF2, 0xD2, 0x56, 0x59, 0x7A, 0x4D, 
	0xD4, 0xB8, 0xDA, 0x98, 0x33, 0x72 };

// Bootstrap/Integral Function (RAN_B_SEED - opcode 0x29B3): Modified GFSR4 64 seed.
#define ran_b_seed_key a6650a7e40e92f5a
#define ran_b_seed_size e45865b650a68863
#define ran_b_seed_crc f44949469d15e9d3
#define ran_b_seed_data af1c028ae257c485
static uint64_t ran_b_seed_key = UINT64_C(0x1FFF2B85A62420C9);
static uint64_t ran_b_seed_size = UINT64_C(0xBF);
static uint64_t ran_b_seed_crc = UINT64_C(0x4EB189D2AC13EB43);
static uint8_t ran_b_seed_data[] = { 
	0x05, 0x83, 0x3C, 0x5E, 0x5B, 0x20, 0x8F, 0x50, 0xFC, 0x0E, 0xA3, 0x9F, 0x66, 0x2A, 0x7F, 0xDA, 0x6C, 
	0xFA, 0xA1, 0x3A, 0x5A, 0xA1, 0xCB, 0x18, 0xC6, 0x01, 0xA2, 0xD5, 0x9B, 0xD3, 0x17, 0xE6, 0x52, 
	0x22, 0xA4, 0x27, 0xFE, 0xEE, 0x1E, 0x5C, 0x5E, 0x67, 0x64, 0x0A, 0x59, 0xAC, 0x1B, 0x62, 0xDB, 
	0x5A, 0x7D, 0x1F, 0xCC, 0x52, 0x11, 0xFD, 0x8B, 0x90, 0xF1, 0xDA, 0x63, 0xC8, 0xA0, 0x78, 0x65, 
	0xCB, 0x88, 0xF4, 0xE2, 0x58, 0x42, 0xD5, 0x1C, 0x39, 0x26, 0xBE, 0x9B, 0x90, 0x7B, 0x22, 0x58, 
	0x77, 0x9C, 0x85, 0x5D, 0xA7, 0x10, 0xEF, 0x44, 0xF6, 0xC4, 0xC2, 0xEB, 0x72, 0xA8, 0xFC, 0x9F, 
	0xD8, 0x49, 0x61, 0xB2, 0xB7, 0x78, 0xF4, 0x98, 0xE4, 0xC7, 0xA8, 0x5C, 0xD0, 0x83, 0x11, 0x1A, 
	0x44, 0x9A, 0xCA, 0xA3, 0x34, 0xFF, 0x65, 0xBB, 0x8A, 0x0A, 0xE7, 0x93, 0x20, 0x4F, 0x71, 0x42, 
	0x38, 0x99, 0x40, 0x0A, 0xCD, 0x0B, 0x1C, 0x5E, 0xB0, 0x47, 0xF7, 0x07, 0x59, 0xC5, 0x80, 0x3A, 
	0xF6, 0x3E, 0x8C, 0xB5, 0x75, 0xFC, 0x7D, 0x08, 0xF8, 0x7D, 0x03, 0xAC, 0x7B, 0xBB, 0xF7, 0x01, 
	0xC4, 0x15, 0x05, 0x70, 0x3A, 0x92, 0xE2, 0x32, 0x80, 0xF9, 0xDA, 0xDF, 0x3A, 0x4A, 0x9B, 0x51, 
	0x84, 0xB5, 0x91, 0x43, 0x2F, 0xE2, 0x84, 0x17, 0x97, 0x22, 0x1C, 0xF6, 0x8A, 0xD0 };

#define ran_c_state 0x9C4U // Size: Mersenne Twister 19937 64 state size.

// Bootstrap/Integral Function (RAN_C_RAND - opcode 0xD364): Mersenne Twister 19937 64 generate.
#define ran_c_rand_key ff4b5f0e8890143f
#define ran_c_rand_size ea9ae9011bf16dbf
#define ran_c_rand_crc ad3f1d7c8d813203
#define ran_c_rand_data d3f4b3f4b9386ddc
static uint64_t ran_c_rand_key = UINT64_C(0x8D1A315A310B43EE);
static uint64_t ran_c_rand_size = UINT64_C(0x19C);
static uint64_t ran_c_rand_crc = UINT64_C(0xF95563E389E26B7E);
static uint8_t ran_c_rand_data[] = { 
	0x29, 0xA9, 0x20, 0x45, 0x71, 0x91, 0x58, 0xFD, 0xEB, 0x17, 0x36, 0xB2, 0xBA, 0x60, 0xA1, 0xA9, 0x54, 
	0x6B, 0x3E, 0xB0, 0xEB, 0xFF, 0x9F, 0x64, 0xC8, 0x38, 0x84, 0xF9, 0xF8, 0xFE, 0x27, 0x4B, 0xDD, 
	0x9C, 0x34, 0xE1, 0xAD, 0x86, 0x53, 0x13, 0xEE, 0x11, 0x9F, 0x80, 0x51, 0x13, 0xAF, 0x72, 0xA3, 
	0x40, 0xFC, 0x08, 0xD7, 0xB5, 0x2C, 0x9D, 0xC6, 0x93, 0xD0, 0x3C, 0x13, 0xF5, 0xC1, 0x56, 0x06, 
	0x1F, 0xFE, 0x22, 0xAC, 0x32, 0x94, 0x0A, 0x0A, 0xC7, 0x0F, 0xD1, 0x94, 0x47, 0x69, 0xA9, 0xD3, 
	0x16, 0xB0, 0x87, 0x37, 0x7C, 0x06, 0x90, 0xF9, 0x61, 0xEA, 0x82, 0xFB, 0x68, 0x54, 0x66, 0xC3, 
	0xD4, 0x92, 0x44, 0x5F, 0x2B, 0x37, 0xD4, 0x57, 0xA9, 0x2F, 0xD1, 0x14, 0x9D, 0x1F, 0x4E, 0xE0, 
	0x9A, 0xF4, 0x38, 0x30, 0x8A, 0xA6, 0x29, 0xE9, 0x5A, 0x4D, 0xF8, 0x18, 0xC6, 0xAC, 0x6F, 0xA1, 
	0xD9, 0xEE, 0xB3, 0x24, 0xDA, 0x24, 0x1E, 0xDB, 0x45, 0x9C, 0x8B, 0x63, 0x85, 0x57, 0x77, 0x72, 
	0x34, 0xD9, 0x92, 0x76, 0xF5, 0x7A, 0x57, 0xC1, 0x6B, 0x53, 0xBE, 0xF0, 0x1A, 0x52, 0x27, 0x4B, 
	0x1E, 0x3D, 0x42, 0xEE, 0xCF, 0xCA, 0x49, 0x32, 0xE1, 0x88, 0xF3, 0x57, 0xFA, 0x4F, 0x64, 0xA9, 
	0x87, 0x78, 0xFC, 0xEC, 0x6B, 0x3F, 0x8B, 0x10, 0x86, 0x33, 0x49, 0xB1, 0x2C, 0x6A, 0x97, 0x75, 
	0x2B, 0x9E, 0x4F, 0xA6, 0xB1, 0xA5, 0x48, 0x43, 0x1F, 0x9B, 0x4B, 0x24, 0x8B, 0x39, 0x5C, 0x63, 
	0xE0, 0xF4, 0xC7, 0xA7, 0xDA, 0x2C, 0x67, 0xFC, 0x5E, 0x23, 0x43, 0x9A, 0x5D, 0x72, 0x5C, 0x8E, 
	0x8D, 0x56, 0x9B, 0x32, 0x98, 0x28, 0xAA, 0xB4, 0x66, 0xE5, 0x37, 0x78, 0x9A, 0xB0, 0xC9, 0x9C, 
	0xA7, 0x19, 0x2F, 0xDB, 0x29, 0xA0, 0x8C, 0x90, 0xB3, 0xBA, 0x12, 0x88, 0xAF, 0x01, 0x91, 0xC8, 
	0x27, 0x95, 0x34, 0xE6, 0x38, 0x86, 0x2C, 0x86, 0x39, 0xA8, 0xDF, 0xFD, 0xBE, 0x03, 0x9D, 0xE5, 
	0x4E, 0x12, 0x3E, 0xD0, 0x56, 0xF3, 0x55, 0xBC, 0x60, 0x6F, 0xEE, 0x4B, 0xF7, 0x54, 0xF1, 0x2E, 
	0xCE, 0x7C, 0xA3, 0x95, 0xD8, 0xE4, 0xBB, 0x1D, 0xED, 0x38, 0xD2, 0x3E, 0xA0, 0x6F, 0xD4, 0x4E, 
	0x75, 0x7A, 0x7D, 0x69, 0x60, 0xCC, 0xFB, 0x02, 0x3E, 0x5A, 0x25, 0x4B, 0x88, 0xD0, 0xB4, 0x73, 
	0x02, 0xCA, 0x74, 0xBC, 0x6B, 0x66, 0x98, 0x07, 0xB8, 0x47, 0x56, 0x85, 0x01, 0x6D, 0x3D, 0x0A, 
	0x66, 0x44, 0x6D, 0x66, 0xD2, 0x5C, 0x6A, 0x0D, 0xFD, 0xF8, 0x4A, 0xC9, 0xBA, 0x29, 0x22, 0x8E, 
	0x0E, 0x03, 0x87, 0xBB, 0x14, 0xE8, 0x09, 0x11, 0xA4, 0xA3, 0x0A, 0x99, 0x4C, 0xBD, 0x8D, 0x04, 
	0x2D, 0x46, 0x31, 0xD2, 0xCD, 0xC5, 0x2E, 0xD2, 0x24, 0x27, 0x15, 0x03, 0x8E, 0x0F, 0x2B, 0x04, 
	0x33, 0x01, 0x45, 0xEE, 0x6C, 0x6B, 0xAD, 0x2F, 0x50, 0x23, 0xAD, 0x7B, 0xF7, 0x22, 0x1C, 0xFA, 
	0xC5, 0xD2, 0x7D, 0x6A, 0x26, 0x4A, 0x1D, 0xCA, 0x54, 0x9D, 0x23 };

// Bootstrap/Integral Function (RAN_C_SEED - opcode 0xEFC3): Mersenne Twister 19937 64 seed.
#define ran_c_seed_key c33106640415166a
#define ran_c_seed_size c7e7e20c5c2f0b8d
#define ran_c_seed_crc eb719a3d58244cba
#define ran_c_seed_data a47905372358185a
static uint64_t ran_c_seed_key = UINT64_C(0x460353D7DA757040);
static uint64_t ran_c_seed_size = UINT64_C(0x48);
static uint64_t ran_c_seed_crc = UINT64_C(0xA85E6C207CBC5824);
static uint8_t ran_c_seed_data[] = { 
	0x18, 0xDF, 0x51, 0xA6, 0x34, 0x28, 0x2F, 0x50, 0xDA, 0x74, 0x39, 0x78, 0x32, 0xA3, 0xE3, 0x03, 0x33, 
	0xDB, 0x81, 0x73, 0x69, 0x8F, 0xDB, 0x5C, 0xF4, 0xA0, 0xB2, 0xDC, 0xA5, 0x17, 0xA7, 0x0D, 0x8A, 
	0x6C, 0x7E, 0xFE, 0xF1, 0xA5, 0x94, 0xE2, 0x2B, 0x60, 0x1B, 0x44, 0xD6, 0x63, 0x62, 0x16, 0x2B, 
	0xA8, 0x34, 0x1E, 0x6C, 0xF8, 0x80, 0x05, 0x1D, 0xDF, 0x33, 0x39, 0xFE, 0xAD, 0x73, 0xEE, 0xE8, 
	0x32, 0xC0, 0x99, 0xEB, 0x91, 0xEB, 0x9D };

#define ran_d_state 0x8U // Size: Split Mix 64 extended state size.

// Bootstrap/Integral Function (RAN_D_RAND - opcode 0x30A3): Split Mix 64 extended generate.
#define ran_d_rand_key a95c157e39635eb2
#define ran_d_rand_size c2bfb7dfcf79bd4c
#define ran_d_rand_crc d1451780b8128c31
#define ran_d_rand_data e2071b7d19df94b7
static uint64_t ran_d_rand_key = UINT64_C(0x67F9D2C0D2AFD0DB);
static uint64_t ran_d_rand_size = UINT64_C(0x4B);
static uint64_t ran_d_rand_crc = UINT64_C(0x2E55DD3281CA8712);
static uint8_t ran_d_rand_data[] = { 
	0xD5, 0x84, 0x31, 0xFD, 0x96, 0xD9, 0x3C, 0xA0, 0xB4, 0x97, 0xAF, 0x6A, 0x68, 0xC3, 0x5F, 0x07, 0xB8, 
	0x82, 0x67, 0x17, 0x54, 0xF9, 0x89, 0xD9, 0xD3, 0x49, 0x52, 0xCE, 0xDC, 0xFA, 0x6B, 0x5B, 0xEF, 
	0xFE, 0xBF, 0xB0, 0x2A, 0xDE, 0x62, 0x4E, 0x96, 0x9F, 0x92, 0xBE, 0x0C, 0xDF, 0x45, 0xA5, 0x63, 
	0xCB, 0x54, 0xE6, 0xB9, 0x74, 0x1F, 0xDD, 0xCC, 0xA4, 0x02, 0x9B, 0x16, 0xCB, 0xF8, 0x1C, 0x4A, 
	0x01, 0xE6, 0x35, 0x21, 0xBD, 0xEC, 0x99, 0xCE, 0x7C, 0x5B };

// Bootstrap/Integral Function (RAN_D_SEED - opcode 0x110C): Split Mix 64 extended seed.
#define ran_d_seed_key d4430168e02cd0f9
#define ran_d_seed_size dbbc9290b4f629aa
#define ran_d_seed_crc d18764cb0f9a944c
#define ran_d_seed_data f46c0ab0394823ac
static uint64_t ran_d_seed_key = UINT64_C(0xB90BDD315CE864A8);
static uint64_t ran_d_seed_size = UINT64_C(0x22B);
static uint64_t ran_d_seed_crc = UINT64_C(0x9EDDF4E380093DD3);
static uint8_t ran_d_seed_data[] = { 
	0xA9, 0x4F, 0x17, 0x5A, 0xF6, 0xE0, 0x78, 0x5A, 0xF5, 0x2D, 0x7C, 0xBF, 0xC2, 0xE6, 0xCE, 0xFA, 0x2C, 
	0x56, 0x03, 0x0F, 0xF7, 0x2F, 0x10, 0xCE, 0x7D, 0xB4, 0xB2, 0xCF, 0xE9, 0x37, 0xE7, 0x26, 0x18, 
	0xB3, 0x80, 0x5E, 0x0C, 0x0F, 0x3F, 0xB8, 0xFA, 0x72, 0xD3, 0xA1, 0xB7, 0xEE, 0xAF, 0x53, 0xF3, 
	0xFA, 0x16, 0xED, 0xC7, 0xF9, 0x47, 0x1B, 0x57, 0xA9, 0xD2, 0xA8, 0x0E, 0x61, 0xC2, 0xB3, 0xDC, 
	0x64, 0xD7, 0x80, 0x4D, 0x8F, 0x76, 0xF1, 0x46, 0x7A, 0x21, 0x0F, 0x47, 0xB7, 0x93, 0xCF, 0xEE, 
	0xDB, 0x90, 0x91, 0x2E, 0x75, 0x83, 0x69, 0x06, 0x77, 0x22, 0xB7, 0x7C, 0x6D, 0x9C, 0x7A, 0xEA, 
	0x34, 0x7D, 0x86, 0xF0, 0x6E, 0x13, 0x34, 0x01, 0x8B, 0x35, 0xFB, 0x7C, 0xF7, 0x08, 0xCF, 0xA0, 
	0xEE, 0xCB, 0x23, 0x8E, 0xAE, 0x92, 0x22, 0xA9, 0x59, 0xB9, 0x33, 0x03, 0x33, 0x01, 0xFA, 0xD1, 
	0x1D, 0x45, 0xE5, 0x26, 0x98, 0x8D, 0x70, 0x34, 0x59, 0x04, 0xC2, 0x06, 0x44, 0xAF, 0xF8, 0x7B, 
	0xB2, 0xC0, 0x51, 0xD5, 0x3F, 0x8B, 0x5A, 0xA6, 0x2C, 0x1D, 0xA4, 0x25, 0x54, 0x40, 0x26, 0x24, 
	0x12, 0x42, 0xE4, 0xF8, 0xE7, 0x5D, 0x58, 0x9A, 0xC5, 0x0F, 0x02, 0x59, 0xCF, 0x73, 0xC8, 0xCE, 
	0x11, 0xCC, 0xE3, 0x5E, 0xF3, 0x0A, 0x2C, 0xA2, 0xB5, 0x0B, 0x5B, 0xFE, 0x9F, 0x6F, 0x07, 0xC0, 
	0x84, 0x39, 0x71, 0x1A, 0xDB, 0xB2, 0xDD, 0xFD, 0x97, 0x43, 0xE4, 0x65, 0x87, 0x02, 0x06, 0x69, 
	0x96, 0x22, 0x36, 0xF1, 0xCC, 0x17, 0x0B, 0x0B, 0xCE, 0x1A, 0x54, 0x5B, 0xB9, 0x53, 0xE2, 0xCC, 
	0x54, 0xDC, 0x87, 0x3C, 0x1D, 0xAB, 0x93, 0x24, 0x45, 0x96, 0x81, 0x11, 0x98, 0xAC, 0x87, 0xC2, 
	0xE9, 0x79, 0xC3, 0x08, 0xF0, 0x6E, 0xE4, 0xA5, 0xD9, 0x05, 0x52, 0xC1, 0xEB, 0x65, 0x7B, 0xD1, 
	0x6E, 0xD7, 0x59, 0x93, 0xFD, 0x8E, 0xA8, 0x26, 0xA9, 0xD9, 0xFF, 0x2E, 0x67, 0x8C, 0xC8, 0x4F, 
	0x91, 0x1D, 0x58, 0xFF, 0x96, 0xFB, 0x92, 0x47, 0x00, 0xBB, 0xF4, 0x04, 0x10, 0x07, 0x06, 0x6F, 
	0x0C, 0xA5, 0xE4, 0x9B, 0x83, 0xDA, 0xA9, 0xD2, 0x9C, 0x1E, 0xCD, 0xDA, 0x1F, 0xB9, 0x44, 0x1C, 
	0x1F, 0x17, 0x92, 0x43, 0xD3, 0x38, 0x3B, 0x37, 0x30, 0xC7, 0x23, 0x18, 0xB2, 0x54, 0x70, 0xD2, 
	0x55, 0x22, 0xD8, 0x05, 0xCF, 0xA9, 0xFB, 0xAC, 0x2C, 0xEF, 0xB8, 0x8A, 0xAE, 0xB2, 0x6C, 0xCE, 
	0x02, 0x0A, 0x50, 0xB0, 0xAF, 0xCE, 0xA6, 0x75, 0x7F, 0x68, 0x88, 0x54, 0x2E, 0x27, 0x60, 0x02, 
	0x4F, 0x36, 0xC9, 0xD0, 0x5B, 0xDB, 0x62, 0x6E, 0x82, 0xE1, 0x7A, 0x9D, 0x4D, 0x0A, 0x91, 0x5D, 
	0x98, 0xF0, 0x7D, 0x89, 0xEA, 0xEA, 0xE6, 0x80, 0xBA, 0x42, 0xE8, 0x88, 0x6F, 0xA4, 0x51, 0xDD, 
	0x77, 0x60, 0x20, 0x63, 0x85, 0x37, 0x54, 0x79, 0x3B, 0xB4, 0x61, 0x40, 0x3B, 0x25, 0xF5, 0x83, 
	0xF0, 0xC1, 0xEC, 0x2E, 0x3A, 0x68, 0x04, 0xD9, 0x25, 0x0D, 0x14, 0x2E, 0x00, 0x47, 0x5E, 0xFB, 
	0xEC, 0x76, 0xF7, 0xE0, 0xAC, 0x17, 0xDF, 0x00, 0x6E, 0xA9, 0xDA, 0xAD, 0xD4, 0xB6, 0xBC, 0xA3, 
	0x0C, 0x35, 0xC5, 0x58, 0x0E, 0x48, 0xB6, 0xFF, 0x65, 0x47, 0x78, 0xEA, 0xA7, 0x8B, 0xE2, 0x57, 
	0x26, 0x26, 0xAE, 0x12, 0x1E, 0x2F, 0xA0, 0x5B, 0xEF, 0x11, 0xDE, 0x1D, 0xD7, 0x93, 0x21, 0x00, 
	0xF1, 0x15, 0x82, 0xA9, 0x79, 0x58, 0x86, 0x7F, 0x64, 0xD3, 0x20, 0x67, 0x62, 0x8B, 0xD5, 0x50, 
	0xD5, 0x3A, 0xAD, 0x09, 0xF9, 0xA7, 0x45, 0xDA, 0x8D, 0x12, 0x3A, 0xBC, 0x2E, 0xCD, 0x57, 0x2F, 
	0x5E, 0x3F, 0xD4, 0xDF, 0x0A, 0xFC, 0x9D, 0x05, 0x9D, 0x21, 0x71, 0xB0, 0xCE, 0xEA, 0x83, 0xC7, 
	0xAD, 0x68, 0xA0, 0x49, 0x62, 0x62, 0xE8, 0x21, 0xA7, 0x10, 0x6F, 0x98, 0x9C, 0x3E, 0x0C, 0x4A, 
	0x18, 0x5F, 0x04, 0x94, 0x8C, 0x9E, 0x00, 0x75, 0xFF, 0xA7, 0xC6, 0x74, 0x47, 0x52, 0x73, 0x30, 
	0x3A, 0xF0, 0x66, 0x70, 0x0A, 0x41, 0x15, 0xA9, 0x29, 0x37 };

#define ran_e_state 0x10U // Size: Xoroshiro128+ 64 state size.

// Bootstrap/Integral Function (RAN_E_RAND - opcode 0x4B53): Xoroshiro128+ 64 generate.
#define ran_e_rand_key eed03d6205706b22
#define ran_e_rand_size ee37fa320664cc36
#define ran_e_rand_crc dbd6f78fae11952f
#define ran_e_rand_data b52869d331d66379
static uint64_t ran_e_rand_key = UINT64_C(0x29CE2E21AD5BEA6D);
static uint64_t ran_e_rand_size = UINT64_C(0x2B);
static uint64_t ran_e_rand_crc = UINT64_C(0xB4540D0FF4BB8B46);
static uint8_t ran_e_rand_data[] = { 
	0x04, 0xBC, 0x68, 0x9C, 0xD7, 0x9C, 0xC4, 0xB2, 0xF2, 0x10, 0x64, 0x06, 0x93, 0x69, 0x3B, 0x7A, 0xCF, 
	0xFC, 0x04, 0xAC, 0xF3, 0x84, 0x64, 0x3C, 0xED, 0x3E, 0x17, 0xF2, 0x8F, 0x38, 0x57, 0x4F, 0x04, 
	0x34, 0xE7, 0x9F, 0xD2, 0x05, 0x16, 0x59, 0x97, 0xA3, 0xDC };

// Bootstrap/Integral Function (RAN_E_SEED - opcode 0x97B6): Xoroshiro128+ 64 seed.
#define ran_e_seed_key ba9f63b279aacc82
#define ran_e_seed_size bf0b4f0c365e8a3a
#define ran_e_seed_crc b47dba020a5a5459
#define ran_e_seed_data e272feadf997a761
static uint64_t ran_e_seed_key = UINT64_C(0x15FDB220F1BC46A2);
static uint64_t ran_e_seed_size = UINT64_C(0xDC);
static uint64_t ran_e_seed_crc = UINT64_C(0x85C87E297F90B0);
static uint8_t ran_e_seed_data[] = { 
	0x26, 0xDB, 0xCB, 0x07, 0xE9, 0xDB, 0xA1, 0xFC, 0xDE, 0x38, 0x9A, 0x9D, 0xD3, 0x99, 0xB4, 0x7F, 0x80, 
	0x3B, 0x93, 0xDB, 0xC9, 0xEC, 0xC5, 0x7A, 0x63, 0xE6, 0x9D, 0x11, 0xE8, 0x7B, 0x2A, 0xBF, 0x89, 
	0x09, 0xE9, 0x9D, 0xE3, 0x8E, 0x8B, 0x6A, 0xB3, 0x9B, 0x39, 0x34, 0x31, 0x67, 0xB2, 0xD3, 0xEF, 
	0xB0, 0x2B, 0xB7, 0xFE, 0xF2, 0xBC, 0xC4, 0xE5, 0x08, 0x18, 0x90, 0xFC, 0x6C, 0xE2, 0xC4, 0x34, 
	0x53, 0x32, 0x30, 0xA7, 0xE5, 0xD2, 0xBE, 0x79, 0x22, 0x3E, 0x39, 0xD8, 0x80, 0xCD, 0x86, 0xAC, 
	0xE0, 0x31, 0xA1, 0xEA, 0x32, 0x5D, 0xA7, 0x8A, 0x1A, 0x9E, 0xDF, 0x17, 0xAC, 0xAC, 0x4F, 0x32, 
	0x54, 0x4E, 0x38, 0x38, 0x8C, 0xEB, 0x3F, 0x10, 0x8E, 0xCD, 0xA7, 0x20, 0x88, 0xFF, 0xF8, 0x98, 
	0x36, 0xBE, 0x07, 0x50, 0xD7, 0x54, 0x95, 0xD0, 0x0A, 0xE1, 0x97, 0xF3, 0x79, 0x3F, 0xD4, 0x8C, 
	0xAE, 0xCD, 0xD0, 0x26, 0xF0, 0x5B, 0x66, 0x49, 0xCD, 0xB9, 0xF8, 0x23, 0xF2, 0xE0, 0x85, 0x9C, 
	0xAF, 0xB4, 0x0E, 0x8B, 0xC7, 0x48, 0xF6, 0x1D, 0x93, 0x0C, 0x54, 0x05, 0x01, 0xCF, 0xFD, 0xEB, 
	0x5C, 0x50, 0xCE, 0xA9, 0xA9, 0x76, 0x21, 0xEF, 0x3F, 0xFB, 0x78, 0xCD, 0xC8, 0x21, 0x1D, 0x4A, 
	0x4F, 0xA5, 0x8C, 0x4D, 0xBB, 0x75, 0xF8, 0x4D, 0x58, 0xDE, 0x91, 0xB8, 0xCE, 0xBA, 0xBE, 0x32, 
	0x85, 0xC0, 0x36, 0x9F, 0x8D, 0x1D, 0x8F, 0xB6, 0x01, 0x13, 0x43, 0x48, 0xAE, 0x7D, 0x49, 0xB6, 
	0xD4, 0x1F, 0x15, 0x58, 0xC5, 0x20, 0x92, 0x5C, 0x69, 0x35, 0x24 };

#define ran_f_state 0x84U // Size: XorShift1024* 64 state size.

// Bootstrap/Integral Function (RAN_F_RAND - opcode 0x8A41): XorShift1024* 64 generate.
#define ran_f_rand_key c2507592a69291f4
#define ran_f_rand_size bba52cc1d1f691e4
#define ran_f_rand_crc b879e1df5f155249
#define ran_f_rand_data c3e494c34a0f5280
static uint64_t ran_f_rand_key = UINT64_C(0xDC873ECADA20BBC8);
static uint64_t ran_f_rand_size = UINT64_C(0x53);
static uint64_t ran_f_rand_crc = UINT64_C(0x6B5E4B00842AEC19);
static uint8_t ran_f_rand_data[] = { 
	0xC4, 0xF2, 0xD7, 0x2A, 0x7A, 0x59, 0x9F, 0xD2, 0x41, 0xFB, 0x8A, 0x0F, 0x87, 0x32, 0x5F, 0xBF, 0x6B, 
	0x9C, 0xD0, 0xAF, 0x72, 0xA8, 0x4B, 0x26, 0x4E, 0x0C, 0x28, 0x90, 0x2D, 0x64, 0x1A, 0xCE, 0xB7, 
	0x4C, 0xDC, 0x5A, 0x6A, 0x23, 0xD8, 0x83, 0x94, 0xF9, 0x66, 0xE4, 0x4C, 0xDF, 0x20, 0xC9, 0xF8, 
	0xFD, 0xAB, 0xC7, 0xBF, 0x1A, 0xB1, 0x11, 0xE7, 0x75, 0x19, 0x42, 0x21, 0x9D, 0x1C, 0xF4, 0xC8, 
	0x9F, 0x18, 0x2C, 0x73, 0x27, 0xDD, 0xBF, 0xFB, 0x0B, 0x0D, 0xF7, 0xE4, 0x86, 0x8E, 0xFB, 0x37, 
	0x19, 0xB0 };

// Bootstrap/Integral Function (RAN_F_SEED - opcode 0xCF88): XorShift1024* 64 seed.
#define ran_f_seed_key c3b85c3a50168493
#define ran_f_seed_size b8b49e5ee37a9661
#define ran_f_seed_crc b6217d49d35e67a3
#define ran_f_seed_data cd71b603d4a19cc0
static uint64_t ran_f_seed_key = UINT64_C(0x2158D94EA4C95567);
static uint64_t ran_f_seed_size = UINT64_C(0x7D);
static uint64_t ran_f_seed_crc = UINT64_C(0x9B855DDAA4AFE743);
static uint8_t ran_f_seed_data[] = { 
	0xCA, 0x2A, 0xF2, 0x36, 0xE2, 0x7E, 0xDD, 0x1B, 0x11, 0x3B, 0xB9, 0x51, 0x19, 0x4A, 0x43, 0xA1, 0xC3, 
	0xFD, 0xBD, 0xB4, 0x6E, 0x8A, 0x96, 0x6F, 0x35, 0xC1, 0xC3, 0xEA, 0xCC, 0xED, 0x6F, 0xF6, 0x37, 
	0x44, 0x7C, 0x45, 0x4E, 0x93, 0xDB, 0xA5, 0xCC, 0x0E, 0x6F, 0x30, 0x1C, 0x02, 0xF7, 0xF5, 0xEC, 
	0x4E, 0x6A, 0x52, 0x13, 0x49, 0x67, 0x58, 0xA5, 0xD2, 0x24, 0xA6, 0x8B, 0xB7, 0xBC, 0x07, 0x07, 
	0x5D, 0x57, 0x3A, 0xBC, 0x9D, 0x8C, 0xA9, 0x4F, 0xA3, 0xAC, 0x89, 0x4F, 0x31, 0x6E, 0x4B, 0x88, 
	0x4A, 0x27, 0xE4, 0x33, 0xB8, 0x32, 0xEF, 0x5A, 0x2D, 0x92, 0x38, 0x52, 0x5F, 0xE0, 0x51, 0x87, 
	0xAE, 0xF6, 0x9B, 0xBD, 0xD2, 0xC0, 0x68, 0xE1, 0xDA, 0x60, 0x38, 0xCA, 0x79, 0xCC, 0x45, 0xB2, 
	0xD0, 0x6D, 0x7F, 0xD4, 0x6C, 0x0A, 0xD3, 0x8D, 0xE8, 0xAB, 0x33, 0x10 };

#define ran_g_state 0x10U // Size: Modified PCG 64 state size.

// Bootstrap/Integral Function (RAN_G_RAND - opcode 0x8201): Modified PCG 64 generate.
#define ran_g_rand_key a78fbc03fe455512
#define ran_g_rand_size b8ce4afd2a8fccff
#define ran_g_rand_crc d5471260db8f3799
#define ran_g_rand_data f2d42b2152288def
static uint64_t ran_g_rand_key = UINT64_C(0xA379B2784E6D75EF);
static uint64_t ran_g_rand_size = UINT64_C(0x2EF);
static uint64_t ran_g_rand_crc = UINT64_C(0xBEA2F43191F85D93);
static uint8_t ran_g_rand_data[] = { 
	0x0B, 0x94, 0x47, 0x7A, 0xED, 0xCD, 0x4A, 0xE6, 0x54, 0xE4, 0x27, 0x71, 0xB1, 0xEC, 0xCC, 0x5E, 0x4D, 
	0xEE, 0x0B, 0x66, 0x8C, 0x9D, 0x4C, 0x30, 0x2C, 0x32, 0x56, 0xD2, 0x1C, 0xA3, 0x32, 0x30, 0x24, 
	0x09, 0x49, 0x27, 0x4D, 0x6B, 0x5E, 0x02, 0x8D, 0x2C, 0xB1, 0x3B, 0xCE, 0x68, 0x02, 0xE3, 0x97, 
	0xDB, 0x90, 0x71, 0xEA, 0x7C, 0x5C, 0xE7, 0x86, 0x54, 0x43, 0xD6, 0x01, 0x14, 0x64, 0x5C, 0xED, 
	0x7A, 0xA7, 0x2C, 0x50, 0x7A, 0xF9, 0x28, 0x14, 0x27, 0xF5, 0xF6, 0x80, 0x45, 0xDF, 0x2C, 0xBF, 
	0x72, 0xC4, 0xAF, 0x4D, 0x2C, 0x0B, 0x6C, 0xA5, 0x90, 0xC2, 0xC8, 0xA0, 0xF0, 0xB5, 0x76, 0xAC, 
	0x9E, 0x35, 0x9E, 0xCF, 0x92, 0xEE, 0x51, 0xEA, 0xEF, 0x6B, 0x1E, 0x37, 0x7B, 0x29, 0xEB, 0x3C, 
	0x09, 0x08, 0xD1, 0x14, 0x42, 0xBD, 0x51, 0xBF, 0xDC, 0x0F, 0x73, 0x17, 0x58, 0x76, 0x04, 0x72, 
	0xE6, 0x55, 0xB4, 0x4F, 0x4C, 0x31, 0xB2, 0x0F, 0xD8, 0xF1, 0x3E, 0x45, 0x9A, 0x98, 0xC6, 0x15, 
	0xD3, 0xBF, 0x64, 0xFD, 0x35, 0xC6, 0x32, 0xA6, 0xC2, 0xD3, 0xD2, 0x28, 0x3F, 0x6D, 0xF9, 0x5F, 
	0xE6, 0x8F, 0x98, 0xAA, 0xE6, 0xE4, 0xEC, 0xEA, 0xBC, 0x56, 0x15, 0x11, 0x8E, 0x4B, 0xA5, 0x60, 
	0x57, 0x0D, 0xC3, 0xB5, 0xF9, 0x3E, 0x06, 0x03, 0xF8, 0x5C, 0x54, 0x61, 0xA8, 0x52, 0x96, 0x26, 
	0x58, 0xAB, 0x76, 0x78, 0x82, 0x29, 0x23, 0x5D, 0x91, 0x14, 0xEB, 0x79, 0xFB, 0x4C, 0xEE, 0x14, 
	0x27, 0xEC, 0x71, 0xBD, 0x78, 0x23, 0x08, 0x9F, 0x70, 0xF3, 0x37, 0xA8, 0x84, 0xA2, 0x5E, 0x09, 
	0x92, 0x89, 0xDD, 0x8F, 0x02, 0x97, 0x98, 0x39, 0x2B, 0x6F, 0x86, 0x45, 0xEC, 0xE3, 0x75, 0xBE, 
	0x82, 0x70, 0xCE, 0xE6, 0xBC, 0xFC, 0x49, 0xFD, 0xAD, 0xB6, 0x37, 0x2C, 0x0C, 0x91, 0x61, 0x6D, 
	0xDA, 0x66, 0xE0, 0xE8, 0x87, 0xCE, 0x80, 0x91, 0x0D, 0x65, 0x32, 0x2F, 0x4C, 0xD7, 0xD8, 0x66, 
	0x81, 0x64, 0x57, 0x97, 0x95, 0x53, 0xE7, 0x08, 0xDF, 0x1C, 0x47, 0xD8, 0x41, 0x8A, 0x47, 0x3C, 
	0xA4, 0x7A, 0x05, 0x81, 0xE1, 0x3B, 0xF9, 0x76, 0xAC, 0x41, 0x8E, 0x9E, 0x5B, 0xCB, 0x99, 0xB0, 
	0x98, 0x05, 0x20, 0xEB, 0xF6, 0x86, 0xD5, 0xD9, 0x69, 0xA6, 0x18, 0x47, 0x08, 0x41, 0x67, 0x73, 
	0x0D, 0xE2, 0xC6, 0xAF, 0x6E, 0x6F, 0x15, 0x12, 0x5C, 0x25, 0x30, 0x88, 0xFA, 0xA0, 0xB8, 0x00, 
	0x01, 0x0D, 0x68, 0xF9, 0x43, 0xF8, 0x8B, 0x6E, 0x36, 0xB5, 0x15, 0x69, 0xDB, 0x50, 0xEE, 0x04, 
	0xDF, 0x3B, 0xB7, 0x44, 0xC3, 0xD3, 0x80, 0x4A, 0x61, 0x31, 0x33, 0x12, 0x1F, 0x72, 0xDB, 0xC8, 
	0x39, 0xD4, 0x86, 0x04, 0x5C, 0x7F, 0x70, 0x8B, 0xA8, 0x31, 0x8E, 0xEE, 0xF5, 0x2F, 0x2B, 0x7C, 
	0x84, 0x83, 0x96, 0x11, 0x2F, 0xC5, 0xA8, 0xF6, 0x10, 0x5A, 0x94, 0x43, 0x72, 0xC8, 0xBF, 0x1C, 
	0xA6, 0xCC, 0xA7, 0xC7, 0xF1, 0x9C, 0x7A, 0x32, 0xF4, 0xFB, 0x85, 0x40, 0x8E, 0x3A, 0x8D, 0x44, 
	0x7D, 0x78, 0xC5, 0xA8, 0x60, 0x16, 0x8A, 0x50, 0x9B, 0xF9, 0x98, 0xA9, 0xC3, 0xF5, 0x08, 0x38, 
	0x23, 0x21, 0xDC, 0x02, 0x92, 0xC6, 0x0E, 0x50, 0x1E, 0x70, 0x1E, 0x00, 0x1E, 0x8F, 0xD1, 0x25, 
	0xF1, 0x50, 0x87, 0x8F, 0xF5, 0x4D, 0xB2, 0xE7, 0x7B, 0xB8, 0x71, 0x9E, 0xBF, 0x8C, 0x56, 0x55, 
	0xC2, 0x5C, 0x55, 0x4E, 0x52, 0x0B, 0xC5, 0x2F, 0xBB, 0xFA, 0xBC, 0x48, 0x6B, 0xCF, 0xC3, 0xE7, 
	0x78, 0x04, 0xD8, 0xA2, 0x6E, 0xAD, 0x14, 0x4C, 0x1A, 0xEF, 0xD2, 0xA3, 0x37, 0xE0, 0x35, 0x06, 
	0xB4, 0xB2, 0x20, 0x7A, 0x3A, 0x5F, 0x2B, 0x10, 0xFB, 0xE7, 0x5A, 0xC4, 0xC1, 0xD2, 0x1D, 0x7E, 
	0x85, 0x5E, 0x46, 0x48, 0x1D, 0x57, 0x5B, 0xE3, 0x20, 0x08, 0x67, 0xA8, 0xEB, 0x34, 0xAD, 0x2C, 
	0xC4, 0x13, 0x56, 0xA9, 0xF3, 0x44, 0x6E, 0xFF, 0x26, 0xD8, 0xC1, 0x50, 0x84, 0x4A, 0xAC, 0x36, 
	0xA6, 0x3D, 0xDE, 0xA9, 0x96, 0x1E, 0x5C, 0x2B, 0x73, 0xD9, 0xE3, 0x57, 0xF6, 0x97, 0x6D, 0xB2, 
	0xD8, 0xF7, 0x8E, 0xCF, 0xCB, 0x6D, 0xA1, 0xAD, 0xA6, 0xDE, 0xE4, 0x29, 0x36, 0x53, 0x2B, 0x83, 
	0x73, 0x22, 0x6F, 0x0D, 0x7A, 0x15, 0xCF, 0x6C, 0xE7, 0xCF, 0x6E, 0xC7, 0xF0, 0x78, 0x03, 0x0B, 
	0x42, 0x6E, 0xEA, 0x7C, 0xE6, 0x37, 0x20, 0xAA, 0x1F, 0x04, 0x89, 0xC7, 0x92, 0x1C, 0x78, 0x2A, 
	0x13, 0xEE, 0xC1, 0xB8, 0xC9, 0xBB, 0xFB, 0xF5, 0xB5, 0x44, 0x60, 0x34, 0x1B, 0x56, 0xFE, 0x46, 
	0x55, 0xB6, 0x7B, 0x1D, 0x4F, 0xF9, 0x53, 0xA6, 0xDB, 0x9F, 0x3A, 0x5E, 0x36, 0xCB, 0xD2, 0xAF, 
	0x61, 0xFC, 0x6B, 0x82, 0x75, 0x71, 0x45, 0x28, 0xD3, 0x20, 0x2F, 0x3F, 0x4F, 0xE9, 0x38, 0x8C, 
	0x60, 0x2C, 0x82, 0x88, 0x26, 0xCA, 0x29, 0xF2, 0xDF, 0x16, 0x64, 0x63, 0x09, 0x87, 0xDB, 0xB9, 
	0x16, 0x41, 0x46, 0x6C, 0x3E, 0x51, 0x21, 0x1D, 0x83, 0xA9, 0x48, 0x7E, 0x33, 0xEA, 0x56, 0x40, 
	0x5B, 0xF8, 0x8D, 0xAB, 0x59, 0xB7, 0xF8, 0xDD, 0x16, 0x3E, 0x47, 0x42, 0xC9, 0x50, 0x47, 0x67, 
	0xAE, 0xB5, 0x95, 0x43, 0x69, 0x32, 0x51, 0xD9, 0xB2, 0x51, 0xF5, 0x0F, 0x99, 0x39, 0xC9, 0x67, 
	0x30, 0x41, 0xC9, 0x52, 0x57, 0x41, 0x08, 0x15, 0xA2, 0x65, 0x43, 0xD9, 0x32, 0xCE, 0x94, 0xCA, 
	0xA4, 0x8D, 0x7C, 0xC1, 0x4F, 0xE5, 0x3B, 0x17, 0x0A, 0x63, 0x1A, 0x85, 0xA2, 0x9C };

// Bootstrap/Integral Function (RAN_G_SEED - opcode 0x36CC): Modified PCG 64 seed.
#define ran_g_seed_key b83619572ad291ea
#define ran_g_seed_size f24efd6f41140429
#define ran_g_seed_crc bd944ade742e5d9a
#define ran_g_seed_data db603c9ebfe41f39
static uint64_t ran_g_seed_key = UINT64_C(0xA37C7DE08509A7E7);
static uint64_t ran_g_seed_size = UINT64_C(0x2EC);
static uint64_t ran_g_seed_crc = UINT64_C(0xD1AE59EA0B68DB08);
static uint8_t ran_g_seed_data[] = { 
	0x2E, 0x55, 0x7E, 0xDB, 0x5C, 0x29, 0xA8, 0x76, 0x2D, 0x41, 0x64, 0x11, 0x48, 0x47, 0xAF, 0xA9, 0x95, 
	0x6C, 0xB2, 0x3E, 0x19, 0xDB, 0xA4, 0x47, 0xED, 0x86, 0x20, 0xB7, 0x5F, 0x87, 0x88, 0x32, 0x90, 
	0x88, 0x16, 0xAF, 0x03, 0xC5, 0x2C, 0x10, 0x63, 0x5F, 0xE0, 0x07, 0x99, 0xA3, 0xB6, 0x04, 0x3A, 
	0x30, 0xA3, 0x92, 0xF3, 0xFF, 0xC6, 0xFE, 0xD8, 0xF7, 0x51, 0xCA, 0x79, 0x09, 0x1E, 0xE8, 0x62, 
	0x98, 0xF8, 0xE3, 0x7F, 0x77, 0x18, 0x93, 0x68, 0x53, 0x2D, 0xF7, 0x3F, 0x6E, 0x2F, 0xA7, 0x1E, 
	0x50, 0xFA, 0x9B, 0xCD, 0xF0, 0xD5, 0xA4, 0xEE, 0x8B, 0xF7, 0xB2, 0x2B, 0xAE, 0x21, 0x15, 0x70, 
	0x54, 0x1D, 0xEC, 0x86, 0xAE, 0x80, 0x9B, 0x7B, 0x4D, 0x90, 0xD9, 0xEE, 0xF9, 0xE0, 0x6E, 0xE2, 
	0xF9, 0xB4, 0xFC, 0xB9, 0x06, 0xF6, 0xCF, 0x71, 0xE8, 0x78, 0x12, 0x52, 0x3B, 0xAE, 0xC0, 0x99, 
	0x23, 0x4B, 0x7D, 0x08, 0xAB, 0x6C, 0xE4, 0xFF, 0x63, 0xB5, 0x13, 0xEC, 0x47, 0x03, 0x98, 0x09, 
	0x67, 0x37, 0x16, 0x7A, 0x27, 0x44, 0xE2, 0x41, 0x77, 0x1E, 0xF7, 0x9F, 0x69, 0x5B, 0x07, 0xB3, 
	0xF4, 0x90, 0x50, 0xD0, 0xDC, 0x75, 0x11, 0x81, 0x9D, 0x03, 0xBB, 0x7F, 0x34, 0x3B, 0x45, 0xB2, 
	0x29, 0x98, 0x68, 0xA0, 0x26, 0xE0, 0x77, 0xBA, 0x33, 0x76, 0x74, 0xD7, 0x51, 0xE0, 0xC3, 0x76, 
	0xB1, 0x76, 0xFE, 0x4F, 0x78, 0xF2, 0x5E, 0x0B, 0xFE, 0x37, 0x8E, 0x20, 0x8C, 0x13, 0x37, 0x94, 
	0xAD, 0x27, 0x36, 0xAC, 0x65, 0xA0, 0x05, 0x5C, 0xA4, 0x90, 0xFE, 0x55, 0x0F, 0xCD, 0x6E, 0xA9, 
	0xF4, 0xB7, 0x92, 0xD4, 0x63, 0xC7, 0xB5, 0x2F, 0x22, 0xDB, 0xBE, 0x4B, 0x83, 0x85, 0x23, 0x6E, 
	0xDE, 0xC9, 0x69, 0xE2, 0x2F, 0x27, 0x52, 0xC0, 0x41, 0x64, 0x8C, 0xC7, 0x4B, 0x0F, 0x69, 0x2C, 
	0xA9, 0x55, 0x0D, 0x5D, 0xAC, 0x29, 0x27, 0x57, 0xFC, 0x16, 0x72, 0xF1, 0x47, 0x3E, 0x69, 0xA7, 
	0x44, 0x6E, 0x3F, 0x9C, 0x27, 0x14, 0xCC, 0x66, 0xB3, 0xC6, 0x07, 0xF8, 0x91, 0x09, 0xBD, 0x01, 
	0x46, 0xA0, 0x17, 0x7F, 0xB3, 0x46, 0xCB, 0x7E, 0x98, 0xCD, 0x51, 0x71, 0x91, 0xBA, 0x7E, 0x71, 
	0xC2, 0x40, 0xB2, 0xF4, 0x11, 0x36, 0xD2, 0x70, 0x0A, 0x0A, 0x00, 0x68, 0x1E, 0x5E, 0x88, 0x82, 
	0xE9, 0x5D, 0x69, 0x5E, 0x4D, 0xAC, 0xB3, 0x8A, 0xEE, 0x6B, 0xC6, 0x90, 0x12, 0x98, 0xFF, 0x85, 
	0x88, 0xB3, 0xDE, 0x88, 0xD7, 0xD9, 0x15, 0xC2, 0xD6, 0xED, 0x1F, 0xDB, 0x5E, 0x9E, 0x96, 0x8B, 
	0xB2, 0xFF, 0xF7, 0xC1, 0xF2, 0xD2, 0xC0, 0x1E, 0x64, 0x95, 0x2B, 0x43, 0x61, 0xD8, 0xF8, 0xAA, 
	0x55, 0x38, 0x42, 0xE0, 0xD4, 0x2B, 0x07, 0xD6, 0xC2, 0x1D, 0xBE, 0xF5, 0x38, 0x2F, 0xF6, 0x28, 
	0x17, 0x1E, 0xF8, 0x71, 0x4C, 0xEC, 0x00, 0xFB, 0x5A, 0x24, 0x1C, 0x52, 0xE6, 0xDD, 0xA3, 0xE8, 
	0xD6, 0x96, 0xF0, 0x71, 0x1B, 0x10, 0xB2, 0x2A, 0xB0, 0x69, 0xF0, 0xCD, 0x06, 0xC3, 0xC3, 0x97, 
	0x4A, 0x09, 0x9F, 0xD2, 0x42, 0x7A, 0x95, 0x33, 0x63, 0xED, 0x0B, 0xF9, 0xBF, 0x87, 0xDB, 0xA1, 
	0x1E, 0x61, 0x61, 0x2B, 0x6A, 0x64, 0xC9, 0x1A, 0xE1, 0x47, 0x84, 0xC1, 0xD4, 0x0A, 0xAC, 0x1F, 
	0x0D, 0xC1, 0xBC, 0x1C, 0x2A, 0x63, 0xD2, 0x82, 0xB3, 0x17, 0x7F, 0x53, 0x99, 0x46, 0xED, 0xB0, 
	0x38, 0xC4, 0x8B, 0xC9, 0x76, 0xA6, 0x02, 0x9C, 0xE3, 0xF4, 0xE6, 0x7F, 0x3E, 0x1F, 0x0D, 0x44, 
	0xE7, 0x61, 0x23, 0x5F, 0x97, 0x13, 0x60, 0xE6, 0x29, 0x72, 0x19, 0xA1, 0x6B, 0x1C, 0x85, 0x37, 
	0xFD, 0xF6, 0x25, 0x52, 0x27, 0x8A, 0xD0, 0xEE, 0xF3, 0x8C, 0x08, 0xD8, 0xBC, 0x43, 0xA8, 0xEB, 
	0xED, 0x16, 0xC0, 0xF3, 0x4A, 0xB3, 0xD9, 0x2F, 0xA5, 0x74, 0x66, 0x81, 0xFA, 0x0F, 0x35, 0xE4, 
	0x3F, 0x01, 0x97, 0x93, 0x1A, 0x38, 0xCB, 0xF8, 0xF9, 0xC1, 0x9A, 0x26, 0xC2, 0x2D, 0xAB, 0x16, 
	0x5A, 0xCB, 0x53, 0x9E, 0xBA, 0x2E, 0xD7, 0xE3, 0xBF, 0x74, 0x6D, 0xB0, 0x88, 0x1E, 0x9D, 0xB6, 
	0x42, 0x22, 0xD2, 0xAB, 0x03, 0x6A, 0xAE, 0xB3, 0x5B, 0x0A, 0x5D, 0xC6, 0xB5, 0x42, 0xA4, 0xA4, 
	0x7A, 0xFF, 0xBC, 0x6C, 0x64, 0x59, 0x20, 0xEB, 0x62, 0x82, 0xE7, 0x1B, 0xE2, 0xDF, 0xF4, 0x65, 
	0xC5, 0x28, 0x38, 0x59, 0x82, 0x87, 0xCA, 0xA0, 0x27, 0xD6, 0x1E, 0x59, 0xFE, 0xF6, 0x6A, 0xF1, 
	0xEC, 0xC0, 0x5F, 0x92, 0xF0, 0xD5, 0x9F, 0xE8, 0x39, 0x61, 0x96, 0x1E, 0xFD, 0x6E, 0xF5, 0x89, 
	0x9A, 0xDC, 0x9F, 0x35, 0xBC, 0xA7, 0xA9, 0x7C, 0x6F, 0xC1, 0x5A, 0x8F, 0xCB, 0xE4, 0xBE, 0x3E, 
	0x08, 0xE6, 0x07, 0x9A, 0x45, 0xF4, 0x1F, 0x81, 0x6B, 0x0F, 0xC1, 0x92, 0xCB, 0x8A, 0x8C, 0xA4, 
	0xB4, 0x52, 0x42, 0x34, 0xF2, 0x78, 0xE9, 0x33, 0x29, 0xFB, 0x96, 0xB0, 0xEB, 0x0B, 0xA6, 0xD4, 
	0x1C, 0x7A, 0xD8, 0xFB, 0xE0, 0x76, 0x68, 0xFF, 0x2F, 0x68, 0x8F, 0xF9, 0x8B, 0x14, 0xDF, 0x40, 
	0xB3, 0x9B, 0x93, 0x98, 0x5F, 0xB4, 0x4E, 0x4A, 0x9E, 0x93, 0x9B, 0x6F, 0xB7, 0x0C, 0xA0, 0x6A, 
	0x1E, 0x90, 0xBD, 0x45, 0x16, 0xCF, 0x25, 0xB0, 0x04, 0x25, 0xB9, 0x98, 0x65, 0xA0, 0xE1, 0xEA, 
	0x0A, 0xB9, 0x69, 0xED, 0x24, 0xD6, 0x42, 0x58, 0x3C, 0xAD, 0xC5, 0xDC, 0x1B, 0xEA, 0xB4, 0x31, 
	0x7B, 0x18, 0x5F, 0x50, 0x59, 0x3E, 0x47, 0x87, 0x31, 0x9F, 0x3B };

