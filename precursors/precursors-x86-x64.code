
# Tests for rdrand support: sec_g64_f.
FN: HRDRND64 = 53, B8, 01, 00, 00, 00, 0F, A2, 0F, BA, E1, 1E, 73, 09, 48, C7, C0, 01, 00, 00, 00, 5B, C3, 48, 2B, C0, EB, F2;

# Read rand via rdrand: sec_g64_f.
FN: RDRAND64 = 48, 0F, C7, F0, 73, FA, C3;

# Multiply using Schrage's method: sec_sch_t;
FN: SHRGML64 = 48, 89, 5C, 24, 08, 48, 89, 74, 24, 10, 48, 89, 7C, 24, 18, 48, 8B, F2, 48, 8B, C1, 33, D2, 45, 33, DB, 49, F7, F1, 4D, 8B, D0, 48, 8B, DA, 48, 8B, F8, 48, 85, D2, 75, 05, 41, 8B, DB, EB, 43, 33, D2, 49, 8B, C2, 48, F7, F3, 48, 8B, C8, 4C, 8B, C2, 33, D2, 48, 8B, C6, 48, F7, F1, 4B, 8D, 0C, 12, 49, 0F, AF, C0, 48, 2B, C8, 48, 8B, C1, 49, 2B, C2, 49, 3B, CA, 48, 0F, 42, C1, 48, 0F, AF, D3, 48, 8D, 0C, 10, 48, 8B, D9, 49, 2B, DA, 49, 3B, CA, 48, 0F, 42, D9, 4D, 85, C9, 75, 05, 4D, 8B, CB, EB, 43, 33, D2, 49, 8B, C2, 49, F7, F1, 48, 8B, C8, 4C, 8B, C2, 33, D2, 48, 8B, C6, 48, F7, F1, 4B, 8D, 0C, 12, 49, 0F, AF, C0, 48, 2B, C8, 48, 8B, C1, 49, 2B, C2, 49, 3B, CA, 48, 0F, 42, C1, 49, 0F, AF, D1, 48, 8D, 0C, 10, 4C, 8B, C9, 4D, 2B, CA, 49, 3B, CA, 4C, 0F, 42, C9, 48, 85, FF, 74, 43, 33, D2, 49, 8B, C2, 48, F7, F7, 48, 8B, C8, 4C, 8B, C2, 33, D2, 49, 8B, C1, 48, F7, F1, 4B, 8D, 0C, 12, 4C, 0F, AF, C0, 49, 2B, C8, 48, 8B, C1, 49, 2B, C2, 49, 3B, CA, 48, 0F, 42, C1, 48, 0F, AF, D7, 48, 8D, 0C, 10, 4C, 8B, D9, 4D, 2B, DA, 49, 3B, CA, 4C, 0F, 42, D9, 48, 8B, 74, 24, 10, 49, 8D, 0C, 1B, 48, 8B, 5C, 24, 08, 48, 8B, C1, 48, 8B, 7C, 24, 18, 49, 2B, C2, 49, 3B, CA, 48, 0F, 42, C1, C3;

# Fishman-20 64 RNG state size: uint64_t.
SZ: FS20SS64 = sizeof(uint64_t);

# Fishman-20 64 RNG seed: sec_srs_f.
FN: FS20SD64 = 4C, 8B, C2, 4C, 8B, C9, 48, B8, 05, 00, 00, 00, 02, 00, 00, 00, B9, 01, 00, 00, 00, 48, F7, E2, 49, 8B, C0, 48, 2B, C2, 48, D1, E8, 48, 03, C2, 48, C1, E8, 1E, 48, 69, C0, FF, FF, FF, 7F, 4C, 3B, C0, 49, 0F, 45, C8, 0F, BA, F1, 1F, 49, 89, 09, C3;

# Fishman-20 64 RNG generate: sec_r64_f.
FN: FS20RG64 = 4C, 8B, C9, 49, BA, 69, D8, 3B, 4C, C8, 89, 47, 5E, 49, 8B, C2, 48, F7, 21, 48, 69, 09, 8F, BC, 00, 00, 48, C1, EA, 0E, 48, 69, C2, FF, FF, FF, 7F, 48, 2B, C8, 79, 0C, 48, 8D, 81, FF, FF, FF, 7F, 49, 89, 01, EB, 03, 49, 89, 09, 45, 8B, 01, 49, 8B, C2, 49, F7, 21, 48, C1, EA, 0E, 48, 69, C2, FF, FF, FF, 7F, 49, 69, 11, 8F, BC, 00, 00, 48, 2B, D0, 79, 0C, 48, 8D, 82, FF, FF, FF, 7F, 49, 89, 01, EB, 03, 49, 89, 11, 49, 8B, 09, 48, 8D, 04, 8D, 00, 00, 00, 00, 44, 33, C0, 49, 8B, C2, 48, F7, E1, 44, 89, 44, 24, 08, 48, C1, EA, 0E, 48, 69, C2, FF, FF, FF, 7F, 48, 69, D1, 8F, BC, 00, 00, 48, 2B, D0, 79, 0C, 48, 8D, 82, FF, FF, FF, 7F, 49, 89, 01, EB, 03, 49, 89, 11, 45, 8B, 01, 49, 8B, C2, 49, F7, 21, 48, C1, EA, 0E, 48, 69, C2, FF, FF, FF, 7F, 49, 69, 11, 8F, BC, 00, 00, 48, 2B, D0, 79, 1C, 48, 8D, 82, FF, FF, FF, 7F, 49, 89, 01, 48, C1, E0, 02, 44, 33, C0, 44, 89, 44, 24, 0C, 48, 8B, 44, 24, 08, C3, 48, 8B, C2, 49, 89, 11, 48, C1, E0, 02, 44, 33, C0, 44, 89, 44, 24, 0C, 48, 8B, 44, 24, 08, C3;

# Knuth 2002 64 with Random Bit Shift RNG state size: uint64_t.
SZ: KN02SS64 = (sizeof(uint32_t) + (sizeof(int64_t) * 0x03F1) + (sizeof(int64_t) * 0x64));

# Knuth 2002 64 with Random Bit Shift RNG seed: sec_srs_f.
FN: KN02SD64 = 48, 89, 5C, 24, 08, 48, 89, 74, 24, 10, 57, 48, 81, EC, 40, 06, 00, 00, 48, 85, D2, 48, 8D, 99, 8C, 1F, 00, 00, 41, B9, 2F, CB, 04, 00, 48, 8B, F9, 4C, 0F, 45, CA, 49, 8D, 51, 02, 81, E2, FE, FF, FF, 3F, 33, F6, 44, 8B, C6, 0F, 1F, 84, 00, 00, 00, 00, 00, 4A, 89, 14, C4, 48, 8D, 04, 12, 49, FF, C0, 48, 8D, 90, 02, 00, 00, C0, 48, 3D, 00, 00, 00, 40, 48, 0F, 42, D0, 49, 83, F8, 64, 7C, DE, 48, FF, 44, 24, 08, 41, BA, 45, 00, 00, 00, 41, 81, E1, FF, FF, FF, 3F, 0F, 1F, 40, 00, 0F, 1F, 84, 00, 00, 00, 00, 00, 48, 8D, 94, 24, 08, 03, 00, 00, 41, B8, 21, 00, 00, 00, 48, 8D, 84, 24, 20, 06, 00, 00, 66, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 48, 8B, 4A, 10, 48, 8D, 52, E8, 48, 89, 48, 10, 48, 89, 70, 08, 48, 8D, 40, D0, 48, 8B, 4A, 20, 48, 89, 48, 30, 48, 89, 70, 28, 48, 8B, 4A, 18, 48, 89, 48, 20, 48, 89, 70, 18, 49, 83, E8, 01, 75, CE, 48, 8D, 94, 24, 10, 03, 00, 00, 41, B8, 63, 00, 00, 00, 48, 8B, 8A, 20, 03, 00, 00, 48, 8B, 82, 28, 01, 00, 00, 48, 8D, 52, F8, 48, 2B, C1, 25, FF, FF, FF, 3F, 48, 89, 82, 30, 01, 00, 00, 48, 8B, 42, 08, 48, 2B, C1, 25, FF, FF, FF, 3F, 48, 89, 42, 08, 49, 83, E8, 01, 75, C9, 41, F6, C1, 01, 74, 50, 48, 8D, 8C, 24, 18, 03, 00, 00, 41, 8D, 50, 32, 0F, 1F, 80, 00, 00, 00, 00, 48, 8B, 01, 48, 89, 41, 08, 48, 8B, 41, F8, 48, 89, 01, 48, 8D, 49, F0, 48, 83, EA, 01, 75, E8, 48, 8B, 84, 24, 20, 03, 00, 00, 48, 8B, 8C, 24, 28, 01, 00, 00, 48, 2B, C8, 48, 89, 04, 24, 81, E1, FF, FF, FF, 3F, 48, 89, 8C, 24, 28, 01, 00, 00, 4D, 85, C9, 74, 05, 49, D1, F9, EB, 03, 41, FF, CA, 45, 85, D2, 0F, 85, FD, FE, FF, FF, 48, 8D, 8B, F8, 01, 00, 00, 48, 8D, 14, 24, 45, 8D, 42, 09, 48, 8B, 02, 48, 8D, 52, 20, 48, 89, 01, 48, 8D, 49, 20, 48, 8B, 42, E8, 48, 89, 41, E8, 48, 8B, 42, F0, 48, 89, 41, F0, 48, 8B, 42, F8, 48, 89, 41, F8, 49, 83, E8, 01, 75, D4, 48, 8B, 02, 41, B8, 0F, 00, 00, 00, 48, 89, 01, 48, 8D, 94, 24, 28, 01, 00, 00, 48, 8B, CB, 66, 66, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 48, 8B, 02, 48, 8D, 52, 20, 48, 89, 01, 48, 8D, 49, 20, 48, 8B, 42, E8, 48, 89, 41, E8, 48, 8B, 42, F0, 48, 89, 41, F0, 48, 8B, 42, F8, 48, 89, 41, F8, 49, 83, E8, 01, 75, D4, 48, 8B, 02, 4C, 8D, 94, 24, 18, 03, 00, 00, 48, 89, 01, 45, 8D, 58, 0A, 48, 8B, 42, 08, 4C, 2B, D3, 48, 89, 41, 08, 48, 8B, 42, 10, 48, 89, 41, 10, 0F, 1F, 40, 00, 66, 66, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 48, 8D, 0C, 24, 48, 8B, D3, 41, B8, 19, 00, 00, 00, 0F, 1F, 00, 48, 8B, 02, 48, 8D, 52, 20, 48, 89, 01, 48, 8D, 49, 20, 48, 8B, 42, E8, 48, 89, 41, E8, 48, 8B, 42, F0, 48, 89, 41, F0, 48, 8B, 42, F8, 48, 89, 41, F8, 49, 83, E8, 01, 75, D4, 48, 8D, 8C, 24, F8, 01, 00, 00, 41, 8D, 50, 21, 0F, 1F, 84, 00, 00, 00, 00, 00, 8B, 81, 08, FE, FF, FF, 2B, 01, 48, 8D, 49, 18, 25, FF, FF, FF, 3F, 48, 89, 81, 10, 01, 00, 00, 8B, 81, F8, FD, FF, FF, 2B, 41, F0, 25, FF, FF, FF, 3F, 48, 89, 81, 18, 01, 00, 00, 8B, 81, 00, FE, FF, FF, 2B, 41, F8, 25, FF, FF, FF, 3F, 48, 89, 81, 20, 01, 00, 00, 48, 83, EA, 01, 75, B8, 41, B8, A2, 00, 00, 00, 48, 8B, D3, 45, 8D, 48, 83, 66, 66, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 41, 8B, 0C, 12, 48, 8D, 52, 08, 41, 8B, C0, 41, FF, C0, 2B, 0C, C4, 81, E1, FF, FF, FF, 3F, 48, 89, 4A, F8, 49, 83, E9, 01, 75, DF, 4C, 8D, 84, 24, 40, 04, 00, 00, 48, 8B, CB, 4C, 2B, C3, 41, 8D, 51, 3F, 0F, 1F, 40, 00, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 41, 8B, 04, 08, 2B, 01, 48, 8D, 49, 08, 25, FF, FF, FF, 3F, 48, 89, 81, 20, 01, 00, 00, 48, 83, EA, 01, 75, E4, 49, 83, EB, 01, 0F, 85, EA, FE, FF, FF, 4C, 8D, 9C, 24, 40, 06, 00, 00, 89, 37, 49, 8B, 5B, 10, 49, 8B, 73, 18, 49, 8B, E3, 5F, C3;

# Knuth 2002 64 with Random Bit Shift RNG generate: sec_r64_f.
FN: KN02RG64 = 48, 89, 5C, 24, 18, 48, 89, 6C, 24, 20, 48, 89, 4C, 24, 08, 56, 57, 41, 54, 41, 55, 41, 56, 41, 57, 8B, 31, 4C, 8D, 49, 04, BD, CC, 03, 00, 00, 41, BC, 32, 00, 00, 00, 41, BA, 2F, 01, 00, 00, 45, 8D, 7C, 24, F3, 44, 8D, 6D, 4A, 85, F6, 0F, 85, 13, 01, 00, 00, 4D, 8D, 81, 88, 1F, 00, 00, 41, 8B, D4, 4D, 2B, C1, 49, 8D, 49, 08, 0F, 1F, 40, 00, 66, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 49, 8B, 44, 08, F8, 48, 89, 41, F8, 49, 8B, 04, 08, 48, 89, 01, 48, 8D, 49, 10, 48, 83, EA, 01, 75, E6, 49, 8D, 91, 30, 03, 00, 00, 4D, 8B, C2, 49, 8D, 89, F8, 01, 00, 00, 0F, 1F, 44, 00, 00, 8B, 81, 08, FE, FF, FF, 48, 8D, 52, 18, 2B, 01, 48, 8D, 49, 18, 25, FF, FF, FF, 3F, 48, 89, 42, D8, 8B, 81, F8, FD, FF, FF, 2B, 41, F0, 25, FF, FF, FF, 3F, 48, 89, 42, E0, 8B, 81, 00, FE, FF, FF, 2B, 41, F8, 25, FF, FF, FF, 3F, 48, 89, 42, E8, 49, 83, E8, 01, 75, BD, 44, 8B, C5, 4D, 8D, 99, 88, 1F, 00, 00, 49, 8B, DF, 45, 8B, D7, 0F, 1F, 40, 00, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 41, 8B, C0, 41, 8D, 48, C1, 41, 8B, 14, C9, 4D, 8D, 5B, 08, 41, FF, C0, 41, 2B, 14, C1, 81, E2, FF, FF, FF, 3F, 49, 89, 53, F8, 48, 83, EB, 01, 75, DA, 45, 8B, C5, 4D, 8D, 99, B0, 20, 00, 00, 41, 8D, 40, 9C, 41, 8B, 04, C1, 41, 8D, 4A, DB, 41, 2B, 84, C9, 88, 1F, 00, 00, 4D, 8D, 5B, 08, 25, FF, FF, FF, 3F, 45, 8D, 40, 01, 41, FF, C2, 49, 89, 43, F8, 41, 83, FA, 64, 72, D2, 41, BA, 2F, 01, 00, 00, 4D, 8B, 34, F1, B8, 1F, 85, EB, 51, FF, C6, F7, E6, C1, EA, 05, 6B, C2, 64, 2B, F0, 48, 8B, 44, 24, 38, 89, 30, 0F, 85, 08, 01, 00, 00, 4D, 8D, 81, 88, 1F, 00, 00, 49, 8B, D4, 4D, 2B, C1, 49, 8D, 49, 08, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 49, 8B, 44, 08, F8, 48, 89, 41, F8, 49, 8B, 04, 08, 48, 89, 01, 48, 8D, 49, 10, 48, 83, EA, 01, 75, E6, 49, 8D, 91, 30, 03, 00, 00, 4D, 8B, C2, 49, 8D, 89, F8, 01, 00, 00, 0F, 1F, 44, 00, 00, 8B, 81, 08, FE, FF, FF, 48, 8D, 52, 18, 2B, 01, 48, 8D, 49, 18, 25, FF, FF, FF, 3F, 48, 89, 42, D8, 8B, 81, F8, FD, FF, FF, 2B, 41, F0, 25, FF, FF, FF, 3F, 48, 89, 42, E0, 8B, 81, 00, FE, FF, FF, 2B, 41, F8, 25, FF, FF, FF, 3F, 48, 89, 42, E8, 49, 83, E8, 01, 75, BD, 44, 8B, C5, 4D, 8D, 99, 88, 1F, 00, 00, 49, 8B, DF, 45, 8B, D7, 0F, 1F, 40, 00, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 41, 8B, C0, 41, 8D, 48, C1, 41, 8B, 14, C9, 4D, 8D, 5B, 08, 41, FF, C0, 41, 2B, 14, C1, 81, E2, FF, FF, FF, 3F, 49, 89, 53, F8, 48, 83, EB, 01, 75, DA, 45, 8B, C5, 4D, 8D, 99, B0, 20, 00, 00, 41, 8D, 40, 9C, 41, 8B, 04, C1, 41, 8D, 4A, DB, 41, 2B, 84, C9, 88, 1F, 00, 00, 4D, 8D, 5B, 08, 25, FF, FF, FF, 3F, 45, 8D, 40, 01, 41, FF, C2, 49, 89, 43, F8, 41, 83, FA, 64, 72, D2, 49, 8B, 0C, F1, B8, 1F, 85, EB, 51, FF, C6, F7, E6, C1, EA, 05, 6B, C2, 64, 2B, F0, 48, 8B, 44, 24, 38, 89, 30, 48, 8D, 04, 8D, 00, 00, 00, 00, 41, 33, C6, 89, 44, 24, 40, 85, F6, 0F, 85, 0D, 01, 00, 00, 4D, 8D, 81, 88, 1F, 00, 00, 49, 8B, D4, 4D, 2B, C1, 49, 8D, 49, 08, 0F, 1F, 40, 00, 66, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 49, 8B, 44, 08, F8, 48, 89, 41, F8, 49, 8B, 04, 08, 48, 89, 01, 48, 8D, 49, 10, 48, 83, EA, 01, 75, E6, 49, 8D, 91, 30, 03, 00, 00, 41, B8, 2F, 01, 00, 00, 49, 8D, 89, F8, 01, 00, 00, 66, 90, 8B, 81, 08, FE, FF, FF, 48, 8D, 52, 18, 2B, 01, 48, 8D, 49, 18, 25, FF, FF, FF, 3F, 48, 89, 42, D8, 8B, 81, F8, FD, FF, FF, 2B, 41, F0, 25, FF, FF, FF, 3F, 48, 89, 42, E0, 8B, 81, 00, FE, FF, FF, 2B, 41, F8, 25, FF, FF, FF, 3F, 48, 89, 42, E8, 49, 83, E8, 01, 75, BD, 44, 8B, C5, 4D, 8D, 99, 88, 1F, 00, 00, 49, 8B, DF, 45, 8B, D7, 0F, 1F, 40, 00, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 41, 8B, C0, 41, 8D, 48, C1, 41, 8B, 14, C9, 4D, 8D, 5B, 08, 41, FF, C0, 41, 2B, 14, C1, 81, E2, FF, FF, FF, 3F, 49, 89, 53, F8, 48, 83, EB, 01, 75, DA, 45, 8B, C5, 4D, 8D, 99, B0, 20, 00, 00, 41, 8D, 40, 9C, 41, 8B, 04, C1, 41, 8D, 4A, DB, 41, 2B, 84, C9, 88, 1F, 00, 00, 4D, 8D, 5B, 08, 25, FF, FF, FF, 3F, 45, 8D, 40, 01, 41, FF, C2, 49, 89, 43, F8, 41, 83, FA, 64, 72, D2, 4D, 8B, 34, F1, B8, 1F, 85, EB, 51, FF, C6, F7, E6, C1, EA, 05, 6B, C2, 64, 2B, F0, 48, 8B, 44, 24, 38, 89, 30, 0F, 85, 0E, 01, 00, 00, 4D, 8D, 81, 88, 1F, 00, 00, 49, 8B, D4, 4D, 2B, C1, 49, 8D, 49, 08, 0F, 1F, 40, 00, 66, 66, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 49, 8B, 44, 08, F8, 48, 89, 41, F8, 49, 8B, 04, 08, 48, 89, 01, 48, 8D, 49, 10, 48, 83, EA, 01, 75, E6, 49, 8D, 91, 30, 03, 00, 00, 41, B8, 2F, 01, 00, 00, 49, 8D, 89, F8, 01, 00, 00, 66, 90, 8B, 81, 08, FE, FF, FF, 48, 8D, 52, 18, 2B, 01, 48, 8D, 49, 18, 25, FF, FF, FF, 3F, 48, 89, 42, D8, 8B, 81, F8, FD, FF, FF, 2B, 41, F0, 25, FF, FF, FF, 3F, 48, 89, 42, E0, 8B, 81, 00, FE, FF, FF, 2B, 41, F8, 25, FF, FF, FF, 3F, 48, 89, 42, E8, 49, 83, E8, 01, 75, BD, 44, 8B, C5, 4D, 8D, 99, 88, 1F, 00, 00, 49, 8B, DF, 45, 8B, D7, 0F, 1F, 40, 00, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 41, 8B, C0, 41, 8D, 48, C1, 41, 8B, 14, C9, 4D, 8D, 5B, 08, 41, FF, C0, 41, 2B, 14, C1, 81, E2, FF, FF, FF, 3F, 49, 89, 53, F8, 48, 83, EB, 01, 75, DA, 45, 8B, C5, 4D, 8D, 99, B0, 20, 00, 00, 41, 8D, 40, 9C, 41, 8B, 04, C1, 41, 8D, 4A, DB, 41, 2B, 84, C9, 88, 1F, 00, 00, 4D, 8D, 5B, 08, 25, FF, FF, FF, 3F, 45, 8D, 40, 01, 41, FF, C2, 49, 89, 43, F8, 41, 83, FA, 64, 72, D2, 49, 8B, 0C, F1, 8D, 7E, 01, 48, 8B, 74, 24, 38, B8, 1F, 85, EB, 51, F7, E7, C1, EA, 05, 6B, C2, 64, 2B, F8, 48, 8D, 04, 8D, 00, 00, 00, 00, 41, 33, C6, 89, 3E, 89, 44, 24, 44, 85, FF, 0F, 85, EE, 00, 00, 00, 49, 8D, 91, 88, 1F, 00, 00, 49, 2B, D1, 49, 8D, 49, 08, 48, 8B, 44, 0A, F8, 48, 89, 41, F8, 48, 8B, 04, 0A, 48, 89, 01, 48, 8D, 49, 10, 49, 83, EC, 01, 75, E6, 49, 8D, 91, 30, 03, 00, 00, BB, 2F, 01, 00, 00, 49, 8D, 89, F8, 01, 00, 00, 0F, 1F, 00, 8B, 81, 08, FE, FF, FF, 48, 8D, 52, 18, 2B, 01, 48, 8D, 49, 18, 25, FF, FF, FF, 3F, 48, 89, 42, D8, 8B, 81, F8, FD, FF, FF, 2B, 41, F0, 25, FF, FF, FF, 3F, 48, 89, 42, E0, 8B, 81, 00, FE, FF, FF, 2B, 41, F8, 25, FF, FF, FF, 3F, 48, 89, 42, E8, 48, 83, EB, 01, 75, BD, 4D, 8D, 81, 88, 1F, 00, 00, 45, 8B, D7, 0F, 1F, 00, 8B, C5, 8D, 4D, C1, 41, 8B, 14, C9, 4D, 8D, 40, 08, FF, C5, 41, 2B, 14, C1, 81, E2, FF, FF, FF, 3F, 49, 89, 50, F8, 49, 83, EF, 01, 75, DD, 4D, 8D, 99, B0, 20, 00, 00, 66, 0F, 1F, 44, 00, 00, 41, 8D, 55, 9C, 45, 8B, 04, D1, 41, 8D, 42, DB, 45, 2B, 84, C1, 88, 1F, 00, 00, 4D, 8D, 5B, 08, 41, 81, E0, FF, FF, FF, 3F, 45, 8D, 6D, 01, 41, FF, C2, 4D, 89, 43, F8, 41, 83, FA, 64, 72, D0, 4D, 8B, 04, F9, 8D, 4F, 01, 48, 8B, 5C, 24, 48, B8, 1F, 85, EB, 51, 48, 8B, 6C, 24, 50, F7, E1, C1, EA, 05, 6B, C2, 64, 2B, C8, 48, 8B, 44, 24, 40, 89, 0E, 41, 8D, 48, 01, 83, E1, 3F, 48, D3, E8, 41, 5F, 41, 5E, 41, 5D, 41, 5C, 5F, 5E, C3;

# L'Ecuyer 32 RNG state size: uint64_t.
SZ: LECUSS32 = sizeof(uint64_t);

# L'Ecuyer 32 RND seed: sec_srs_f.
FN: LECUSR32 = 4C, 8B, CA, 49, BB, C5, C8, 03, 00, F2, 01, 00, 00, 4C, 8B, D1, 49, 8B, C3, 48, F7, E2, 4D, 8B, C1, 49, 8B, C3, 4C, 2B, C2, 49, D1, E8, 4C, 03, C2, 49, C1, E8, 1E, 49, 69, C8, 07, FF, FF, 7F, 41, B8, 01, 00, 00, 00, 4C, 3B, C9, 4D, 0F, 45, C1, 49, F7, E0, 49, 8B, C0, 48, 2B, C2, 48, D1, E8, 48, 03, C2, 48, C1, E8, 1E, 48, 69, C0, 07, FF, FF, 7F, 4C, 2B, C0, 4D, 89, 02, C3;

# L'Ecuyer 32 RNG generate: sec_r32_f.
FN: LECURG32 = B8, CD, 09, 7A, 4F, F7, 29, C1, FA, 0E, 8B, C2, C1, E8, 1F, 03, D0, 69, C2, 07, FF, FF, 7F, 69, 11, F4, 9E, 00, 00, 2B, D0, 8D, 82, 07, FF, FF, 7F, 0F, 49, C2, 48, 98, 48, 89, 01, C3;

# GFSR4 32 RNG state size: uint64_t.
SZ: GFSRSS32 = (sizeof(int32_t) + (sizeof(uint32_t) * 0x4000));

# GFSR4 32 RND seed: sec_srs_f.
FN: GFSRSR32 = 48, 89, 5C, 24, 08, 48, 89, 74, 24, 10, 48, 89, 7C, 24, 18, 83, CB, FF, 41, BA, 05, 11, 00, 00, 48, 85, D2, 48, 8B, F1, 41, B8, 00, 00, 00, 80, 4C, 0F, 45, D2, 45, 33, DB, 0F, 1F, 44, 00, 00, 33, C0, 45, 8B, C8, 8D, 78, 10, 0F, 1F, 84, 00, 00, 00, 00, 00, 49, 69, CA, CD, 0D, 01, 00, 41, 8B, D1, 0B, D0, 49, 23, C8, 0F, 44, D0, 41, D1, E9, 49, 69, C2, 29, 76, 58, 1C, 8B, C8, 44, 8B, D0, 8B, C2, 41, 0B, C1, 49, 23, C8, 0F, 44, C2, 41, D1, E9, 48, 83, EF, 01, 75, CB, 42, 89, 44, 9E, 04, 49, FF, C3, 49, 81, FB, FF, 3F, 00, 00, 7E, AA, 48, 8D, 4E, 20, 8D, 57, 20, 0F, 1F, 00, 8B, C3, D1, EB, 23, 01, 48, 8D, 49, 0C, 41, 0B, C0, 41, D1, E8, 89, 41, F4, 48, 83, EA, 01, 75, E7, 48, 8B, 5C, 24, 08, 48, 8B, 7C, 24, 18, C7, 06, 20, 00, 00, 00, 48, 8B, 74, 24, 10, C3;

# GFSR4 32 RNG generate: sec_r32_f.
FN: GFSRRG32 = 8B, 01, 4C, 8D, 49, 04, FF, C0, 25, FF, 3F, 00, 00, 44, 8B, C0, 44, 89, 01, 8D, 88, 27, 1A, 00, 00, 05, B4, E4, FF, FF, 81, E1, FF, 3F, 00, 00, 25, FF, 3F, 00, 00, 41, 8B, 14, 89, 41, 8D, 88, CE, F9, FF, FF, 41, 33, 14, 81, 81, E1, FF, 3F, 00, 00, 41, 33, 14, 89, 41, 8D, 88, 29, FE, FF, FF, 81, E1, FF, 3F, 00, 00, 41, 33, 14, 89, 43, 89, 14, 81, 8B, C2, C3;

# Split Mix 64 RNG state size: uint64_t.
SZ: SPMXSS64 = sizeof(uint64_t);

# Split Mix 64 RNG seed: sec_srs_f.
FN: SPMXSR64 = 48, 89, 11, C3;

# Split Mix 64 RNG generate: sec_r64_f.
FN: SPMXRG64 = 48, B8, 15, 7C, 4A, 7F, B9, 79, 37, 9E, 48, 01, 01, 48, 8B, 01, 48, 8B, C8, 48, C1, E9, 1E, 48, 33, C8, 48, B8, B9, E5, E4, 1C, 6D, 47, 58, BF, 48, 0F, AF, C8, 48, B8, EB, 11, 31, 13, BB, 49, D0, 94, 48, 8B, D1, 48, C1, EA, 1B, 48, 33, D1, 48, 0F, AF, D0, 48, 8B, C2, 48, C1, E8, 1F, 48, 33, C2, C3;

# Xoroshiro128+ 64 RNG state size: uint64_t.
SZ: XSHISS64 = (sizeof(uint64_t) * 2);

# Xoroshiro128+ 64 RNG seed: sec_srs_f.
FN: XSHISR64 = 48, 89, 5C, 24, 08, 4C, 8B, C1, 48, 8B, C2, 48, C1, E8, 1E, 48, B9, B9, E5, E4, 1C, 6D, 47, 58, BF, 48, 33, C2, 45, 33, C9, 48, 0F, AF, C1, 48, B9, EB, 11, 31, 13, BB, 49, D0, 94, 45, 8B, D1, 49, 89, 00, 48, BB, CB, FA, A5, EB, 67, 04, AC, BE, 48, 8B, C2, 48, C1, E8, 1B, 48, 33, C2, 48, 0F, AF, C1, 45, 32, DB, 49, 89, 40, 08, 4C, 0F, A3, DB, 73, 06, 4D, 33, 08, 4C, 33, D0, 49, 8B, 10, 41, FE, C3, 48, 33, C2, 48, C1, CA, 09, 48, 8B, C8, 48, C1, E1, 0E, 48, 33, D1, 48, 33, D0, 48, C1, C8, 1C, 49, 89, 10, 41, 80, FB, 40, 72, CD, 49, 89, 40, 08, 45, 32, DB, 48, BB, 22, 99, AA, 86, 8B, 04, 6B, D8, 4C, 0F, A3, DB, 73, 06, 4D, 33, 08, 4C, 33, D0, 49, 8B, 10, 41, FE, C3, 48, 33, C2, 48, C1, CA, 09, 48, 8B, C8, 48, C1, E1, 0E, 48, 33, D1, 48, 33, D0, 48, C1, C8, 1C, 49, 89, 10, 41, 80, FB, 40, 72, CD, 48, 8B, 5C, 24, 08, 4D, 89, 08, 4D, 89, 50, 08, C3;

# Xoroshiro128+ 64 RNG generate: sec_r64_f.
FN: XSHIRG64 = 4C, 8B, 01, 4C, 8B, 49, 08, 4B, 8D, 04, 01, 4D, 33, C8, 49, 8B, D1, 49, C1, C8, 09, 48, C1, E2, 0E, 4C, 33, C2, 4D, 33, C1, 49, C1, C9, 1C, 4C, 89, 49, 08, 4C, 89, 01, C3;

# XorShift1024* 64 RNG state size: uint64_t.
SZ: XSFSSS64 = (sizeof(int32_t) + (sizeof(uint64_t) * 0x10));

# XorShift1024* 64 RNG seed: sec_srs_f.
FN: XSFSSR64 = 48, 83, EC, 08, 4C, 8D, 41, 04, 48, 85, C9, 74, 6E, 48, 89, 1C, 24, 41, B9, 10, 00, 00, 00, 48, BB, EB, 11, 31, 13, BB, 49, D0, 94, C7, 01, 00, 00, 00, 00, 49, BA, EB, 83, B5, 80, 46, 86, C8, 61, 49, BB, B9, E5, E4, 1C, 6D, 47, 58, BF, 0F, 1F, 44, 00, 00, 49, 2B, D2, 4D, 8D, 40, 08, 48, 8B, C2, 48, C1, E8, 1E, 48, 33, C2, 49, 0F, AF, C3, 48, 8B, C8, 48, C1, E9, 1B, 48, 33, C8, 48, 0F, AF, CB, 48, 8B, C1, 48, C1, E8, 1F, 48, 33, C1, 49, 89, 40, F8, 49, 83, E9, 01, 75, C9, 48, 8B, 1C, 24, 48, 83, C4, 08, C3;

# XorShift1024* 64 RNG generate: sec_r64_f.
FN: XSFSRG64 = 48, 63, 11, 4C, 8B, 4C, D1, 04, 8D, 42, 01, 83, E0, 0F, 8B, D0, 4C, 8D, 04, C1, 89, 11, 49, 8B, 50, 04, 48, 8B, C2, 48, C1, E0, 1F, 48, 33, D0, 49, 8B, C1, 48, C1, E8, 13, 48, 33, C2, 48, C1, E8, 0B, 48, 33, C2, 48, BA, 13, 7C, 4A, 7F, B9, 79, 37, 9E, 49, 33, C1, 49, 89, 40, 04, 48, 63, 01, 48, 8B, 44, C1, 04, 48, 0F, AF, C2, C3;

# Mersenne Twister 19937 64 RNG state size: uint64_t.
SZ: MERSSS64 = (sizeof(int32_t) + (sizeof(uint64_t) * 0x0138));

# Mersenne Twister 19937 64 RNG seed: sec_srs_f.
FN: MERSSR64 = 48, 89, 51, 04, 48, 8D, 41, 0C, 41, B9, 01, 00, 00, 00, 41, BA, 37, 01, 00, 00, 49, BB, 2D, 7F, 95, 4C, 2D, F4, 51, 58, 66, 90, 4C, 8B, 40, F8, 48, 8D, 40, 08, 49, C1, E8, 3E, 4C, 33, 40, F0, 4D, 0F, AF, C3, 4D, 03, C1, 49, FF, C1, 4C, 89, 40, F8, 49, 83, EA, 01, 75, DC, 44, 89, 11, C3;

# Mersenne Twister 19937 64 RNG generate: sec_r64_f.
FN: MERSRG64 = 48, 83, EC, 18, 48, B8, E9, 19, 66, A9, 5A, 6F, 02, B5, 48, C7, 04, 24, 00, 00, 00, 00, 48, 89, 44, 24, 08, 4C, 8B, D1, 8B, 01, 3D, 38, 01, 00, 00, 0F, 8C, 1C, 01, 00, 00, 3D, 39, 01, 00, 00, 75, 55, 48, C7, 41, 04, 71, 15, 00, 00, 48, 8D, 51, 0C, 41, B8, 01, 00, 00, 00, 44, 8D, 48, FE, 49, BB, 2D, 7F, 95, 4C, 2D, F4, 51, 58, 0F, 1F, 40, 00, 66, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 48, 8B, 4A, F8, 48, 8D, 52, 08, 48, C1, E9, 3E, 48, 33, 4A, F0, 49, 0F, AF, CB, 49, 03, C8, 49, FF, C0, 48, 89, 4A, F8, 49, 83, E9, 01, 75, DC, 45, 89, 0A, 45, 33, C9, 41, B8, 9C, 00, 00, 00, 43, 8B, 54, CA, 0C, 43, 33, 54, CA, 04, 0F, BA, F2, 1F, 4B, 33, 54, CA, 04, 48, 8B, C2, 48, D1, EA, 83, E0, 01, 48, 8B, 0C, C4, 48, 33, CA, 4B, 33, 8C, CA, E4, 04, 00, 00, 4B, 89, 4C, CA, 04, 49, FF, C1, 4D, 3B, C8, 7C, C8, 0F, 1F, 84, 00, 00, 00, 00, 00, 43, 8B, 54, C2, 0C, 43, 33, 54, C2, 04, 0F, BA, F2, 1F, 4B, 33, 54, C2, 04, 48, 8B, C2, 48, D1, EA, 83, E0, 01, 48, 8B, 0C, C4, 48, 33, CA, 4B, 33, 8C, C2, 24, FB, FF, FF, 4B, 89, 4C, C2, 04, 49, FF, C0, 49, 81, F8, 37, 01, 00, 00, 7C, C4, 41, 8B, 52, 04, 41, 33, 92, BC, 09, 00, 00, 0F, BA, F2, 1F, 49, 33, 92, BC, 09, 00, 00, 48, 8B, C2, 48, D1, EA, 83, E0, 01, 48, 8B, 0C, C4, 49, 33, 8A, DC, 04, 00, 00, 48, 33, CA, 49, 89, 8A, BC, 09, 00, 00, 41, C7, 02, 00, 00, 00, 00, 49, 63, 0A, 49, B8, 55, 55, 55, 55, 05, 00, 00, 00, 49, 8B, 54, CA, 04, 48, 8B, C2, 48, C1, E8, 1D, 49, 23, C0, 49, B8, D3, F6, FF, 3F, EB, 38, 00, 00, 48, 33, D0, 48, 8B, C2, 49, 23, C0, 48, C1, E0, 11, 48, 33, D0, 48, 8B, C2, 48, 25, 77, BF, FF, FF, 48, C1, E0, 25, 48, 33, D0, 8D, 41, 01, 41, 89, 02, 48, 8B, C2, 48, C1, E8, 2B, 48, 33, C2, 48, 83, C4, 18, C3;

# Rand 48 32 RND state size: uint64_t.
SZ: RD48SS32 = (sizeof(uint16_t) * 3);

# Rand 48 32 RND seed: sec_srs_f.
FN: RANDSR48 = 00, 00, 00, 00;

# Rand 48 32 RND generate: sec_r32_f.
FN: RANDRG48 = 00, 00, 00, 00;

# Hash table size needed by COMPRESS: uint64_t.
SZ: COMPHTAB = (sizeof(uint8_t*) * 0x10000);

# Compress data: sec_cpr_f. Needs pointer to buffer of size COMPHTAB.
FN: COMPRESS = 4C, 89, 44, 24, 18, 55, 41, 55, 41, 56, 48, 83, EC, 10, 4D, 8B, E9, 48, 8D, 2C, 11, 4D, 8B, C8, 4C, 8B, F1, 4C, 8B, D1, 4D, 85, ED, 0F, 84, AF, 02, 00, 00, 49, 8B, 45, 00, 4C, 89, 64, 24, 08, 4C, 8B, 64, 24, 50, 4C, 89, 3C, 24, 4D, 8D, 3C, 00, 4D, 85, E4, 75, 15, 4C, 8B, 64, 24, 08, B0, 03, 4C, 8B, 3C, 24, 48, 83, C4, 10, 41, 5E, 41, 5D, 5D, C3, 48, 89, 74, 24, 38, 4D, 85, F6, 75, 12, 48, 85, D2, 75, 12, 33, F6, 49, 89, 75, 00, 32, C0, E9, FB, 01, 00, 00, 4D, 85, C9, 75, 07, B0, 03, E9, EF, 01, 00, 00, 33, C0, 48, 89, 5C, 24, 30, 48, 89, 7C, 24, 48, 49, 8D, 56, 02, 33, F6, 49, 8B, FC, B9, 00, 00, 08, 00, 44, 8B, C6, F3, AA, 41, 0F, B6, 3E, 49, 8D, 41, 01, 41, 0F, B6, 4E, 01, C1, E7, 08, 48, 0B, F9, 48, 3B, D5, 0F, 83, 9F, 01, 00, 00, 66, 0F, 1F, 44, 00, 00, 0F, B6, 0A, 48, C1, E7, 08, 48, 0B, F9, 48, 8B, CF, 48, C1, E9, 08, 48, 2B, CF, 0F, B7, C9, 4D, 8B, 0C, CC, 4D, 89, 14, CC, 4D, 3B, CA, 0F, 83, 36, 01, 00, 00, 4D, 8B, DA, 4D, 2B, D9, 49, FF, CB, 49, 81, FB, 00, 20, 00, 00, 0F, 83, 20, 01, 00, 00, 49, 8D, 4A, 04, 48, 3B, CD, 0F, 83, 13, 01, 00, 00, 4D, 3B, CE, 0F, 86, 0A, 01, 00, 00, 41, 0F, B6, 0A, 41, 38, 09, 0F, 85, FD, 00, 00, 00, 41, 0F, B6, 4A, 01, 41, 38, 49, 01, 0F, 85, EE, 00, 00, 00, 0F, B6, 0A, 41, 38, 49, 02, 0F, 85, E1, 00, 00, 00, B9, 08, 01, 00, 00, 48, 8B, DD, 49, 2B, DA, 48, 8B, D0, 48, 83, C3, FE, BF, 03, 00, 00, 00, 48, 3B, D9, 48, 0F, 4F, D9, 48, 8B, CE, 4D, 85, C0, 0F, 94, C1, 48, 2B, D1, 48, 8D, 4A, 04, 49, 3B, CF, 0F, 83, EE, 00, 00, 00, 49, 2B, C0, 41, 8D, 48, FF, 88, 48, FF, 48, 8B, C2, 48, 3B, FB, 73, 1E, 49, 8D, 52, 03, 4D, 2B, CA, 0F, 1F, 00, 0F, B6, 0A, 41, 38, 0C, 11, 75, 0B, 48, FF, C7, 48, FF, C2, 48, 3B, FB, 72, EC, 49, 8B, CB, 48, 83, EF, 02, 48, C1, E9, 08, 48, 83, FF, 07, 73, 10, 40, 0F, B6, D7, C0, E2, 05, 02, D1, 88, 10, 48, FF, C0, EB, 0F, 80, E9, 20, 88, 08, 8D, 4F, F9, 88, 48, 01, 48, 83, C0, 02, 49, FF, C2, 44, 88, 18, 4C, 03, D7, 48, 83, C0, 02, 4C, 8B, C6, 49, 8D, 4A, 03, 48, 3B, CD, 73, 64, 41, 0F, B6, 3A, 41, 0F, B6, 4A, 01, C1, E7, 08, 48, 0B, F9, 41, 0F, B6, 4A, 02, 48, C1, E7, 08, 48, 0B, F9, 48, 8B, CF, 48, C1, E9, 08, 48, 2B, CF, 0F, B7, C9, 4D, 89, 14, CC, 49, FF, C2, EB, 24, 49, 3B, C7, 73, 3F, 41, 0F, B6, 0A, 49, FF, C0, 88, 08, 49, FF, C2, 48, FF, C0, 49, 83, F8, 20, 75, 0A, C6, 40, DF, 1F, 4C, 8B, C6, 48, FF, C0, 49, 8D, 52, 02, 48, 3B, D5, 0F, 82, 71, FE, FF, FF, EB, 03, 49, FF, C2, 4C, 8B, 4C, 24, 40, 48, 8D, 48, 03, 49, 3B, CF, 76, 24, B0, 01, 48, 8B, 7C, 24, 48, 48, 8B, 5C, 24, 30, 48, 8B, 74, 24, 38, 4C, 8B, 64, 24, 08, 4C, 8B, 3C, 24, 48, 83, C4, 10, 41, 5E, 41, 5D, 5D, C3, 4C, 3B, D5, 73, 29, 0F, 1F, 44, 00, 00, 41, 0F, B6, 0A, 49, FF, C0, 88, 08, 49, FF, C2, 48, FF, C0, 49, 83, F8, 20, 75, 0A, C6, 40, DF, 1F, 4C, 8B, C6, 48, FF, C0, 4C, 3B, D5, 72, DC, 48, 8B, C8, 41, 8D, 50, FF, 49, 2B, C8, 4D, 85, C0, 40, 0F, 94, C6, 48, 2B, C6, 88, 51, FF, 49, 2B, C1, 49, 89, 45, 00, 32, C0, EB, 8E, B0, 03, 48, 83, C4, 10, 41, 5E, 41, 5D, 5D, C3;

# Decompress data: sec_dcp_f.
FN: DECOMPRS = 48, 89, 74, 24, 18, 41, 56, 4C, 8D, 1C, 11, 4D, 8B, F1, 49, 8B, F0, 4D, 8B, D0, 4D, 85, C9, 0F, 84, BF, 01, 00, 00, 49, 8B, 01, 48, 89, 5C, 24, 10, 48, 89, 7C, 24, 18, 33, FF, 49, 8D, 1C, 00, 48, 85, C9, 75, 1C, 48, 85, D2, 75, 1C, 48, 8B, 5C, 24, 10, 32, C0, 49, 89, 39, 48, 8B, 7C, 24, 18, 48, 8B, 74, 24, 20, 41, 5E, C3, 48, 85, F6, 75, 1A, 48, 8B, 5C, 24, 10, B0, 03, 48, 8B, 7C, 24, 18, 48, 8B, 74, 24, 20, 41, 5E, C3, 66, 0F, 1F, 44, 00, 00, 0F, B6, 11, 4C, 8B, C1, 48, FF, C1, 48, 83, FA, 20, 73, 35, 48, FF, C2, 4A, 8D, 04, 12, 48, 3B, C3, 0F, 87, A5, 00, 00, 00, 48, 8D, 04, 0A, 49, 3B, C3, 0F, 87, 9D, 00, 00, 00, 0F, 1F, 40, 00, 0F, B6, 01, 48, FF, C1, 41, 88, 02, 49, FF, C2, 48, 83, EA, 01, 75, EE, EB, 5D, 4C, 8B, C2, 4D, 8B, CA, 83, E2, 1F, 49, C1, E8, 05, 48, C1, E2, 08, 4C, 2B, CA, 49, FF, C9, 49, 83, F8, 07, 75, 0B, 44, 0F, B6, 01, 49, 83, C0, 07, 48, FF, C1, 49, 83, C0, 02, 4B, 8D, 04, 10, 48, 3B, C3, 77, 64, 49, 3B, CB, 73, 4B, 0F, B6, 01, 48, FF, C1, 4C, 2B, C8, 4C, 3B, CE, 72, 3D, 4D, 2B, CA, 90, 43, 0F, B6, 04, 11, 41, 88, 02, 49, FF, C2, 49, 83, E8, 01, 75, EF, 49, 3B, CB, 0F, 82, 56, FF, FF, FF, 48, 8B, 5C, 24, 10, 4C, 2B, D6, 48, 8B, 7C, 24, 18, 32, C0, 4D, 89, 16, 48, 8B, 74, 24, 20, 41, 5E, C3, 49, 8B, C8, EB, 22, 48, 8B, 5C, 24, 10, B0, 02, 48, 8B, 7C, 24, 18, 48, 8B, 74, 24, 20, 41, 5E, C3, 49, 83, F8, 09, 48, 1B, C0, 48, 83, C0, 02, 48, 2B, C8, 8B, D7, 49, 3B, CB, 73, 5A, 0F, B6, 01, 48, FF, C1, 48, 83, F8, 20, 73, 28, 48, FF, C0, 48, 03, C8, 49, 3B, CB, 76, 3C, 48, 8B, 5C, 24, 10, 48, 2B, FE, 49, 03, FA, B0, 02, 49, 89, 3E, 48, 8B, 7C, 24, 18, 48, 8B, 74, 24, 20, 41, 5E, C3, 48, C1, E8, 05, 48, 83, F8, 07, 75, 0A, 0F, B6, 01, 48, 83, C0, 07, 48, FF, C1, 49, 3B, CB, 73, CA, 48, FF, C1, 83, C2, 02, 03, D0, 49, 3B, CB, 72, A6, 48, 8B, 5C, 24, 10, 32, C0, 48, 63, FA, 48, 2B, FE, 49, 03, FA, 49, 89, 3E, 48, 8B, 7C, 24, 18, 48, 8B, 74, 24, 20, 41, 5E, C3, B0, 03, 48, 8B, 74, 24, 20, 41, 5E, C3;

# CRC 32-Bit LUT Used by CRC32FUN.


# CRC 32: sec_c32_f. Needs pointer to LUT referenced by CRC32TAB.
FN: CRC32FUN = 4C, 8B, DA, F7, D1, 4D, 85, C0, 74, 28, 66, 0F, 1F, 44, 00, 00, 45, 0F, B6, 13, 4D, 8D, 5B, 01, 8B, C1, 8B, D1, 4C, 33, D0, C1, EA, 08, 41, 0F, B6, C2, 41, 8B, 0C, 81, 33, CA, 49, 83, E8, 01, 75, DE, F7, D1, 8B, C1, C3;

# CRC 64-Bit LUT Used by CRC64FUN.
DA: CRC64TAB = 00 00 00 00 00 00 00 00 79 89 35 30 C8 70 D8 7A F2 12 6B 60 90 E1 B0 F5 8B 9B 5E 50 58 91 68 8F 8F B6 41 98 73 E5 38 C0 F6 3F 74 A8 BB 95 E0 BA 7D A4 2A F8 E3 04 88 35 04 2D 1F C8 2B 74 50 4F 75 FE 14 68 B4 EC 28 AB 0C 77 21 58 7C 9C F0 D1 87 EC 7F 08 24 0D 98 5E FE 65 4A 38 EC 7D 40 24 FA 48 55 F0 C7 09 10 6B 83 C1 60 C0 0F 79 C8 11 08 5A 3E 90 57 E8 A0 9E 71 D3 0B A0 9F 98 78 E4 81 6F BE 88 3B FF 08 7D F8 E6 8B B8 F3 8F D0 07 73 7D D5 E8 AB 1E B8 88 0A F4 E0 D8 63 6E 60 F2 0E D9 FF 10 48 1A 30 BD 77 50 CA 20 80 6A E8 C7 FC CB 94 70 D8 FB 80 48 85 42 A1 40 10 8B 58 32 F4 91 AA E0 8F 13 20 D6 8D 18 9F D0 47 63 F8 AC 06 83 C1 80 1F F2 90 23 7F 0A F4 B0 D7 82 48 59 7B 27 EB 78 FC F6 18 16 02 AE DE 48 34 86 C0 6C 89 35 80 18 6C 17 A8 E3 F0 BC B5 28 A4 67 70 99 02 DF 7C 11 77 FE 11 FA 7B 56 49 21 BF 8E C9 80 F0 CD 17 71 E7 1F A1 0F 89 44 22 41 2F 6F 79 75 8D 69 3D 89 04 1B 29 3A F4 E0 08 B9 CC 6B F1 40 7F 7B 56 E9 94 FA 99 CF 06 F2 63 D9 5C 8A 41 B5 77 21 68 79 C3 12 39 51 0E A8 5D 49 0B 62 E1 2B 85 33 03 19 53 F3 89 A4 FC BA 36 29 9B 83 51 DE F8 97 29 E1 B0 F7 01 91 81 1E 1C D1 78 87 D9 EB 0A 85 42 81 20 16 B1 64 73 0C 77 B1 E8 66 69 1E 83 B0 C2 99 4C 01 19 87 FA 39 F7 A9 84 71 C1 FD 71 A2 A9 F9 DC E0 A9 72 08 2B 9C C9 14 90 71 08 0C 06 83 01 3F E4 21 47 75 8F B6 31 F7 94 F9 3D FE 14 E8 61 AF 05 91 B2 87 9D DD 51 67 75 49 C8 F6 4E D6 F1 F8 ED 31 2C 8F C7 E3 C1 30 9D E9 56 04 5C BD 91 68 0C 81 D9 7D D5 88 A1 A0 7C 59 A3 79 F8 97 69 8B 08 09 EC 00 71 A2 59 43 78 D1 96 8B EA FC 09 1B E9 B9 19 F2 63 C9 39 D3 99 61 63 6F 2D 6E 7A BD DA 7A DF 16 A4 5B 4A 75 AA A2 A5 9D 3F 05 1A 2D 3B CA 2A E4 B6 30 2A E5 4B 12 50 E0 9B 2F E2 CE 3F 42 1F 99 12 1A D2 06 4F 9A 65 12 89 44 82 5E DE F2 EA 6B 00 71 B2 96 AE 2A 90 1A D3 7A 12 09 36 52 74 63 5A 4F 22 C1 46 8A 0E E8 C1 11 72 99 D7 E2 81 91 48 24 42 51 A7 3A FB 95 65 3B 8A 7A D3 6A B4 EC EC 0E BA B2 A3 B2 CE 67 77 50 EA EA 32 DA 41 1E FE 65 DA 22 42 02 3B EE 42 D0 F2 86 25 72 A2 97 CB E5 C2 4E 55 AA D8 1C 50 BB 92 16 C4 C2 57 65 D9 8E A2 DE B4 1A 2D 61 F4 91 6A F5 C0 4A 62 18 7D A4 5A 3D B0 92 18 93 E6 FA 0A 65 21 FA 97 EA 6F CF 3A AD 51 22 ED 9B BC C4 9A 32 C9 5A 09 E2 35 F1 AA FA B9 82 73 69 AE AF FA A2 28 EA FC 10 27 9A CA 6A 58 32 86 14 0A 85 02 41 2C 62 C9 6D 83 B0 32 89 5C BA B3 E6 18 EE 62 D1 CD D2 3C 9F 91 DB 52 19 BD 0A 46 6D F2 12 6B CA 24 6B 25 14 7B 27 5B 02 54 B3 5F 9F E0 79 0B 5A C5 DB D0 E6 69 4C 3B 92 B5 03 AA E2 44 53 F3 B9 C1 53 E5 9B CD 66 C3 71 B1 8B 9F 10 56 38 93 29 20 E3 10 69 DF 0D A3 E1 50 3B 6A 18 0C 06 03 7E C8 43 8E 61 85 33 33 B6 B8 9B F4 EA 1E 6D 63 EE 29 F3 7B 93 97 58 53 26 59 2B 01 97 BA 47 9B 0D 2D 7B 4E EE 33 72 AB C5 5D A3 34 65 A8 2C FB 9D CC CB BB 1C 21 19 CB 55 BC 13 C1 EC 9D AC E3 F1 DB 63 58 95 14 99 D3 39 AB BB 22 1E 8F C7 83 61 3A D3 AD 67 06 F2 B3 A9 4A 0B D7 63 2B ED 7B 82 3E 5B 98 1A A2 D8 4B 4A 4E 83 E2 91 39 86 1B 12 DF EB 6D E8 B0 B3 2B DA AF 33 17 99 63 B8 8B 45 37 4B F3 E0 EA 8D BB 8D 47 93 89 6B 71 D3 EB D5 D6 FB 06 12 F8 E6 DB 1D A6 23 7C 16 D5 F9 13 36 D2 73 33 6F 5C CC 23 FE A2 AB 49 E4 C7 92 73 A6 33 C3 C6 9D 4E A7 43 6E 43 1B BC B5 C9 4B AC 29 93 AC 95 CC 40 7E 9C E1 E3 74 EF 47 DB 20 CC B9 72 1C 60 3E 52 15 FC 71 02 C4 1A 3A 7F 0A 34 5A 76 94 55 43 F6 3F 04 92 06 4C 2F C8 6D 61 54 CA 97 24 A0 B1 E4 54 64 02 E7 FC DA C0 37 5F C4 9D 7F 84 3E B9 BE 6A F4 55 0F 5C 44 32 25 34 A4 0D 9E 34 CB 4B AC 01 94 C5 EE EC B1 4F 81 1E 5C EE 9A BC FE 36 08 2B 6C 26 EA 64 84 BD 93 75 3C 7E 7B 0C 0B C4 1A 40 0C B6 0B D4 71 34 A6 F5 24 12 6C A4 E8 4D 2F C0 14 DA 1C 7C 92 C6 B4 9E 44 82 8D 14 1D BF 3D AB 74 4A FD CC 67 BB 10 B4 BC 61 89 9C 28 C2 99 81 8C A9 F9 44 52 49 02 DF DC F1 68 2C DD 30 8B EA EC 39 18 F4 A7 41 58 E1 4C A6 80 8C 43 38 D1 D4 7C 6E F0 54 39 B3 4A 8A 2C 36 61 3C B6 CA C3 BF 1C FE 11 E4 CC CE EE A0 D4 D5 65 B4 83 B7 67 95 E4 1D 15 6C F9 3C FC CB B4 45 84 04 76 45 75 FE 84 8D F4 DC 0C B7 16 37 BD 5E 6D BD 6F CE 9F 02 8D 96 1D 65 15 45 04 5C DD CE 8C 0D 9A 3C 8D 69 ED 06 FC D5 E0 38 A0 76 25 2D 88 85 AF 41 29 43 15 E5 F8 5D D5 CA B2 1D 45 BD 69 35 5A B3 3B 28 75 75 19 ED 20 C2 E8 23 D5 EA 81 95 C4 BB 61 16 E5 22 F1 4D BE 30 FA 48 B5 7A 60 25 31 49 73 7D 85 B2 10 FD 4B 4D 5E 62 4D 99 64 AD 04 34 D7 57 7D 51 14 75 7E BF 4C 09 2D 09 85 1D F1 C6 C5 3C 1D C1 F5 C5 8B 36 79 89 35 65 92 B5 12 4F F0 BC 05 AD E2 6D 68 C4 6B E2 55 F5 73 05 E7 BD E2 D7 65 3D 03 DD 9D B9 CF C8 AD 16 77 8D D2 C0 46 FD 9D DE 07 55 A8 4B DD A3 CD 86 96 3D 27 32 54 96 FD 4E E6 E5 5D 43 87 9D 5D D1 7E 9D B9 3A 0E A8 6D 19 0E 45 C3 B1 95 F6 3D 41 9F 2D 4C C8 1C C3 0D 89 EF F5 36 CC 31 DC C5 A2 9B A5 79 B5 B8 E9 F5 6A EB 7D 03 3E 23 B7 A5 32 7A 15 8C 47 AA 82 95 FA 0A CD F6 DA E4 25 D6 94 49 D6 4A A3 6D 10 E6 5C 39 0E 30 28 F6 4E B6 04 A8 66 BF 51 7F 7B 86 CC D8 BE C5 55 52 64 4E E7 AC EE 8A 2C DB 51 7E 2F DC 36 F0 A7 40 0F 2E 77 4D 5E 7F DE C9 3A 1E BF 3D 86 05 AF 1A 31 BE 20 A5 FE E1 D6 93 04 8E E8 D5 26 9B 5D 08 5A DE B0 44 4E 14 24 81 6F EE 78 34 96 6E 20 AC 70 26 53 40 C6 21 59 25 45 16 9B 30 1E 5B D2 BE 1B 46 C3 A1 76 D4 AB 37 2E 76 0B D1 AE AE 5B 8B 9B 5E AF B6 DE 37 22 02 AE 6E 67 C6 06 4D A9 99 F0 3E 3F 57 6E C2 D0 10 C5 0E F7 27 B6 B8 D4 3D DA C6 DC 53 E6 F7 AD B4 EF F6 14 23 3E 8D 26 2F B1 A6 4C B2 56 02 5F A6 84 96 84 C2 8E 78 2E 75 8F 36 1B 5A F6 9C 57 FC BA 06 D3 2A 2E E6 DC 67 E4 56 8B BB 46 69 A5 EE D1 66 43 CB 9E 13 A1 C3 CE AE 68 BF CE 5C D8 4A FB 9E A0 CF 16 26 53 D1 A5 CE F8 5E 7E A9 2A 58 90 FE 30 2E A6 D3 D8 3B 59 C7 E3 B7 C7 B0 A1 B2 6C F7 2B C7 1F CA 2A 29 32 A7 73 56 77 45 53 A0 07 97 BB 26 AF 3F 57 8D 18 5F 90 52 FF 70 2E 04 2D 6F 58 22 27 0A A5 9F 73 3F 00 B3 4F 85 DC 16 46 0F C8 C3 97 FF AD C5 4D AF 57 5B EF 1B D4 4C 78 9F 9F 2B 37 61 5F D7 26 CF C7 BA 5F EE 26 5E 13 FF 0F CA 87 94 22 73 0C 37 24 BE D7 DB 5B FA 39 07 EC CE 0F A1 D0 61 67 57 B4 5F 67 2E A9 E8 52 67 7C 2F BF 54 59 54 E7 4F D8 48 CF CD 20 DD D2 7F 10 38 17 B7 AB 46 8C 2F 48 A9 7F 38 D2 CF B9 1F 80 D9 A7 42 D6 E2 A6 D7 AB AD F7 0D AF 6B 93 E7 63 DD 2F 77 24 F0 CD B7 3B 4C 47 F8 5D 79 F8 87 F3 3C 9F 82 2C AA F3 27 6C A4 E7 66 55 23 C6 17 A4 D4 3F 1C DE B8 98 47 FC 45 57 93 A7 31 AD 77 34 35 8F E9 A3 1C B2 BF 1F 41 DF A6 DA 95 87 8F D7 31 07 DC 51 0E D9 DF 8F A0 6F 53 28 87 EC EF 47 D0 B7 29;

# CRC 64: sec_c64_f. Needs pointer to LUT referenced by CRC64TAB.
FN: CRC64FUN = 4D, 85, C0, 74, 2D, 66, 66, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 44, 0F, B6, 12, 48, 8D, 52, 01, 0F, B6, C1, 4C, 33, D0, 48, 8B, C1, 48, C1, E8, 08, 4B, 8B, 0C, D1, 48, 33, C8, 49, 83, E8, 01, 75, DE, 48, 8B, C1, C3;

# Same as memcpy: sec_cpy_f.
FN: MEMCPYFN = 40, 53, 48, 83, EC, 20, 48, 8B, D9, 48, 3B, CA, 73, 13, 4D, 85, C0, 74, 40, E8, 00, 00, 00, 00, 48, 8B, C3, 48, 83, C4, 20, 5B, C3, 48, 8D, 4A, FF, 49, 8D, 50, FF, 49, 03, C8, 48, 03, D3, 4D, 85, C0, 74, 1F, 0F, 1F, 40, 00, 0F, 1F, 84, 00, 00, 00, 00, 00, 0F, B6, 01, 48, 8D, 49, FF, 88, 02, 48, 8D, 52, FF, 49, 83, E8, 01, 75, ED, 48, 8B, C3, 48, 83, C4, 20, 5B, C3;

# Same as memmem: sec_mem_f.
FN: MEMMEMFN = 48, 89, 5C, 24, 18, 56, 4C, 8B, D9, 49, 8B, D9, 4D, 2B, D9, 49, 8B, F0, 4C, 03, DA, 4C, 8B, D1, 4D, 85, C9, 75, 0A, 48, 8B, C1, 48, 8B, 5C, 24, 20, 5E, C3, 48, 3B, D3, 73, 09, 33, C0, 48, 8B, 5C, 24, 20, 5E, C3, 48, 89, 6C, 24, 10, 48, 89, 7C, 24, 18, 49, 3B, CB, 77, 69, 41, 0F, B6, 38, 33, ED, 66, 0F, 1F, 44, 00, 00, 41, 38, 3A, 75, 50, 48, 8D, 43, FF, 4C, 8D, 4E, 01, 4D, 8D, 42, 01, 48, 85, C0, 74, 26, 66, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 41, 0F, B6, 10, 48, FF, C8, 41, 0F, B6, 09, 4D, 8D, 49, 01, 4D, 8D, 40, 01, 3A, D1, 75, 19, 48, 85, C0, 75, E4, 48, 8B, 6C, 24, 10, 49, 8B, C2, 48, 8B, 7C, 24, 18, 48, 8B, 5C, 24, 20, 5E, C3, 40, 84, ED, 75, E7, 49, FF, C2, 4D, 3B, D3, 76, A3, 48, 8B, 6C, 24, 10, 33, C0, 48, 8B, 7C, 24, 18, 48, 8B, 5C, 24, 20, 5E, C3;

# Memory XOR given RNG function and state: sec_mxr_f.
FN: MEMXORRG = 48, 89, 5C, 24, 08, 48, 89, 6C, 24, 10, 48, 89, 74, 24, 18, 48, 89, 7C, 24, 20, 41, 56, 48, 83, EC, 20, 49, 8B, E9, 4D, 8B, F0, 48, 8B, FA, 48, 8B, F1, 48, 8B, D9, 48, 85, D2, 74, 14, 66, 90, 48, 8B, CD, 41, FF, D6, 30, 03, 48, 8D, 5B, 01, 48, 83, EF, 01, 75, EE, 48, 8B, 5C, 24, 30, 48, 8B, C6, 48, 8B, 74, 24, 40, 48, 8B, 6C, 24, 38, 48, 8B, 7C, 24, 48, 48, 83, C4, 20, 41, 5E, C3;

# City Hash 64-Bit, up to 8 bytes: sec_h64_f.
FN: HCITYB64 = 48, 89, 5C, 24, 10, 48, 89, 6C, 24, 18, 48, 89, 7C, 24, 20, 48, 89, 4C, 24, 08, 41, 54, 41, 55, 41, 56, 41, 57, 48, 8B, 44, 24, 40, 48, BF, 4F, 40, 90, 2F, 3B, 6A, E1, 9A, 41, B8, 08, 00, 00, 00, 49, BD, 00, 00, 00, 00, FF, 00, 00, 00, 49, 3B, D0, 41, BC, 00, 00, 00, FF, 4C, 0F, 46, C2, 48, 8D, 14, C0, 48, 0F, AF, CF, 4E, 8B, 5C, 04, 20, 4E, 8D, 3C, 47, 4A, 8B, 5C, 04, 10, 4C, 8D, 52, 01, 4E, 8B, 74, 04, 08, 4A, 8B, 6C, 04, 18, 4C, 8B, 44, 24, 38, 4E, 8D, 0C, 19, 48, 8B, 4C, 24, 30, 49, 8B, C1, 49, 33, C6, 48, C1, C9, 1E, 4C, 03, D0, 49, C1, C1, 15, 48, 03, CB, 4C, 0F, AF, C7, 49, 0F, AF, EF, 4C, 03, C2, 49, 8D, 04, 0A, 48, 8D, 04, C8, 49, 8B, F8, 4C, 03, C8, 48, C1, C7, 16, 4D, 0F, AF, CF, 48, B8, 00, 00, 00, 00, 00, 00, FF, 00, 48, B9, 00, 00, 00, 00, 00, FF, 00, 00, 49, 8B, D1, 48, 03, FB, 48, 23, D0, 49, 8B, C1, 48, C1, E8, 10, 48, 0B, D0, 49, 8B, C1, 48, 23, C1, 48, C1, EA, 10, 48, 0B, D0, 49, 8B, C9, 48, C1, EA, 10, 81, E1, 00, FF, 00, 00, 49, 8B, C1, 49, 23, C5, 48, 0B, D0, 49, 8B, C1, 48, C1, E0, 10, 48, 0B, C8, 48, C1, EA, 08, 49, 8B, C1, 48, C1, E1, 10, 25, 00, 00, FF, 00, 4D, 23, CC, 48, 0B, C8, 48, C1, E1, 10, 49, 0B, C9, 4D, 8D, 0C, 18, 48, C1, E1, 08, 48, 0B, D1, 49, 03, D2, 49, BA, 00, 00, 00, 00, 00, FF, 00, 00, 48, 03, D5, 49, 0F, AF, D7, 49, 03, D3, 49, BB, 00, 00, 00, 00, 00, 00, FF, 00, 4C, 8B, C2, 48, 8B, C2, 4D, 23, C3, 48, C1, E8, 10, 4C, 0B, C0, 48, 8B, C2, 49, 23, C2, 49, C1, E8, 10, 4C, 0B, C0, 49, C1, E8, 10, 48, 8B, 5C, 24, 30, 48, 8B, CA, 48, 8B, C2, 81, E1, 00, FF, 00, 00, 49, 23, C5, 4C, 0B, C0, 48, 8B, C2, 48, C1, E0, 10, 48, 0B, C8, 49, C1, E8, 08, 48, 8B, C2, 48, C1, E1, 10, 25, 00, 00, FF, 00, 49, 23, D4, 48, 0B, C8, 48, C1, E1, 10, 48, 0B, CA, 48, C1, E1, 08, 4C, 0B, C1, 4D, 03, C1, 4C, 03, C7, 4D, 0F, AF, C7, 49, 8B, C8, 49, 8B, D0, 49, 23, D3, 81, E1, 00, FF, 00, 00, 49, 8B, C0, 48, C1, E8, 10, 48, 0B, D0, 49, 8B, C0, 49, 23, C2, 48, C1, EA, 10, 48, 0B, D0, 49, 8B, C0, 49, 23, C5, 48, C1, EA, 10, 48, 0B, D0, 49, 8B, C0, 48, C1, E0, 10, 48, 0B, C8, 48, C1, EA, 08, 48, C1, E1, 10, 49, 8B, C0, 25, 00, 00, FF, 00, 4D, 23, C4, 48, 0B, C8, 48, C1, E1, 10, 49, 0B, C8, 48, C1, E1, 08, 48, 0B, D1, 48, 03, 54, 24, 30, 49, 03, D1, 49, 0F, AF, D7, 48, 03, D5, 48, 8B, 6C, 24, 38, 49, 03, D6, 48, 8B, C2, 48, C1, E8, 2F, 48, 33, C2, 49, 0F, AF, C7, 48, 03, C7, 48, 8B, 7C, 24, 40, 41, 5F, 41, 5E, 41, 5D, 41, 5C, C3;

# Murmur Hash 32-Bit: sec_h32_f.
FN: HMURMU32 = 4C, 8B, CA, 41, BA, D3, DD, 36, 1F, 49, C1, E9, 02, 46, 8D, 1C, 8D, 00, 00, 00, 00, 4C, 03, D9, 41, F7, D9, 74, 2C, 0F, 1F, 00, 43, 69, 0C, 8B, 51, 2D, 9E, CC, C1, C1, 0F, 69, C1, 93, 35, 87, 1B, 44, 33, D0, 41, C1, C2, 0D, 41, 81, C2, 14, AF, DD, FA, 47, 8D, 14, 92, 41, 83, C1, 01, 75, D7, 48, 8B, C2, 33, C9, 83, E0, 03, 48, 83, E8, 01, 74, 1E, 48, 83, E8, 01, 74, 0E, 48, 83, F8, 01, 75, 2A, 41, 0F, B6, 4B, 02, C1, E1, 10, 41, 0F, B6, 43, 01, C1, E0, 08, 33, C8, 41, 0F, B6, 03, 33, C1, 69, C8, 51, 2D, 9E, CC, C1, C1, 0F, 69, C1, 93, 35, 87, 1B, 44, 33, D0, 44, 33, D2, 41, 8B, C2, C1, E8, 10, 41, 33, C2, 69, C8, 6B, CA, EB, 85, 8B, C1, C1, E8, 0D, 33, C1, 69, C8, 35, AE, B2, C2, 8B, C1, C1, E8, 10, 33, C1, C3;

# Murmur Hash 64-Bit: sec_h64_f.
FN: HMURMU64 = 48, 89, 74, 24, 10, 57, 4C, 8B, C2, 48, BF, D5, 53, 42, 11, 91, 7B, C3, 87, 49, C1, E8, 04, 48, BE, 7F, 93, 45, 27, 43, AD, F5, 4C, 49, B9, 79, 71, 09, 1D, 7D, 7F, 5C, 00, 49, BA, 20, 2C, 83, 37, 5A, 24, 00, 00, 4D, 85, C0, 74, 6D, 48, 89, 5C, 24, 10, 4C, 8B, D9, 49, 8B, D8, 66, 66, 66, 0F, 1F, 84, 00, 00, 00, 00, 00, 49, 8B, 03, 4D, 8D, 5B, 10, 48, 0F, AF, C7, 48, C1, C0, 1F, 48, 0F, AF, C6, 49, 33, C1, 48, C1, C0, 1B, 49, 03, C2, 4C, 8D, 0C, 85, 29, E7, DC, 52, 4C, 03, C8, 49, 8B, 43, F8, 48, 0F, AF, C6, 48, C1, C8, 1F, 48, 0F, AF, C7, 49, 33, C2, 48, C1, C0, 1F, 48, 05, F1, DE, 41, 0B, 49, 03, C1, 4C, 8D, 14, 80, 48, 83, EB, 01, 75, AE, 48, 8B, 5C, 24, 10, 49, C1, E0, 04, 33, C0, 4C, 03, C1, 48, 8B, CA, 83, E1, 0F, 48, FF, C9, 48, 83, F9, 0E, 0F, 87, D7, 00, 00, 00, 4C, 8D, 1D, 00, 00, 00, 00, 41, 8B, 8C, 8B, 00, 00, 00, 00, 49, 03, CB, FF, E1, 41, 0F, B6, 40, 0E, 48, C1, E0, 30, 41, 0F, B6, 48, 0D, 48, C1, E1, 28, 48, 33, C1, 41, 0F, B6, 48, 0C, 48, C1, E1, 20, 48, 33, C1, 41, 0F, B6, 48, 0B, 48, C1, E1, 18, 48, 33, C1, 41, 0F, B6, 48, 0A, 48, C1, E1, 10, 48, 33, C1, 41, 0F, B6, 48, 09, 48, C1, E1, 08, 48, 33, C1, 41, 0F, B6, 48, 08, 48, 33, C8, 48, 0F, AF, CE, 48, C1, C9, 1F, 48, 0F, AF, CF, 4C, 33, D1, 41, 0F, B6, 40, 07, 48, C1, E0, 38, 41, 0F, B6, 48, 06, 48, C1, E1, 30, 48, 33, C1, 41, 0F, B6, 48, 05, 48, C1, E1, 28, 48, 33, C1, 41, 0F, B6, 48, 04, 48, C1, E1, 20, 48, 33, C1, 41, 0F, B6, 48, 03, 48, C1, E1, 18, 48, 33, C1, 41, 0F, B6, 48, 02, 48, C1, E1, 10, 48, 33, C1, 41, 0F, B6, 48, 01, 48, C1, E1, 08, 48, 33, C1, 41, 0F, B6, 08, 48, 33, C8, 48, 0F, AF, CF, 48, C1, C1, 1F, 48, 0F, AF, CE, 4C, 33, C9, 48, 8B, 74, 24, 18, 4C, 33, D2, 4C, 33, CA, 4D, 03, CA, 4D, 03, D1, 4D, 03, CA, 4B, 8D, 04, 0A, 49, 33, C1, 5F, C3, 90, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00;

