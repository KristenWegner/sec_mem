// Function: Tests for rdrand support: sec_g64_f.
#define HRDRND64 c6062dc5
#define HRDRND64_KEY f16301960
static uint64_t HRDRND64_KEY = (0x1591E09DU);
static uint8_t HRDRND64[] = { 0xE6, 0x5E, 0x17, 0x8F, 0x0A, 0x9A, 0xEB, 0x38, 0x61, 0xD7, 0x50, 0x9A, 0xD3, 0x04, 0x4D, 0x6E, 0xE0, 0xA6, 0xD2, 0xD7, 0x4D, 0x33, 0x67, 0x30, 0x85, 0x80, 0xFD, 0x04,  };

// Function: Read rand via rdrand: sec_g64_f.
#define RDRAND64 d4b203f0
#define RDRAND64_KEY fbc83e7b7
static uint64_t RDRAND64_KEY = (0x2596D813U);
static uint8_t RDRAND64[] = { 0xBB, 0x43, 0x43, 0x95, 0x5B, 0x9A, 0xF1,  };

// Function: Multiply using Schrage's method: sec_sch_t;
#define SHRGML64 a54a95ab
#define SHRGML64_KEY ec08e543b
static uint64_t SHRGML64_KEY = (0xA16DFDDBU);
static uint8_t SHRGML64[] = { 0x53, 0xDD, 0xB0, 0x89, 0xD8, 0xA0, 0x93, 0xEC, 0xB0, 0x8B, 0x0F, 0xEB, 0x5A, 0x3F, 0xE3, 0x2F, 0x8D, 0x67, 0x60, 0xFE, 0x52, 0x05, 0x88, 0xB3, 0x67, 0x35, 0x65, 0xA3, 0x64, 0x3B, 0x76, 0x48, 0x7E, 0x1F, 0x3E, 0x1C, 0x35, 0x65, 0xA8, 0x46, 0x64, 0x4E, 0x56, 0x6F, 0xBF, 0xAB, 0x5A, 0xD3, 0x86, 0x08, 0x3D, 0xF6, 0xF2, 0x70, 0xA4, 0xCC, 0x2F, 0xA7, 0x7A, 0x0D, 0xF4, 0x80, 0x68, 0x62, 0x9B, 0xBB, 0xA8, 0x16, 0xF3, 0xAE, 0xDD, 0x67, 0x58, 0xB8, 0x34, 0x11, 0x9B, 0xA5, 0xC9, 0xBC, 0xD2, 0xE8, 0x2C, 0x6A, 0xD1, 0x80, 0x0D, 0xCF, 0x91, 0x17, 0x61, 0x99, 0x0D, 0x50, 0xAF, 0x26, 0xF5, 0xA2, 0x7C, 0xDE, 0x85, 0xE6, 0x2C, 0x9E, 0x0F, 0x67, 0x47, 0x60, 0x44, 0xFB, 0x59, 0xCC, 0x91, 0x6F, 0xB0, 0xC5, 0x31, 0x91, 0x8D, 0xD3, 0xC8, 0xC3, 0xF2, 0x37, 0xA8, 0x18, 0x1B, 0x42, 0xB8, 0x5F, 0x95, 0x4D, 0xC4, 0x62, 0xFA, 0x83, 0xE8, 0x9A, 0x05, 0xB8, 0x75, 0x02, 0x84, 0x98, 0xE0, 0x3D, 0x93, 0xD0, 0xE6, 0x09, 0xE7, 0x7D, 0x6E, 0x1B, 0x4A, 0xD2, 0x16, 0x10, 0x61, 0xD4, 0x06, 0xB7, 0x24, 0xDE, 0xB8, 0xF8, 0x2D, 0xDC, 0x28, 0xD8, 0xF6, 0x50, 0xE4, 0x63, 0xCD, 0x66, 0x2D, 0xCC, 0x2A, 0x21, 0x2E, 0xB5, 0xA0, 0x80, 0x6F, 0x22, 0xF8, 0x93, 0x60, 0x6F, 0x6C, 0xE4, 0x36, 0x5F, 0x8A, 0x74, 0xE7, 0xBA, 0x3E, 0xB0, 0x4D, 0xD3, 0x2C, 0x1C, 0x37, 0x45, 0x6F, 0x33, 0xA2, 0xDD, 0x5A, 0xB5, 0x98, 0xCD, 0x82, 0x80, 0xF1, 0x43, 0x7F, 0xEA, 0x2C, 0x87, 0x10, 0x30, 0xB1, 0xD4, 0x76, 0xA6, 0x1D, 0x8C, 0xE1, 0x09, 0x2B, 0xF7, 0xDD, 0x48, 0x47, 0xEF, 0x47, 0x86, 0xF4, 0x91, 0xE4, 0x25, 0x4C, 0x4B, 0xA6, 0xB6, 0x8B, 0xDB, 0x81, 0xB5, 0x08, 0xF8, 0x86, 0x7F, 0x2B, 0x6E, 0x41, 0xBB, 0xC3, 0xB2, 0x04, 0xEF, 0xB1, 0x63, 0xE0, 0x59, 0xAD, 0xA2, 0xCD, 0xA3, 0x35, 0xC9, 0x02, 0xF7, 0x53, 0x6E, 0x04, 0x60, 0x33, 0x54, 0xFE, 0x95, 0x9E, 0xF3, 0xFB, 0x94, 0xBC, 0x61, 0x53, 0xC7, 0xD0, 0xB5, 0xA8, 0xDF, 0x9E,  };

// Function: Fishman-20 64 RNG seed: sec_srs_f.
#define FS20SD64 f57f128a
#define FS20SD64_KEY b2947d670
static uint64_t FS20SD64_KEY = (0xB9B55847U);
static uint8_t FS20SD64[] = { 0x5B, 0x2B, 0x8A, 0x95, 0x07, 0x3D, 0x7E, 0x3C, 0x15, 0x67, 0x23, 0x0E, 0x60, 0xA7, 0x97, 0xD3, 0xBB, 0xE0, 0x84, 0xA1, 0x4F, 0x0A, 0x81, 0x00, 0x99, 0x31, 0xC8, 0x48, 0xFA, 0xC0, 0xD1, 0xD5, 0xDA, 0xA8, 0x43, 0x42, 0x32, 0x68, 0x14, 0xB1, 0x7A, 0x6E, 0xEF, 0x25, 0x8F, 0x03, 0x32, 0xB0, 0x8A, 0xE6, 0x99, 0xA6, 0xA9, 0x8C, 0x60, 0x91, 0x12, 0xE7, 0xC7, 0x64, 0xB2, 0x0D,  };

// Function: Fishman-20 64 RNG generate: sec_r64_f.
#define FS20RG64 f9d24dfa
#define FS20RG64_KEY b98a942e0
static uint64_t FS20RG64_KEY = (0x0F114DBFU);
static uint8_t FS20RG64[] = { 0x63, 0x53, 0xE9, 0x98, 0x9E, 0xC5, 0x56, 0xC7, 0x64, 0x57, 0x72, 0x41, 0xA4, 0x16, 0x64, 0x89, 0x52, 0xEE, 0x7D, 0xD1, 0x8E, 0xF3, 0x41, 0xE6, 0xE8, 0xF2, 0xA8, 0x39, 0x83, 0xB4, 0xB9, 0x15, 0x88, 0xE7, 0xE7, 0x87, 0x6D, 0x29, 0x7F, 0xEF, 0x33, 0x33, 0x4F, 0x5F, 0x89, 0x4B, 0x5A, 0x8B, 0xB6, 0x17, 0x21, 0xA0, 0x6F, 0xFF, 0x8E, 0x2A, 0xF2, 0x75, 0xED, 0xE4, 0x1A, 0x0D, 0x8D, 0xDD, 0x10, 0x95, 0xEA, 0x43, 0xB2, 0x2D, 0x42, 0x27, 0x2A, 0x51, 0xCE, 0x3D, 0x77, 0xE0, 0x1C, 0x6A, 0xA1, 0x98, 0xDB, 0xCF, 0xA4, 0x44, 0x93, 0x93, 0x32, 0xA9, 0x50, 0xB8, 0xDC, 0x2A, 0x24, 0x72, 0x27, 0x7C, 0x69, 0x9C, 0xDE, 0xF3, 0x51, 0x68, 0x23, 0xB9, 0x29, 0x16, 0x6C, 0x00, 0x0A, 0x68, 0xB2, 0xB1, 0x9D, 0xE8, 0x3B, 0xDC, 0x25, 0xB1, 0xDB, 0x04, 0x1A, 0x61, 0xFB, 0xE6, 0xF9, 0xCB, 0x4F, 0x69, 0xD1, 0x34, 0x87, 0xA6, 0x8C, 0x6D, 0xC7, 0xEA, 0x84, 0x50, 0x33, 0xE7, 0xD2, 0xCD, 0x00, 0x4E, 0x96, 0xF7, 0x94, 0x19, 0x10, 0x94, 0xBD, 0x35, 0xBC, 0xC1, 0xEE, 0xE3, 0x62, 0x0A, 0x52, 0x83, 0xA8, 0x43, 0x0C, 0x0E, 0x4A, 0xBD, 0x30, 0x9F, 0xA2, 0x36, 0x7D, 0x59, 0xE7, 0x33, 0xFC, 0x85, 0x84, 0x9F, 0xB1, 0x29, 0xA3, 0xF0, 0xC6, 0x90, 0x08, 0xB4, 0x69, 0xB5, 0xAD, 0xAD, 0x92, 0x5E, 0xE1, 0x0F, 0x28, 0x34, 0x7C, 0x15, 0xD7, 0x97, 0xE7, 0x70, 0x6B, 0x2E, 0x91, 0x56, 0x03, 0x92, 0x0D, 0x4A, 0x9C, 0x0C, 0x4E, 0x65, 0x09, 0x31, 0x06, 0x61, 0x79, 0x87, 0x7D, 0x24, 0xF6, 0xF7, 0x29, 0x5B, 0x01, 0xCA, 0x54, 0x6F, 0x6F, 0x8A, 0x6B, 0xCE, 0xE0, 0x5C, 0xB2, 0x72, 0x4B, 0xDE, 0x1D, 0xB5, 0x9B, 0xE0, 0x6E, 0x26, 0xBE, 0xD3, 0x86,  };

// Function: Knuth 2002 64 with Random Bit Shift RNG seed: sec_srs_f.
#define KN02SD64 e23154a6
#define KN02SD64_KEY cda98a76
static uint64_t KN02SD64_KEY = (0xBB24AF71U);
static uint8_t KN02SD64[] = { 0xB1, 0x53, 0xA6, 0x87, 0x86, 0x86, 0x81, 0x9A, 0x16, 0xF1, 0x42, 0x50, 0x25, 0x2D, 0xE9, 0x7B, 0x64, 0x9B, 0xFE, 0x6E, 0x03, 0xD4, 0x45, 0x55, 0xFE, 0xAB, 0x7A, 0x8A, 0xD2, 0x25, 0x04, 0xE5, 0x10, 0x1A, 0xBA, 0xC1, 0x85, 0xCF, 0xC1, 0x5C, 0x9E, 0xC8, 0xAC, 0xB5, 0xB0, 0x97, 0xBD, 0x58, 0xEC, 0x1F, 0x3D, 0xC0, 0x98, 0xDA, 0x4A, 0xD3, 0x8A, 0xED, 0x84, 0x77, 0x7D, 0x68, 0x89, 0x46, 0xFB, 0x3F, 0x68, 0x90, 0x8A, 0xC8, 0x80, 0x52, 0xBB, 0x0F, 0x8B, 0x9C, 0x3F, 0x9B, 0x2D, 0xAD, 0x78, 0x66, 0x7D, 0x1C, 0xD6, 0x11, 0x3D, 0x1C, 0x80, 0xAC, 0x35, 0x1C, 0x04, 0x34, 0xED, 0xDB, 0x44, 0x29, 0x0A, 0xB6, 0x03, 0xF8, 0x5A, 0x2A, 0xCE, 0x31, 0x3A, 0x70, 0x8B, 0x27, 0xC0, 0x7B, 0x03, 0xCC, 0x08, 0xC1, 0xFD, 0xA1, 0x26, 0xAC, 0xAC, 0x11, 0x03, 0x12, 0xE9, 0x51, 0xF7, 0xA1, 0x59, 0xAE, 0x7E, 0x94, 0xFB, 0x13, 0x5F, 0xA1, 0x03, 0xEF, 0xB4, 0x41, 0x25, 0xF0, 0xF5, 0xF9, 0x82, 0xF4, 0xD0, 0x17, 0xA9, 0x6B, 0x05, 0x6C, 0x70, 0x65, 0x5C, 0xD0, 0x3B, 0xFE, 0x57, 0xF5, 0xED, 0x0F, 0x57, 0x02, 0xE7, 0x24, 0x87, 0x02, 0x8D, 0x69, 0x4D, 0xDF, 0x21, 0xFB, 0xBA, 0x4C, 0xB6, 0x4B, 0x88, 0x33, 0xAB, 0x69, 0x11, 0xA1, 0x8B, 0xB8, 0x59, 0xBF, 0x62, 0x0F, 0x2C, 0xEB, 0x14, 0xEB, 0xC9, 0xEE, 0x2A, 0xE6, 0x92, 0x6F, 0x2C, 0xDE, 0x42, 0xB9, 0x77, 0x30, 0x7A, 0x10, 0x39, 0x92, 0x6E, 0x71, 0x1C, 0xCE, 0x67, 0x14, 0xD7, 0x7A, 0x9D, 0x6F, 0xFC, 0xB1, 0x30, 0x12, 0xD4, 0x8A, 0x4E, 0xC5, 0xF7, 0x2A, 0x97, 0x90, 0x03, 0x86, 0xEC, 0x41, 0x8C, 0x7A, 0x73, 0x69, 0x0B, 0x21, 0xFB, 0xC8, 0x40, 0x6F, 0x20, 0x2B, 0xDB, 0xA2, 0x97, 0xA6, 0x03, 0x77, 0xF8, 0xEA, 0xCF, 0xE5, 0x03, 0x25, 0x45, 0xEB, 0x1F, 0x4D, 0xB2, 0xD1, 0x9D, 0xCC, 0x04, 0xD9, 0x67, 0x87, 0x84, 0xCE, 0x94, 0xC9, 0xB4, 0xB9, 0x73, 0x80, 0xE6, 0x23, 0xC2, 0x6B, 0xE8, 0x59, 0x6D, 0xD9, 0x78, 0xB6, 0x75, 0x03, 0x56, 0xE1, 0x55, 0x24, 0xC9, 0x10, 0xA9, 0x83, 0x34, 0xBF, 0xD3, 0xBB, 0x05, 0x26, 0xFB, 0x75, 0x84, 0x76, 0x3A, 0xAE, 0x8D, 0xD0, 0xC8, 0x78, 0xA4, 0xD4, 0x44, 0xD5, 0xE5, 0xBB, 0x7F, 0xC2, 0x1C, 0xEB, 0xD8, 0x70, 0x54, 0x94, 0xE2, 0x1C, 0x7F, 0xCF, 0x11, 0xCE, 0x4D, 0x19, 0x88, 0xE4, 0x47, 0x52, 0x6D, 0x4A, 0x23, 0xD9, 0x05, 0xA2, 0x4E, 0x58, 0x83, 0x7F, 0xC7, 0x33, 0x8B, 0x55, 0x29, 0x02, 0x50, 0x73, 0x44, 0x5C, 0x1A, 0x59, 0xA2, 0xCD, 0x57, 0xC1, 0x6F, 0x85, 0x95, 0xE0, 0x3F, 0x03, 0x97, 0xB7, 0x56, 0x87, 0x01, 0x51, 0xBC, 0x60, 0x52, 0xB0, 0xCC, 0x86, 0x2D, 0x8E, 0x11, 0x0D, 0x7D, 0xB0, 0x31, 0x67, 0x35, 0x63, 0xF3, 0x87, 0x79, 0xE3, 0xB5, 0xB7, 0x63, 0x92, 0xF5, 0xF6, 0x42, 0xA0, 0x07, 0xA2, 0xB2, 0x76, 0x42, 0x59, 0x8C, 0x6D, 0x70, 0x11, 0xBE, 0xF4, 0x3A, 0xE1, 0x98, 0x50, 0xBF, 0xCB, 0x71, 0x70, 0x5D, 0x74, 0x39, 0xFB, 0x4A, 0x1F, 0xDB, 0xF8, 0xA4, 0x14, 0x07, 0xBC, 0x04, 0x92, 0xB3, 0x5A, 0xF1, 0x81, 0xD1, 0x8C, 0xA3, 0x36, 0x21, 0x3A, 0x80, 0xB6, 0xFC, 0x51, 0x91, 0x46, 0xAF, 0x1A, 0x80, 0x72, 0x86, 0xE5, 0xA3, 0x4A, 0x86, 0xE6, 0x47, 0x2B, 0x47, 0x91, 0x8B, 0x14, 0xC8, 0x07, 0xC3, 0xB9, 0x7B, 0x83, 0x9C, 0xD3, 0x52, 0xD0, 0x21, 0x68, 0x38, 0x96, 0x77, 0xC4, 0x77, 0x37, 0x84, 0x56, 0x4D, 0x8F, 0x00, 0xC0, 0x3A, 0x60, 0xFE, 0x7E, 0xCF, 0x9A, 0x71, 0xEE, 0xFD, 0x8A, 0xF1, 0x37, 0xDB, 0x43, 0x78, 0x7D, 0x82, 0x47, 0xA1, 0x43, 0x1A, 0x8C, 0xF8, 0x01, 0x91, 0xA6, 0x6F, 0xAE, 0xA5, 0x3D, 0xC5, 0xE3, 0x09, 0xE3, 0x6D, 0x41, 0xA1, 0xD3, 0x4A, 0x95, 0x05, 0x55, 0x69, 0x43, 0x40, 0x54, 0x7B, 0x4E, 0xE3, 0x74, 0xD7, 0x49, 0x5F, 0xF5, 0xBF, 0x0A, 0xF5, 0x05, 0x1B, 0x64, 0x33, 0x72, 0x0B, 0x72, 0xB9, 0x6C, 0x80, 0x72, 0xF1, 0xFA, 0x95, 0xAC, 0x17, 0x0E, 0x30, 0x06, 0x03, 0xCF, 0x73, 0x69, 0xAB, 0xF6, 0xB6, 0x58, 0x1A, 0x95, 0xE2, 0xC8, 0xB5, 0xC0, 0x5F, 0x5E, 0x78, 0x53, 0x6E, 0x08, 0x84, 0x4B, 0x50, 0x8A, 0xB1, 0x54, 0xAB, 0xC4, 0x1F, 0xA1, 0xDC, 0xE6, 0xE4, 0x2A, 0xEA, 0x4D, 0x11, 0x39, 0xF9, 0x13, 0x1C, 0xFC, 0x23, 0x07, 0x78, 0xEC, 0x4C, 0xAE, 0x9E, 0x52, 0x8C, 0x2A, 0x3D, 0x80, 0x2C, 0xAE, 0xFF, 0xA6, 0x2B, 0x11, 0x41, 0x6F, 0x0E, 0xDC, 0xA7, 0x78, 0x1E, 0xD3, 0x6F, 0x80, 0x58, 0xCD, 0xCE, 0x87, 0x3B, 0xE4, 0x1C, 0xBF, 0xFD, 0x19, 0x2F, 0xCC, 0xF6, 0x31, 0x13, 0x3B, 0xE6, 0xAB, 0x1B, 0xBC, 0xAB, 0x53, 0x9B, 0x5A, 0x08, 0x90, 0x57, 0xF6, 0x60, 0xFC, 0x06, 0x4A, 0x1A, 0x6B, 0xD1, 0x69, 0xB7, 0xA5, 0x6E, 0xAB, 0xEA, 0xB3, 0xB1, 0x74, 0x6A, 0x42, 0xE0, 0x3F, 0x36, 0xA3, 0x6D, 0x65, 0x6D, 0x6E, 0xD9, 0x4A, 0x32, 0x63, 0xCB, 0xB0, 0x84, 0x6E, 0x9D, 0x33, 0x33, 0xBA, 0x36, 0x38, 0x1F, 0x43, 0xEF, 0xF9, 0xB6, 0x3C, 0x1E, 0x1A, 0x8D, 0x3D, 0x63, 0x01, 0x89, 0xF5, 0xCB, 0x03, 0x04, 0x98, 0x52, 0x5B, 0x3B, 0x84, 0x72, 0xD3, 0x73, 0xF6, 0x02, 0xB8, 0xBA, 0xE8, 0xEB, 0xAF, 0x86, 0x15, 0x6A, 0x59, 0x62, 0x36, 0x44, 0x87, 0xFE, 0xF7, 0xE9, 0x80, 0x99, 0xAB, 0x71, 0x3A, 0x16, 0xAF, 0x00, 0xBD, 0xCD, 0xCB, 0x8B, 0x06, 0xFC, 0xE0, 0x21, 0x25, 0xB7, 0xE8, 0x59, 0x3E, 0x14, 0x1C, 0x62, 0x9C, 0xE4, 0x97, 0xD5, 0xF4, 0x48, 0x27, 0x7B, 0xFD, 0xDE, 0xB9, 0x78, 0x58, 0x89, 0x82, 0x7A, 0x7E, 0xB2, 0x6D, 0x67, 0x8C, 0x27, 0xB3, 0xA3, 0x50, 0x9A, 0xE5, 0xC8, 0xB1, 0x89, 0xF7, 0xFE, 0xAE, 0x35, 0x5D, 0x16, 0x10, 0x3F, 0xDA, 0x02, 0xB6, 0xEC, 0x34, 0xB8, 0xB8, 0x0A, 0x52, 0x0E, 0xEF, 0x77, 0x04, 0x51, 0xE2, 0xD6, 0x01, 0xEA, 0x06, 0xDA, 0x01, 0x91, 0x70, 0x46, 0x09, 0x42, 0x8F, 0xFD, 0x19, 0xDA, 0x3D, 0xD5, 0xFD, 0x56, 0x14, 0xE1, 0x5D, 0xE5, 0x5E, 0x72, 0x38, 0x55, 0x94, 0xB7, 0xF3, 0xAC, 0x9F, 0xF4, 0x09, 0xA8, 0x49, 0x66, 0x7A, 0xB0, 0xCB, 0x3C, 0x75, 0x9A, 0xCA, 0x0E,  };

// Function: Knuth 2002 64 with Random Bit Shift RNG generate: sec_r64_f.
#define KN02RG64 b4b6f9b4
#define KN02RG64_KEY fa1c77c4d
static uint64_t KN02RG64_KEY = (0x81A3309DU);
static uint8_t KN02RG64[] = { 0xFD, 0x6F, 0x4A, 0xAB, 0x12, 0xD2, 0x6D, 0xF6, 0x4A, 0x4D, 0xF9, 0x0D, 0xEC, 0x29, 0x0D, 0xFF, 0x77, 0xE6, 0x86, 0x96, 0x18, 0x29, 0xF2, 0x39, 0xF9, 0xCB, 0x27, 0xBA, 0x02, 0xA1, 0x83, 0xE7, 0x1C, 0x25, 0x0E, 0x36, 0xB9, 0xF3, 0x98, 0xC5, 0x90, 0x0D, 0xFC, 0xEA, 0x81, 0x63, 0xBB, 0xD2, 0x8A, 0x61, 0x62, 0xFB, 0x19, 0x2E, 0x10, 0xAC, 0x8B, 0xFB, 0x6A, 0xEC, 0xFC, 0xA7, 0xE4, 0x72, 0x6D, 0x8F, 0x15, 0xC1, 0xB6, 0x0E, 0x60, 0xEC, 0x6F, 0xF7, 0x33, 0x0D, 0x85, 0x96, 0xC2, 0x54, 0x7D, 0xBA, 0x5E, 0x12, 0x12, 0xDD, 0x7F, 0x6E, 0x0B, 0x30, 0x97, 0x38, 0x49, 0x03, 0x71, 0xEB, 0xBD, 0x88, 0x1A, 0x3D, 0x3B, 0xE0, 0xA7, 0x56, 0x48, 0x49, 0x5D, 0xD8, 0x8F, 0xFA, 0x14, 0xC7, 0xF0, 0xB2, 0x5A, 0xFA, 0x26, 0x09, 0xA8, 0x59, 0xAA, 0x7C, 0x6A, 0xF3, 0x74, 0xAD, 0x50, 0xCD, 0xCD, 0x62, 0x8D, 0x5E, 0x26, 0x51, 0xB2, 0xB5, 0x7F, 0xE3, 0x31, 0xA2, 0x3E, 0x78, 0x19, 0xA0, 0x49, 0x5D, 0x04, 0x03, 0xDA, 0xC8, 0x77, 0x3B, 0xE9, 0x1E, 0x5F, 0x3D, 0x7F, 0xC7, 0xFA, 0x39, 0x44, 0x6F, 0xC6, 0x01, 0x14, 0x3D, 0x38, 0xD4, 0xD9, 0xE7, 0x20, 0xC3, 0x98, 0x41, 0xD9, 0x5B, 0xFB, 0x22, 0xC1, 0x30, 0xA0, 0x51, 0x08, 0x65, 0x76, 0xFF, 0x4D, 0x70, 0xA7, 0xD2, 0x46, 0x10, 0xE7, 0x47, 0xDE, 0x1A, 0xFB, 0xC4, 0x49, 0x04, 0x9F, 0xAB, 0x47, 0x4F, 0xD2, 0xB6, 0x6D, 0xD5, 0x09, 0x1D, 0xFF, 0xAC, 0x8F, 0x73, 0x1E, 0x4E, 0x8A, 0x8E, 0x67, 0x43, 0x9B, 0xB4, 0x07, 0xE1, 0x1D, 0x86, 0x37, 0xDE, 0x6F, 0xB6, 0x73, 0xE2, 0xCB, 0x8F, 0xE4, 0xAC, 0x88, 0xC6, 0x97, 0x10, 0x54, 0x6E, 0x0F, 0x8E, 0x70, 0x5E, 0x7A, 0xC1, 0xEB, 0x3D, 0xB2, 0xD6, 0xF0, 0xC8, 0x5D, 0x57, 0x74, 0x79, 0xE5, 0x78, 0xDD, 0xAE, 0x91, 0xDA, 0x2C, 0x45, 0x01, 0xA0, 0x7E, 0x54, 0x19, 0x09, 0x00, 0x10, 0xD8, 0x0C, 0x44, 0x42, 0xD3, 0xE6, 0x89, 0x23, 0xD2, 0x12, 0x04, 0x7D, 0x3C, 0x81, 0x59, 0x37, 0xD2, 0x73, 0x93, 0xE7, 0xB0, 0xE1, 0x76, 0x26, 0x18, 0xB4, 0x71, 0x20, 0xAB, 0x2E, 0x81, 0xA6, 0x16, 0x29, 0xC4, 0x8E, 0x55, 0x9A, 0x67, 0xE2, 0x33, 0x63, 0x16, 0x64, 0xE5, 0xC4, 0x69, 0x16, 0xAC, 0xEF, 0x3B, 0x3F, 0xCA, 0xBC, 0x19, 0x28, 0xF8, 0xC0, 0x29, 0xCA, 0x2C, 0x40, 0xEE, 0x9F, 0x20, 0xAC, 0xA6, 0x94, 0x7D, 0x07, 0x1F, 0x61, 0xEC, 0xBD, 0x92, 0x57, 0xC5, 0xDD, 0x04, 0x19, 0x7A, 0x93, 0xF9, 0xD4, 0xD1, 0x80, 0x6C, 0x48, 0x3C, 0x81, 0xBA, 0xF4, 0xA7, 0x04, 0xD8, 0x09, 0xF0, 0x1C, 0x42, 0xB4, 0x3D, 0x2F, 0x64, 0x51, 0xFF, 0x40, 0x6A, 0xF2, 0xB8, 0xAD, 0xA3, 0xAE, 0x2F, 0xFB, 0x95, 0x1B, 0x69, 0x3B, 0x62, 0xEC, 0x9D, 0x5A, 0xE3, 0xEF, 0x98, 0x9A, 0xFA, 0x41, 0x03, 0x0D, 0x8B, 0xC2, 0x22, 0xDF, 0x9B, 0x3F, 0x5C, 0xE7, 0x0E, 0x68, 0xA8, 0x78, 0xBC, 0x2B, 0x51, 0x18, 0xA6, 0xB7, 0x5F, 0x65, 0x46, 0x2A, 0x86, 0x61, 0x80, 0x79, 0xD7, 0x37, 0xBE, 0xED, 0x3E, 0x2E, 0x21, 0xE4, 0xAB, 0x08, 0x88, 0x9D, 0xF7, 0xC8, 0x9F, 0xE5, 0xF5, 0x33, 0xD6, 0x02, 0xBD, 0xDF, 0x03, 0x7D, 0x90, 0x48, 0x06, 0xCB, 0xA8, 0x02, 0x58, 0x2F, 0x43, 0x08, 0x7A, 0xA9, 0x15, 0xA6, 0x37, 0x51, 0x74, 0xE1, 0x18, 0x1C, 0x69, 0x8B, 0x42, 0xFA, 0x28, 0x84, 0xD1, 0x94, 0x49, 0x7B, 0xD7, 0xF9, 0xCB, 0xC2, 0xB3, 0x13, 0x3B, 0xAD, 0x48, 0xC2, 0x9F, 0xCF, 0x01, 0x1F, 0xCF, 0x2D, 0x1E, 0x9D, 0x9C, 0x42, 0x50, 0xE2, 0xD8, 0x2D, 0x44, 0x5A, 0x6C, 0x1C, 0xF7, 0xE4, 0x5B, 0xFE, 0xD7, 0x42, 0x62, 0x36, 0xD5, 0x04, 0x9F, 0xDE, 0x23, 0x38, 0x88, 0x42, 0x41, 0x08, 0x9E, 0xE8, 0xF5, 0x4D, 0x7D, 0x21, 0xF0, 0x3F, 0x58, 0x44, 0x2D, 0x95, 0x64, 0x0B, 0xB4, 0xD9, 0x0B, 0x0A, 0x0D, 0x85, 0x73, 0x21, 0x78, 0xDA, 0xD3, 0xFE, 0x8A, 0x23, 0x1E, 0x1E, 0x28, 0x49, 0x83, 0x33, 0xE8, 0x21, 0xF2, 0xAA, 0x29, 0xC0, 0xD0, 0x45, 0x65, 0xDB, 0x0C, 0x03, 0xBF, 0x73, 0x28, 0xBF, 0x0F, 0x45, 0xE0, 0x0B, 0x53, 0x10, 0xDC, 0xB5, 0xEB, 0xBD, 0xC3, 0x7F, 0xA3, 0x02, 0xE2, 0x73, 0x18, 0x2F, 0x69, 0x09, 0x1F, 0xDC, 0xB9, 0x43, 0xD0, 0x39, 0x8C, 0x04, 0xEC, 0xAE, 0x75, 0x9C, 0x79, 0x4A, 0x6B, 0x2B, 0xB8, 0x7C, 0x33, 0x2E, 0x36, 0xEF, 0xBF, 0x45, 0x8B, 0x9F, 0x6E, 0x37, 0xA0, 0xAB, 0xD1, 0x29, 0xBE, 0x1F, 0x2A, 0x43, 0x30, 0x4F, 0xCE, 0x03, 0xAE, 0x2F, 0x33, 0x73, 0x10, 0xE7, 0x2B, 0xAD, 0xB6, 0x70, 0xD2, 0xEA, 0x13, 0x60, 0xE0, 0x3A, 0x5D, 0x97, 0xC7, 0xF9, 0x1E, 0x64, 0x28, 0x51, 0x96, 0x5A, 0x26, 0x23, 0x2D, 0x36, 0x04, 0x35, 0x1B, 0xC0, 0xEA, 0x84, 0x40, 0xBF, 0xE9, 0x31, 0x38, 0x35, 0xC4, 0xCD, 0x94, 0x95, 0xF7, 0x61, 0x56, 0x3E, 0xB6, 0x2D, 0xCD, 0x77, 0x01, 0x98, 0x61, 0x89, 0xA0, 0xFB, 0x05, 0xF5, 0xEF, 0x51, 0x7F, 0x95, 0x71, 0x1B, 0xAE, 0x0E, 0x89, 0x15, 0x13, 0x57, 0xE8, 0x1D, 0x3B, 0x09, 0x9A, 0x47, 0x00, 0xC2, 0x03, 0x66, 0x27, 0x88, 0x13, 0x26, 0x79, 0xE5, 0x07, 0xC3, 0x3F, 0x98, 0x1F, 0x85, 0x14, 0x32, 0xE2, 0xCC, 0xFD, 0xD9, 0x83, 0x74, 0xB0, 0x70, 0xC3, 0x48, 0xCF, 0xB2, 0xA3, 0xB3, 0x7B, 0xC9, 0xB9, 0x51, 0x4C, 0xF2, 0xFF, 0x97, 0x1E, 0x39, 0xA4, 0x69, 0x2E, 0x57, 0x9A, 0xA6, 0x7F, 0xEC, 0xD4, 0x38, 0x3B, 0x1C, 0x0A, 0xAF, 0x8B, 0xFA, 0x1D, 0x40, 0x2B, 0x47, 0x79, 0xB5, 0x76, 0x88, 0xED, 0x9A, 0x49, 0x8D, 0xD1, 0x46, 0x1D, 0xDD, 0x0C, 0xD9, 0x07, 0x6D, 0xFF, 0xD2, 0x27, 0x1E, 0x9D, 0xB4, 0xFE, 0x8E, 0x9B, 0xCB, 0x4B, 0x36, 0xF6, 0x91, 0xB0, 0xA9, 0x8C, 0xC3, 0xC5, 0x76, 0x63, 0x52, 0x66, 0xFE, 0x33, 0x1E, 0x40, 0xAE, 0x4E, 0x3E, 0x6C, 0x0E, 0x49, 0x3E, 0x1A, 0xF9, 0x5B, 0xB7, 0xDD, 0x08, 0xF8, 0x12, 0x71, 0x1C, 0xCC, 0xD7, 0xB0, 0xAF, 0x06, 0xB7, 0xD3, 0x0F, 0x0F, 0xD9, 0x85, 0x2E, 0x85, 0x19, 0x25, 0xB7, 0x35, 0xFE, 0xB3, 0x3F, 0x81, 0xD4, 0x38, 0x05, 0xCF, 0x04, 0x26, 0xF5, 0x5E, 0x3E, 0x3A, 0x9E, 0xDC, 0x4C, 0x44, 0x10, 0xA3, 0x7B, 0x2E, 0xF3, 0x9F, 0x5B, 0x71, 0x15, 0x28, 0x01, 0xD3, 0x1B, 0x0A, 0x0D, 0x26, 0xCA, 0x1C, 0x04, 0xA3, 0xBF, 0x30, 0xCB, 0x92, 0xD0, 0xCD, 0xA0, 0x42, 0xD3, 0x09, 0xB9, 0xD2, 0xBF, 0xF2, 0xBA, 0x12, 0x3F, 0x9A, 0x9D, 0xCD, 0x70, 0x65, 0xD9, 0xB1, 0x6F, 0x73, 0x45, 0xE1, 0x32, 0xDE, 0x9F, 0x5E, 0xC1, 0xF1, 0x09, 0xBF, 0xF0, 0xC2, 0xA2, 0xF7, 0xE6, 0x37, 0x44, 0x59, 0xEF, 0x06, 0xAF, 0x83, 0x08, 0x8A, 0xD3, 0xBC, 0x22, 0x97, 0xDC, 0x9A, 0x69, 0xDC, 0xAE, 0x5D, 0x59, 0x86, 0x62, 0x90, 0x4D, 0x43, 0x94, 0x31, 0x36, 0xA8, 0xFA, 0x3E, 0xB6, 0x6E, 0x9A, 0x50, 0x30, 0xF5, 0x20, 0xAC, 0x6B, 0xA7, 0x6F, 0x00, 0xE8, 0x08, 0x37, 0xDE, 0x75, 0x6B, 0xBA, 0x0D, 0x61, 0xCA, 0xBD, 0xF1, 0x93, 0x1E, 0x5F, 0x09, 0xF1, 0xD2, 0x0A, 0xE8, 0x8B, 0x23, 0xAC, 0x89, 0x4F, 0xDE, 0xD2, 0x84, 0xD0, 0x37, 0x8C, 0x33, 0xA0, 0xE9, 0x84, 0xC4, 0x26, 0x1F, 0x84, 0x05, 0x5F, 0x7E, 0xDB, 0xCF, 0xC7, 0xC2, 0x7E, 0x07, 0xCB, 0xC3, 0x2C, 0x82, 0xF5, 0xAB, 0xCC, 0xFF, 0xAE, 0x58, 0x20, 0x7F, 0xE3, 0xC6, 0x97, 0x9E, 0x42, 0xCC, 0xA4, 0xEA, 0xF6, 0x3B, 0xAE, 0x8A, 0x62, 0x12, 0x4B, 0x6B, 0xCE, 0xE0, 0xC0, 0x56, 0x5A, 0x8A, 0xC3, 0x2B, 0x17, 0xBF, 0xA4, 0xAF, 0x9D, 0x27, 0xEC, 0xBB, 0xB7, 0x3E, 0x1F, 0xA2, 0x99, 0x51, 0xD2, 0x6E, 0x08, 0xB9, 0xA0, 0x67, 0x8D, 0xE0, 0x0D, 0xF7, 0xD2, 0x42, 0x34, 0x38, 0x76, 0x33, 0xE1, 0x96, 0xC4, 0x0B, 0x5F, 0xA4, 0x0B, 0x33, 0x9E, 0x9E, 0x8D, 0xE6, 0x9E, 0x4F, 0x84, 0xAF, 0x51, 0x80, 0xC1, 0x43, 0x02, 0xA8, 0x31, 0x91, 0xC0, 0xDC, 0x44, 0x1D, 0x6A, 0xD3, 0x08, 0xFD, 0x3F, 0xE5, 0x5D, 0x1A, 0x14, 0x34, 0xF8, 0x14, 0x3C, 0xAD, 0xF9, 0x62, 0xD4, 0x3E, 0x0F, 0xFE, 0x57, 0xF7, 0x27, 0x52, 0x60, 0xEF, 0xE4, 0x00, 0x0B, 0x82, 0x15, 0x08, 0xC4, 0x13, 0x0D, 0x89, 0x8E, 0xBD, 0x25, 0x8C, 0x39, 0x20, 0x9E, 0xCD, 0xE0, 0x41, 0x27, 0xF2, 0xB4, 0xDB, 0x51, 0x68, 0xEA, 0x5F, 0xCA, 0xF1, 0xFC, 0xE6, 0x67, 0x2C, 0x9B, 0xDA, 0xC0, 0xAD, 0xD4, 0x25, 0xC9, 0xF9, 0xC1, 0xC0, 0xFA, 0x6D, 0xE6, 0x47, 0x08, 0xC6, 0x1A, 0x0A, 0xA0, 0x88, 0x18, 0x0F, 0xE8, 0xD9, 0x18, 0x67, 0x1A, 0x81, 0x9B, 0x35, 0x86, 0x64, 0x59, 0xE4, 0x52, 0x6C, 0x29, 0x0F, 0x7B, 0xFC, 0xBA, 0xA9, 0x33, 0x93, 0x66, 0xCC, 0x0F, 0x92, 0x28, 0x53, 0x24, 0x1C, 0x84, 0x47, 0x56, 0xE9, 0x93, 0x65, 0x9D, 0x8F, 0x24, 0x1C, 0xF6, 0xFC, 0x1A, 0xB1, 0xC0, 0xB8, 0xB4, 0x03, 0x44, 0x6C, 0x0D, 0x57, 0x2F, 0x7F, 0x0A, 0xF7, 0x9C, 0x30, 0x6D, 0x3D, 0xCA, 0x8E, 0xC3, 0xEC, 0x96, 0x9F, 0xBF, 0x33, 0x7F, 0xB5, 0xDA, 0xAA, 0xC7, 0x25, 0x12, 0x4A, 0xF1, 0x0E, 0xCF, 0x65, 0xA5, 0x21, 0xB7, 0xD7, 0x51, 0xB0, 0x77, 0x52, 0xC6, 0xE6, 0xF9, 0xAE, 0x2B, 0xF2, 0x8B, 0x82, 0x3C, 0x60, 0x6E, 0xA9, 0x0A, 0x0E, 0xB7, 0x9F, 0x52, 0x7B, 0x01, 0x04, 0x33, 0xE4, 0xB5, 0x10, 0x0F, 0x7B, 0x76, 0x9D, 0x05, 0x80, 0x84, 0xCB, 0xDB, 0xCC, 0x29, 0xF2, 0x99, 0xBA, 0xB1, 0xB4, 0x47, 0xD2, 0x81, 0xF5, 0xF7, 0x19, 0xEF, 0x25, 0x35, 0x75, 0xB6, 0x55, 0x5C, 0x01, 0x58, 0xC2, 0x70, 0x5E, 0x8A, 0xBD, 0x6B, 0x3C, 0x16, 0xC7, 0xF5, 0x7D, 0x66, 0xBB, 0xC1, 0x4E, 0x91, 0x99, 0xCC, 0xD9, 0x1A, 0x75, 0x1A, 0xC8, 0x37, 0xF3, 0xE8, 0xCF, 0x0F, 0xEA, 0xD5, 0x56, 0x7D, 0xEB, 0x8B, 0x11, 0x69, 0x44, 0x3D, 0x6F, 0xCF, 0x0B, 0x56, 0xB1, 0xC9, 0x3E, 0x15, 0x6B, 0xAC, 0xE6, 0x4B, 0x38, 0xF6, 0x1C, 0x74, 0x5B, 0x4B, 0x39, 0x24, 0xC5, 0x3B, 0x76, 0xF3, 0xB2, 0x8E, 0xFA, 0x2C, 0x40, 0xC1, 0x78, 0x18, 0x20, 0xFD, 0xB3, 0x60, 0xE2, 0x95, 0xBD, 0x81, 0x7C, 0x75, 0xD0, 0x84, 0x19, 0xDD, 0xF3, 0x16, 0xE2, 0xAA, 0x62, 0x6B, 0xE0, 0x29, 0x09, 0x53, 0x26, 0xD4, 0xC8, 0x57, 0xC4, 0x9E, 0xC1, 0x75, 0xD5, 0x91, 0xDD, 0x13, 0x0D, 0x38, 0x1D, 0xC7, 0x88, 0x8B, 0x12, 0xBC, 0xDC, 0xF3, 0xB5, 0x0A, 0xA8, 0x1D, 0x26, 0x7A, 0xB4, 0x6F, 0x10, 0x11, 0xD0, 0x05, 0x5E, 0xB8, 0x15, 0x2B, 0xD3, 0xF7, 0xD7, 0x13, 0x4C, 0x9E, 0x81, 0xAB, 0x80, 0x4F, 0x49, 0xC8, 0xD0, 0xD6, 0x9B, 0x2B, 0x3D, 0x03, 0xD6, 0x94, 0x88, 0x8F, 0x8C, 0x5C, 0x79, 0x65, 0xF7, 0x25, 0x16, 0x66, 0x84, 0x5D, 0x9D, 0xF3, 0x92, 0xA3, 0x53, 0x72, 0x90, 0x57, 0xE3, 0x85, 0x92, 0x53, 0x36, 0xB7, 0xD7, 0x9F, 0x37, 0x59, 0x54, 0xD5, 0x51, 0x43, 0xE1, 0x16, 0xEA, 0x7A, 0xF6, 0x80, 0x0E, 0x4D, 0x78, 0x26, 0xBB, 0x03, 0xCE, 0xC1, 0xE0, 0x0F, 0x1D, 0xE5, 0xF7, 0xE1, 0xA2, 0x4E, 0x9E, 0xC9, 0xA1, 0xDB, 0x1B, 0x4C, 0xFC, 0xD9, 0xE1, 0x00, 0x08, 0xF7, 0x60, 0x93, 0x3E, 0x48, 0x5A, 0xA7, 0xC5, 0xA4, 0x68, 0x95, 0x46, 0x43, 0x6A, 0xB7, 0x16, 0xE1, 0x90, 0x79, 0x3D, 0x1E, 0x4F, 0x72, 0x9E, 0x47, 0x7C, 0xB9, 0xC4, 0xDA, 0x63, 0x81, 0x8A, 0x6D, 0x15, 0x3B, 0xD8, 0x28, 0xBD, 0xAD, 0xC2, 0x16, 0x0A, 0x0F, 0xCA, 0x70,  };

// Function: L'Ecuyer 32 RND seed: sec_srs_f.
#define LECUSR32 f68d0bc5
#define LECUSR32_KEY f31e9e9b5
static uint64_t LECUSR32_KEY = (0xF49962BFU);
static uint8_t LECUSR32[] = { 0x63, 0x53, 0xEA, 0x98, 0x9F, 0x69, 0x46, 0xFF, 0x28, 0x6D, 0xFA, 0x06, 0xFA, 0x13, 0x64, 0x9A, 0x53, 0x92, 0x9F, 0xD1, 0x10, 0x18, 0x83, 0xD1, 0x29, 0xBB, 0x6B, 0x3B, 0x25, 0x91, 0x33, 0x35, 0x9B, 0xF0, 0x54, 0x7B, 0xD0, 0x28, 0x95, 0xCF, 0x54, 0x76, 0x6E, 0x1A, 0x0F, 0x4B, 0x5A, 0x0B, 0x88, 0xE6, 0xA9, 0xA1, 0x84, 0xFC, 0x8B, 0x98, 0x32, 0x7D, 0x69, 0xA0, 0x92, 0xCF, 0xB8, 0x74, 0xAE, 0x3F, 0x62, 0xCA, 0x73, 0xE1, 0x42, 0x9F, 0x00, 0xE6, 0x32, 0x00, 0x40, 0x68, 0x9D, 0x65, 0x66, 0x4D, 0x1B, 0xC8, 0x13, 0x90, 0x3C, 0xA6, 0x15, 0x21, 0x90, 0xB3, 0x21, 0x16,  };

// Function: L'Ecuyer 32 RNG generate: sec_r32_f.
#define LECURG32 a443250a
#define LECURG32_KEY d6cb6d65f
static uint64_t LECURG32_KEY = (0xD2BA7672U);
static uint8_t LECURG32[] = { 0xDE, 0x8E, 0xA6, 0xCE, 0x84, 0x30, 0x24, 0xCE, 0xC5, 0x64, 0xE1, 0x8B, 0x40, 0x32, 0x51, 0xBD, 0xC1, 0x2D, 0x69, 0x3B, 0xB1, 0x2A, 0x72, 0x44, 0xAE, 0x89, 0x91, 0xFB, 0xB0, 0xDE, 0xC0, 0x22, 0x83, 0x04, 0xD8, 0x24, 0x46, 0xF3, 0x1A, 0x78, 0xA9, 0x12, 0xBE, 0x1C, 0x0E, 0x6C,  };

// Function: GFSR4 32 RND seed: sec_srs_f.
#define GFSRSR32 ddfa39cf
#define GFSRSR32_KEY d88a095de
static uint64_t GFSRSR32_KEY = (0x0A8716AEU);
static uint8_t GFSRSR32[] = { 0xBA, 0x56, 0x47, 0x94, 0x1F, 0x6B, 0xB0, 0xBF, 0x6F, 0x96, 0x1E, 0x4C, 0x31, 0x92, 0xE2, 0x79, 0x56, 0x1F, 0x56, 0x82, 0x9F, 0x20, 0x39, 0xE9, 0x83, 0x1C, 0x29, 0x3F, 0xF7, 0x20, 0xFD, 0x53, 0x8D, 0x9F, 0x93, 0x57, 0xC9, 0x57, 0x3A, 0xA4, 0xA8, 0x95, 0x39, 0x1E, 0xC4, 0xCF, 0x30, 0xA3, 0xFF, 0x65, 0xA6, 0x4B, 0x7F, 0x3E, 0xCA, 0xA2, 0x51, 0x48, 0x85, 0xE4, 0xE6, 0x1D, 0x9A, 0x83, 0xE3, 0xD2, 0x57, 0xAC, 0x46, 0x9B, 0xB5, 0x5C, 0x80, 0x44, 0x87, 0x51, 0x12, 0x23, 0x48, 0x25, 0xF5, 0x3B, 0xD7, 0xBF, 0x76, 0xEF, 0xC7, 0xBB, 0x08, 0xFE, 0xA0, 0xA5, 0xBD, 0x24, 0xE2, 0xF7, 0x61, 0xF7, 0x21, 0x97, 0x5B, 0x70, 0x4A, 0xEB, 0xC5, 0x96, 0xBF, 0x5F, 0xF5, 0x0A, 0xFB, 0xDF, 0x36, 0x17, 0xD9, 0xBE, 0xF0, 0x91, 0xDE, 0x0D, 0xE2, 0x77, 0xC1, 0x80, 0x91, 0x4F, 0x89, 0x25, 0xF5, 0x17, 0x0B, 0xBD, 0x02, 0xCF, 0xD8, 0xF3, 0x15, 0xDC, 0x5B, 0xB9, 0xEE, 0xEA, 0x11, 0xF1, 0xB4, 0xD6, 0x80, 0xB5, 0x51, 0x01, 0x9C, 0xAA, 0x91, 0x53, 0x18, 0xB6, 0xE4, 0x72, 0x39, 0x5A, 0x97, 0x48, 0x4A, 0xD7, 0x3B, 0x94, 0x87, 0x32, 0xB9, 0x4D, 0x4D, 0xA0, 0xB6, 0xEF, 0xD3, 0xCA, 0xCB, 0xAF, 0xB1, 0x77, 0x2A, 0xD7, 0x4C, 0x1E, 0x9C, 0xDE, 0x99, 0x88, 0xB7, 0x2B, 0xAE,  };

// Function: GFSR4 32 RNG generate: sec_r32_f.
#define GFSRRG32 fa0a8c95
#define GFSRRG32_KEY b34522905
static uint64_t GFSRRG32_KEY = (0x3A197B42U);
static uint8_t GFSRRG32[] = { 0x7D, 0x92, 0xF3, 0x09, 0x12, 0x13, 0xE2, 0x1F, 0xEA, 0x45, 0x45, 0x19, 0x11, 0x6E, 0xD5, 0x4E, 0xE5, 0x1D, 0xBA, 0x81, 0x56, 0x02, 0x07, 0xFD, 0x4F, 0xC8, 0xAB, 0x2F, 0xBF, 0xBA, 0xA1, 0x9E, 0x6E, 0x6C, 0x37, 0xAB, 0xEC, 0xB3, 0x5C, 0x8A, 0x71, 0x9B, 0x8D, 0x71, 0x16, 0xBE, 0x19, 0xBF, 0x1E, 0xA0, 0x78, 0x6B, 0xBA, 0x94, 0x82, 0x47, 0x63, 0x6A, 0xDA, 0x07, 0xAA, 0x91, 0xBF, 0x24, 0xBA, 0xE6, 0x00, 0xB8, 0x07, 0xA7, 0x67, 0xCE, 0x70, 0x48, 0x51, 0x2A, 0x20, 0x74, 0xE4, 0xFF, 0x86, 0x8B, 0xB3, 0x01, 0x6A, 0x8E, 0x13, 0x06, 0x67, 0x7F,  };

// Function: Split Mix 64 RNG seed: sec_srs_f.
#define SPMXSR64 f6027d6d
#define SPMXSR64_KEY cd62f0c27
static uint64_t SPMXSR64_KEY = (0x0DEE09A4U);
static uint8_t SPMXSR64[] = { 0xF8, 0x4C, 0x18, 0xC5,  };

// Function: Split Mix 64 RNG generate: sec_r64_f.
#define SPMXRG64 fc4f584e
#define SPMXRG64_KEY dde031481
static uint64_t SPMXRG64_KEY = (0xB5200789U);
static uint8_t SPMXRG64[] = { 0x79, 0x0A, 0xE7, 0x47, 0x0C, 0x59, 0x39, 0x7F, 0x5D, 0x27, 0x45, 0xB1, 0x5D, 0x51, 0xAA, 0x94, 0xD4, 0xF8, 0x66, 0xCB, 0x48, 0x1D, 0x5E, 0xAC, 0x99, 0x44, 0x3A, 0x9A, 0xF2, 0x11, 0x47, 0x5A, 0x21, 0xB5, 0xB2, 0x5D, 0x7C, 0xD4, 0xE9, 0xF9, 0xC4, 0xE1, 0xF2, 0x6D, 0x5B, 0x7D, 0x6C, 0xF7, 0x9B, 0x2C, 0xB2, 0x00, 0xF7, 0xBE, 0xF8, 0xC7, 0xA6, 0x82, 0xCB, 0xDE, 0x7D, 0xCF, 0xAE, 0x8E, 0xA1, 0x05, 0xB6, 0xA4, 0xBB, 0x75, 0xE3, 0x10, 0x19, 0x0A, 0x80,  };

// Function: Xoroshiro128+ 64 RNG seed: sec_srs_f.
#define XSHISR64 a7b07554
#define XSHISR64_KEY a77cfd2ac
static uint64_t XSHISR64_KEY = (0x10990F75U);
static uint8_t XSHISR64[] = { 0xE5, 0xF7, 0x92, 0xC3, 0x8A, 0xFE, 0x97, 0xB3, 0x2E, 0x8E, 0xAB, 0x94, 0xD9, 0xCD, 0x23, 0xC9, 0xA1, 0x86, 0x6F, 0xCB, 0xD9, 0xED, 0x9B, 0x08, 0x19, 0x90, 0xFD, 0x8C, 0x42, 0x33, 0x76, 0x7A, 0xC7, 0x11, 0x07, 0xC6, 0xC9, 0x8C, 0xF3, 0xAC, 0x9B, 0x1E, 0x3C, 0x78, 0xB2, 0x3F, 0x78, 0x7B, 0x8E, 0x0D, 0xD6, 0x7F, 0xD9, 0x49, 0x2F, 0x3C, 0x52, 0x71, 0x50, 0x97, 0x4F, 0x84, 0x96, 0x88, 0x2D, 0x9B, 0xB8, 0x83, 0xFE, 0x1A, 0x5A, 0x8C, 0x29, 0xBB, 0x5E, 0xDD, 0x14, 0xB4, 0x8A, 0x38, 0x6C, 0x42, 0x45, 0x6A, 0x69, 0x2E, 0x22, 0xE6, 0xB1, 0xF4, 0xC3, 0xDC, 0xF2, 0xCB, 0xE0, 0x48, 0xFC, 0xDA, 0xE8, 0x4E, 0x73, 0xF3, 0xA4, 0xA7, 0x69, 0x52, 0x87, 0x7C, 0x74, 0x02, 0x9D, 0x5F, 0x51, 0xD9, 0x83, 0x71, 0x37, 0xEA, 0x49, 0xE0, 0x9F, 0xF3, 0x13, 0xCA, 0x14, 0x3C, 0x9B, 0xE4, 0x45, 0x3C, 0xFE, 0x86, 0x2A, 0xBD, 0xFA, 0x65, 0x7E, 0x3E, 0xDB, 0xDE, 0xD1, 0xEF, 0x73, 0xE1, 0x10, 0xF2, 0x4F, 0x51, 0xF6, 0x97, 0x3B, 0x81, 0x10, 0x45, 0x5F, 0x92, 0xE2, 0x51, 0xE3, 0xB5, 0x6A, 0xF8, 0xB8, 0xDD, 0xB3, 0xCC, 0x17, 0xAD, 0xB1, 0x37, 0x9B, 0xDB, 0x1C, 0x1C, 0x57, 0x00, 0x39, 0xA2, 0xD4, 0xE6, 0x36, 0xC8, 0x27, 0x36, 0x26, 0x1D, 0x56, 0x83, 0xD6, 0x2B, 0x38, 0xDB, 0x59, 0x8D, 0x47, 0x7B, 0xD6, 0xA8, 0xAE, 0xA1, 0x55, 0x33, 0x0D, 0x39, 0x96, 0x1F, 0x6B, 0x9C, 0x08, 0x4D, 0x73, 0x10, 0x74, 0x0D,  };

// Function: Xoroshiro128+ 64 RNG generate: sec_r64_f.
#define XSHIRG64 b7471d7b
#define XSHIRG64_KEY b37f70076
static uint64_t XSHIRG64_KEY = (0x4EA684F2U);
static uint8_t XSHIRG64[] = { 0xAA, 0x48, 0x2E, 0x78, 0xC0, 0x0E, 0x85, 0xC4, 0x32, 0xEE, 0xEB, 0x84, 0x32, 0x92, 0x87, 0xB5, 0x40, 0x8D, 0xEA, 0x74, 0xC7, 0x1D, 0x4C, 0x4F, 0x31, 0xB1, 0xBC, 0xB9, 0x7D, 0x46, 0x51, 0x66, 0x40, 0x4A, 0xBB, 0x17, 0x30, 0x35, 0xDB, 0x76, 0xE8, 0x0B, 0xB5,  };

// Function: XorShift1024* 64 RNG seed: sec_srs_f.
#define XSFSSR64 fa560c8b
#define XSFSSR64_KEY a182d5ffd
static uint64_t XSFSSR64_KEY = (0xA86899F1U);
static uint8_t XSFSSR64[] = { 0x31, 0xD9, 0x96, 0x2B, 0x42, 0xC3, 0xC9, 0x6A, 0xFA, 0xE4, 0x5C, 0xEC, 0x4A, 0x09, 0xA0, 0xE1, 0xC0, 0x5A, 0x8F, 0x7B, 0x51, 0x1C, 0x48, 0x04, 0x49, 0xDF, 0xEB, 0x3B, 0x00, 0xA7, 0xE2, 0x7E, 0x00, 0x5D, 0x73, 0xCA, 0xFC, 0x03, 0x4E, 0xD0, 0x6E, 0xEA, 0x22, 0xD1, 0xB2, 0xD0, 0x59, 0xEE, 0xF2, 0x29, 0x39, 0xCA, 0x0B, 0xFA, 0x5D, 0xF8, 0x42, 0x2A, 0x3F, 0xF8, 0xE2, 0xAC, 0x09, 0xC6, 0x78, 0x1D, 0x2E, 0x99, 0xCF, 0x85, 0x0C, 0x88, 0xF9, 0xB2, 0x83, 0x95, 0xDA, 0x95, 0xE7, 0x1E, 0x3A, 0x6F, 0xBA, 0x0E, 0x95, 0xD9, 0x36, 0x14, 0x00, 0xE2, 0x1E, 0x57, 0x85, 0x04, 0x5D, 0x77, 0xB7, 0xD8, 0x09, 0x81, 0x4C, 0x9D, 0x9A, 0x2A, 0x1C, 0xEB, 0xF2, 0xC3, 0xCA, 0xAF, 0x48, 0x5A, 0x84, 0xFA, 0xF4, 0x97, 0x73, 0x4B, 0x2F, 0x64, 0xA8, 0x92, 0x23, 0xDA, 0xEA, 0x15, 0x7F, 0xE2,  };

// Function: XorShift1024* 64 RNG generate: sec_r64_f.
#define XSFSRG64 ad7c61ce
#define XSFSRG64_KEY ce3d3195f
static uint64_t XSFSRG64_KEY = (0x4C8DF506U);
static uint8_t XSFSRG64[] = { 0x22, 0x94, 0x42, 0xC4, 0x84, 0xF7, 0x20, 0x27, 0x4E, 0xDC, 0x8F, 0x1E, 0xA5, 0x41, 0x39, 0x82, 0x59, 0x75, 0x4B, 0xD1, 0x1B, 0xD8, 0xB8, 0xCA, 0x13, 0xB5, 0x7B, 0xC4, 0xB6, 0x21, 0xB5, 0xA3, 0x1A, 0xFF, 0xF8, 0x7F, 0x34, 0x7B, 0xF6, 0x86, 0xA4, 0x56, 0x09, 0xA1, 0xE0, 0xE1, 0xA0, 0x3A, 0xAC, 0xB6, 0x53, 0xAB, 0x6D, 0x03, 0xD0, 0x19, 0xAA, 0x25, 0x46, 0x05, 0xA7, 0x82, 0xCC, 0x92, 0x11, 0x12, 0x9C, 0xB0, 0x03, 0x36, 0x25, 0x16, 0x82, 0xE5, 0x4F, 0x1D, 0x92, 0x9C, 0x70, 0x8D, 0x86, 0xC1, 0x0D,  };

// Function: Mersenne Twister 19937 64 RNG seed: sec_srs_f.
#define MERSSR64 fdd6b54e
#define MERSSR64_KEY a7ba2117c
static uint64_t MERSSR64_KEY = (0x1628DD57U);
static uint8_t MERSSR64[] = { 0xAF, 0xB9, 0xC9, 0xED, 0x14, 0x09, 0xC7, 0x98, 0xA1, 0x4E, 0x72, 0x1E, 0x32, 0x37, 0xA6, 0x59, 0xE5, 0x70, 0xD4, 0xB1, 0x56, 0x69, 0xEB, 0x8D, 0x35, 0x06, 0x75, 0xE4, 0xF0, 0xCA, 0x8F, 0x84, 0x4E, 0xFB, 0xD0, 0x68, 0x02, 0xB4, 0x0C, 0xB7, 0x4B, 0x56, 0x97, 0xD4, 0x0C, 0xBF, 0xDD, 0xFC, 0xCC, 0xB9, 0x8F, 0x7A, 0xF1, 0xD7, 0x7E, 0x72, 0x4C, 0x49, 0x92, 0x74, 0xCB, 0xA6, 0x0E, 0xAF, 0x75, 0x0D, 0x6F, 0x46, 0xD4, 0x72, 0x13, 0x25,  };

// Function: Mersenne Twister 19937 64 RNG generate: sec_r64_f.
#define MERSRG64 d50f68b7
#define MERSRG64_KEY c6d4bdcca
static uint64_t MERSRG64_KEY = (0x7869372AU);
static uint8_t MERSRG64[] = { 0xF6, 0x38, 0x2B, 0xF4, 0xEB, 0x07, 0x4C, 0xDE, 0xF1, 0x4B, 0xD8, 0xEE, 0x5B, 0x67, 0xAE, 0xB1, 0x6D, 0x98, 0xC3, 0x74, 0x26, 0xCD, 0xED, 0x6C, 0x53, 0xD1, 0x2F, 0x7F, 0x03, 0x3C, 0x23, 0x66, 0x64, 0x43, 0x3E, 0x13, 0x11, 0xFB, 0x67, 0x6E, 0x38, 0x02, 0x0E, 0xF0, 0xDE, 0xA6, 0x1C, 0x1F, 0xED, 0xD4, 0xC7, 0x3B, 0x02, 0x4B, 0x6F, 0xBB, 0xAA, 0xB3, 0x65, 0x2D, 0xA3, 0x35, 0xC7, 0x47, 0x77, 0x97, 0x49, 0x9D, 0x93, 0xBB, 0x69, 0xE7, 0x1E, 0x4A, 0x95, 0x42, 0xF2, 0x50, 0x41, 0x52, 0x2C, 0x9F, 0x4D, 0xB5, 0x6B, 0x42, 0x7C, 0x13, 0x62, 0xFB, 0xA0, 0x75, 0x42, 0x08, 0x92, 0xF8, 0x35, 0xD3, 0xC5, 0xEA, 0x94, 0xC0, 0x3D, 0xCC, 0x11, 0x34, 0xCE, 0x67, 0x88, 0xC4, 0xB4, 0xE3, 0xC8, 0xDB, 0x2B, 0xCC, 0x8E, 0x6C, 0x0B, 0x0C, 0x37, 0x0F, 0xFC, 0xB2, 0x14, 0xDA, 0xBD, 0xD9, 0x3F, 0x05, 0xC2, 0x25, 0x4D, 0x88, 0xF6, 0x3F, 0x94, 0x91, 0x43, 0x12, 0x46, 0x01, 0xFA, 0x6D, 0x48, 0x7A, 0xA9, 0x50, 0xF2, 0xDF, 0x73, 0x77, 0xEE, 0xBF, 0x8A, 0xC3, 0xC2, 0x50, 0x9F, 0x1D, 0xBE, 0x2F, 0x6E, 0x93, 0xCF, 0xD8, 0xBA, 0x92, 0x40, 0xE2, 0x12, 0xB9, 0xD6, 0x88, 0x8B, 0x79, 0xCB, 0x54, 0x9F, 0xA7, 0x8B, 0x1F, 0x72, 0xFE, 0xEC, 0xF2, 0x3E, 0xF3, 0x16, 0x1B, 0x93, 0x78, 0x68, 0xBE, 0x91, 0x72, 0x4C, 0xA8, 0x0B, 0xE0, 0xC6, 0x47, 0x1B, 0x0A, 0xF3, 0xC4, 0xCF, 0x0A, 0x12, 0xF6, 0x67, 0x47, 0xD1, 0x58, 0x67, 0x64, 0xBE, 0xBF, 0x86, 0x3A, 0x66, 0x1D, 0xE6, 0x78, 0xB5, 0xA0, 0x15, 0xE6, 0x02, 0x59, 0xFC, 0xE0, 0x87, 0x06, 0x51, 0x28, 0x89, 0x80, 0xF4, 0x99, 0x96, 0x49, 0x8A, 0xA7, 0x65, 0x77, 0xFE, 0x49, 0xB2, 0xA1, 0xF3, 0x13, 0x7F, 0x54, 0x34, 0xA7, 0xDD, 0x71, 0x95, 0xF9, 0xE3, 0x6C, 0xE6, 0x64, 0xFC, 0x2F, 0xB3, 0x58, 0xB1, 0x29, 0x79, 0xBA, 0xD0, 0x9B, 0xB6, 0x16, 0x03, 0xFD, 0x97, 0xD5, 0x0F, 0xD1, 0x6F, 0x81, 0x9E, 0xF0, 0xE1, 0x87, 0xA1, 0x0F, 0x8B, 0x47, 0x29, 0x59, 0x24, 0x27, 0x63, 0x40, 0xA2, 0xA4, 0xE2, 0x5C, 0x54, 0x7D, 0xE1, 0xC4, 0x5B, 0x42, 0xE2, 0xE8, 0xC7, 0x4C, 0xE1, 0x1B, 0xD4, 0xD3, 0x1E, 0xAF, 0x09, 0x11, 0x30, 0xEB, 0x06, 0x8A, 0x0B, 0xDB, 0x4A, 0x38, 0xE2, 0x2A, 0x9A, 0x19, 0x41, 0x88, 0x1B, 0x92, 0x0F, 0xB3, 0x11, 0x49, 0x8D, 0x0F, 0x1E, 0xA9, 0x14, 0x7B, 0xF1, 0x51, 0xF4, 0x6C, 0xCC, 0x2A, 0x22, 0x0E, 0x01, 0x3A, 0x13, 0x68, 0x00, 0xA7, 0x7A, 0x1E, 0x30, 0x42, 0xD7, 0x59, 0xBC, 0x51, 0xE8, 0xAA, 0xAB, 0x73, 0xB8, 0x59, 0xB9, 0x4E, 0x2E, 0x1F, 0x39, 0xCE, 0x33, 0x08, 0x5F, 0xC4, 0xBF, 0x7F, 0xE8, 0xB0, 0x4E, 0x88, 0x6A, 0x4B, 0x76, 0x4D, 0xA2, 0x64, 0x4C, 0x39, 0x38, 0x66, 0xBD, 0x56, 0x3A, 0xEA, 0xC7, 0x2D, 0xE4, 0xCA, 0x24, 0x00, 0xA0, 0x13, 0x3D, 0x6D, 0xC1, 0x42, 0x65, 0x38,  };

// Function: Rand 48 32 RND seed: sec_srs_f.
#define RANDSR48 fe854233
#define RANDSR48_KEY eac5b12de
static uint64_t RANDSR48_KEY = (0x421F7CD6U);
static uint8_t RANDSR48[] = { 0xB2, 0xC2, 0xB1, 0x2D, 0x8F, 0xB3, 0x35, 0xE1, 0x53, 0xEE, 0x59, 0x6C, 0xDB, 0xAD, 0x0F, 0x89, 0xC3, 0xC1, 0x1E, 0xE4, 0xE1, 0x7F, 0x88, 0x40, 0xD1, 0xB9, 0x4D, 0x2C, 0x04, 0xB9, 0xCC, 0xD2, 0x7F, 0x17, 0xBD, 0xF6, 0x5C, 0x44, 0x21, 0x17, 0xF4, 0xCD,  };

// Function: Rand 48 32 RND generate: sec_r32_f.
#define RANDRG48 b1335723
#define RANDRG48_KEY cc046a7ed
static uint64_t RANDRG48_KEY = (0xD4CA9169U);
static uint8_t RANDRG48[] = { 0xD5, 0x9D, 0xE5, 0x0A, 0xEA, 0x8D, 0x39, 0xA2, 0xC5, 0x2E, 0x2C, 0x92, 0xFD, 0x90, 0x43, 0x99, 0x22, 0x53, 0x0E, 0x22, 0x80, 0x06, 0xCD, 0x22, 0x0A, 0x6C, 0x97, 0x6B, 0x63, 0xB9, 0xE5, 0x26, 0xAC, 0x51, 0x88, 0xC9, 0xF2, 0x32, 0xB7, 0x55, 0xEF, 0xF1, 0xB8, 0xB6, 0xDA, 0xF6, 0xA4, 0x87, 0xAB, 0x98, 0x1E, 0x68, 0x4C, 0xB0, 0xDD, 0x84, 0x54, 0xA8, 0x19, 0x64, 0x44, 0xAF, 0xD6, 0x77, 0x4D, 0x61, 0x7B, 0x04, 0x62, 0x69, 0x7D, 0x38, 0x8A, 0x69, 0x49, 0x5C, 0xAC, 0x68, 0xD6, 0xE4, 0x9B, 0x96, 0x82, 0x36, 0x26, 0x08, 0x1A, 0xE3, 0xA2, 0x3D, 0x0E, 0xA4, 0x67, 0x89, 0xA9, 0xB4, 0x00, 0xC9, 0xB1, 0x10, 0x1E, 0x1B, 0x9D, 0xAA, 0x6A, 0x6D, 0x91, 0x3A, 0xAC, 0x29, 0xDB, 0xF4, 0xD5, 0x62, 0x0C, 0x72, 0xCB, 0x16, 0x2E, 0xA7, 0xFA, 0x05,  };

// Function: Compress data: sec_cpr_f. Needs pointer to buffer of size COMPHTAB.
#define COMPRESS a91aac19
#define COMPRESS_KEY c42c84127
static uint64_t COMPRESS_KEY = (0x4C1AE83EU);
static uint8_t COMPRESS[] = { 0x0E, 0x66, 0xAF, 0x64, 0x7F, 0x66, 0x48, 0x0E, 0xDA, 0xC0, 0x6E, 0xD6, 0x71, 0xD6, 0x87, 0x01, 0x04, 0xB8, 0x6A, 0xE4, 0xFB, 0x0C, 0x82, 0xB1, 0x57, 0x22, 0x3A, 0x4B, 0x47, 0x30, 0xC1, 0xFE, 0x30, 0xA0, 0xE7, 0xC8, 0xD7, 0x68, 0x4F, 0x4F, 0xB6, 0xF3, 0xB2, 0xED, 0xA2, 0xFF, 0x24, 0x3B, 0x50, 0x3E, 0xD7, 0x74, 0x57, 0x8F, 0x0B, 0x7E, 0x8A, 0x2A, 0x5C, 0x48, 0x36, 0x60, 0xEF, 0xF7, 0x8F, 0xDE, 0x21, 0x7A, 0xFF, 0x8E, 0x8D, 0x1D, 0x58, 0xE9, 0xD7, 0x2D, 0x8F, 0x58, 0xD3, 0x7E, 0x11, 0xBA, 0x38, 0xBF, 0xB2, 0xEB, 0xBD, 0x41, 0xF8, 0xEC, 0xEC, 0x71, 0xCB, 0x79, 0x80, 0x79, 0x13, 0xC4, 0x36, 0xB4, 0xD5, 0xD3, 0xE0, 0xAE, 0x14, 0x20, 0xBE, 0x2D, 0x36, 0x2B, 0x0B, 0xDC, 0x04, 0x08, 0xA8, 0x16, 0x0E, 0x2A, 0x52, 0xDE, 0x7C, 0x80, 0xB1, 0xE0, 0xA3, 0x16, 0xD8, 0x5D, 0x9A, 0x70, 0x52, 0x11, 0xE8, 0x45, 0x28, 0x87, 0xD7, 0x28, 0xEE, 0x37, 0x93, 0xA3, 0xDC, 0xB2, 0x79, 0x6C, 0xAA, 0x12, 0x7B, 0x10, 0xA4, 0xBF, 0x28, 0x2B, 0xA2, 0x8B, 0x87, 0xE9, 0xF9, 0x4D, 0xD8, 0x27, 0xC7, 0xA2, 0x49, 0x8F, 0x17, 0xD8, 0x18, 0x5B, 0x97, 0x4D, 0x05, 0xFF, 0x23, 0xDA, 0xFE, 0xD3, 0x42, 0x95, 0x73, 0x84, 0x83, 0xAF, 0xEC, 0xA6, 0x84, 0x83, 0xFC, 0x0F, 0x3D, 0x90, 0xAA, 0xC3, 0x7E, 0xDB, 0xFA, 0x33, 0xD3, 0xF4, 0xC6, 0xF5, 0x0B, 0x55, 0xF8, 0xF0, 0x72, 0xF7, 0xDD, 0xF9, 0x7C, 0x16, 0xAE, 0x38, 0x71, 0x89, 0x0B, 0x63, 0xE1, 0x19, 0x51, 0xE2, 0x5D, 0x12, 0x5E, 0x5C, 0x3A, 0x81, 0x7B, 0x0E, 0x18, 0xC5, 0x3C, 0xB2, 0x8F, 0xB0, 0x2E, 0x26, 0x95, 0x8E, 0xA9, 0xE7, 0xE5, 0xBB, 0x1A, 0x4F, 0xA0, 0x01, 0x42, 0x91, 0x90, 0x2D, 0x3A, 0x0C, 0x93, 0x3A, 0x52, 0xC6, 0x31, 0x3F, 0xEB, 0x07, 0xB6, 0xEA, 0x01, 0xE3, 0x73, 0x3D, 0x0F, 0x58, 0x00, 0x54, 0x1F, 0xDD, 0x48, 0xFE, 0x8F, 0x7E, 0x4D, 0x64, 0xF8, 0xEF, 0x1D, 0x93, 0x74, 0xAB, 0x41, 0xA2, 0x25, 0x02, 0xE8, 0x96, 0xE5, 0x84, 0x18, 0x59, 0xAD, 0x55, 0x48, 0x45, 0x43, 0x44, 0x74, 0x48, 0x59, 0x34, 0xA1, 0xDB, 0x9E, 0x15, 0xF1, 0x1C, 0xAA, 0xE7, 0x01, 0x2D, 0xE6, 0x23, 0xE5, 0x24, 0xF5, 0x60, 0x60, 0x55, 0x12, 0x06, 0x85, 0xDF, 0xCD, 0x5F, 0xA7, 0x3D, 0xDB, 0x12, 0xCC, 0x64, 0x8D, 0xE7, 0x35, 0x9D, 0xC0, 0xC3, 0x77, 0xBF, 0x1B, 0xA8, 0xC7, 0x2F, 0x8B, 0x6F, 0x45, 0xCE, 0x2F, 0x6E, 0x71, 0x06, 0x27, 0x04, 0x8B, 0xA4, 0xC4, 0xE3, 0xA8, 0x5F, 0x20, 0xCA, 0x7C, 0x16, 0xCA, 0x55, 0x8D, 0x8E, 0x16, 0x26, 0x95, 0x62, 0x5F, 0x8A, 0xEA, 0x59, 0x6F, 0xCB, 0xF0, 0x91, 0xB9, 0xC6, 0xF8, 0x98, 0x06, 0xF5, 0xCF, 0x93, 0xC8, 0x1F, 0xC3, 0x00, 0x2A, 0xA7, 0x42, 0x7B, 0x8F, 0xA5, 0x56, 0xB7, 0x28, 0x6F, 0x01, 0xEA, 0xDB, 0x97, 0x73, 0x33, 0x0B, 0xE6, 0xE4, 0xD2, 0x3A, 0xD4, 0x1F, 0xD5, 0x82, 0xC6, 0x91, 0xED, 0x63, 0x9A, 0xC6, 0x75, 0x4F, 0x6B, 0x11, 0xD0, 0x88, 0x96, 0x4D, 0x2E, 0x95, 0x82, 0x08, 0xC7, 0xA1, 0x46, 0xCE, 0x5D, 0x3F, 0xCB, 0xF2, 0xC4, 0xA2, 0x73, 0x4A, 0x39, 0x56, 0x9B, 0x14, 0xA6, 0x09, 0xF4, 0x75, 0x9B, 0xF4, 0xD3, 0x87, 0xF0, 0x64, 0x1C, 0x3F, 0x48, 0xEC, 0x0D, 0xA0, 0xE0, 0xA5, 0x18, 0xD1, 0x87, 0x2B, 0xB6, 0x5F, 0x10, 0x9F, 0xA1, 0x4A, 0x73, 0x4C, 0x92, 0xD3, 0xC8, 0xAF, 0xC1, 0x1D, 0x04, 0x22, 0xBA, 0xA9, 0x27, 0x71, 0xBC, 0x2C, 0xF0, 0x12, 0xBA, 0x89, 0xD9, 0x54, 0xDB, 0x8D, 0xF9, 0x28, 0x83, 0xC2, 0xDF, 0x81, 0xD2, 0x7A, 0x8C, 0xB1, 0x68, 0x5F, 0x85, 0x31, 0x3E, 0x3A, 0xE7, 0xE1, 0xC3, 0xC0, 0x36, 0xFA, 0x03, 0x51, 0x6F, 0x4E, 0xAB, 0x6B, 0x5C, 0xA0, 0xC0, 0x6E, 0x97, 0x81, 0xAA, 0x20, 0x17, 0xC5, 0xA8, 0x1F, 0x3D, 0x52, 0x50, 0x5D, 0xE8, 0x5F, 0xB7, 0x87, 0x0C, 0xCD, 0x4E, 0x99, 0x88, 0xDB, 0x92, 0x1E, 0x0A, 0xE1, 0x19, 0x2D, 0xC3, 0x05, 0x68, 0xBB, 0x14, 0xA5, 0x40, 0x22, 0xD4, 0x7B, 0x39, 0xD1, 0xE2, 0x85, 0x3A, 0x82, 0x7A, 0x16, 0x89, 0x44, 0x8C, 0xA6, 0xA9, 0x77, 0x8B, 0xAC, 0x91, 0x48, 0x22, 0xBA, 0xF6, 0x9E, 0xED, 0x8B, 0xF2, 0x25, 0xE1, 0xCD, 0x42, 0x36, 0x21, 0x07, 0x1E, 0x7A, 0xCC, 0x59, 0x6B, 0xA9, 0x40, 0x02, 0x64, 0x4A, 0x7E, 0xA2, 0xD3, 0x3F, 0xED, 0xA3, 0x83, 0x1E, 0x2A, 0x8D, 0x1F, 0x53, 0x5A, 0xA0, 0x0E, 0x39, 0x9C, 0xB7, 0x95, 0xC8, 0x39, 0x6E, 0xB9, 0x21, 0x40, 0xAF, 0x66, 0xD3, 0x28, 0x48, 0xC3, 0x80, 0xF3, 0xE9, 0x5A, 0x50, 0xD9, 0x47, 0x0A, 0xFA, 0xA8, 0x7B, 0x06, 0xB1, 0xE2, 0x84, 0x9A, 0xDC, 0x7D, 0x2E, 0x4B, 0xC9, 0x1F, 0xAB, 0xB1, 0x20, 0x9D, 0x69, 0x89, 0x12, 0x89, 0x3A, 0x15, 0xAC, 0xD5, 0xC6, 0x2E, 0xFB, 0x8E, 0x98, 0xE9, 0xA2, 0xC1, 0x2A, 0x4A, 0x2E, 0x58, 0x98, 0xBB, 0x56, 0x0E, 0xC0, 0x65, 0x66, 0xF8, 0x03, 0xE6, 0x5C, 0x21, 0x8D, 0xEF, 0x3F, 0xF2, 0xC1, 0x20, 0x1E, 0xA7, 0x13, 0x03, 0x16, 0xA1, 0x53, 0x92, 0x6E, 0x9F, 0x97, 0x17, 0x4F, 0x6B, 0xA6, 0x96, 0x85, 0xC8, 0x35, 0x97, 0xDA, 0xF8, 0x34, 0x8B,  };

// Function: Decompress data: sec_dcp_f.
#define DECOMPRS a355d53d
#define DECOMPRS_KEY bde915873
static uint64_t DECOMPRS_KEY = (0x79C9A127U);
static uint8_t DECOMPRS[] = { 0x3F, 0x09, 0xDC, 0x9D, 0xF4, 0x95, 0xC0, 0x28, 0xFD, 0x5B, 0x92, 0xA3, 0x49, 0x76, 0xBE, 0x38, 0x92, 0x8C, 0x6F, 0x51, 0xE2, 0xA7, 0x1F, 0xCD, 0xB4, 0x25, 0x69, 0xE0, 0x31, 0xAB, 0x72, 0xE5, 0xDA, 0x49, 0xFC, 0x44, 0xCA, 0xC1, 0xD5, 0xF3, 0xB6, 0xFF, 0xBC, 0x45, 0x99, 0x51, 0xB1, 0xDC, 0x59, 0x83, 0xF9, 0xFC, 0x50, 0x6C, 0x4A, 0xD9, 0x36, 0xC4, 0xA6, 0x46, 0x47, 0x8A, 0x47, 0xCE, 0xEF, 0x15, 0xA3, 0x53, 0x68, 0xC0, 0x6E, 0x92, 0x28, 0x1E, 0x32, 0xDE, 0xF4, 0xF1, 0x3C, 0xBD, 0xB5, 0x84, 0xE6, 0x41, 0xC1, 0x8D, 0x03, 0xD9, 0xDA, 0xAD, 0x75, 0x92, 0xE8, 0xB5, 0x68, 0x09, 0x92, 0x85, 0xB8, 0xD4, 0xD1, 0xC6, 0xC0, 0xA0, 0xEC, 0x19, 0xCE, 0x49, 0xB6, 0x68, 0x8F, 0xD0, 0xF5, 0xEF, 0x34, 0xD8, 0x5B, 0x85, 0x3C, 0x5D, 0xA0, 0xBC, 0xF6, 0x92, 0xA7, 0xE4, 0xF0, 0x1F, 0x70, 0x0B, 0xD2, 0x4B, 0x55, 0x04, 0xA5, 0x2C, 0x43, 0xB2, 0x84, 0xB2, 0x43, 0xB6, 0x0B, 0xE2, 0x89, 0xF2, 0x14, 0xEE, 0xBC, 0x32, 0x7E, 0x87, 0xA0, 0x60, 0xC6, 0x26, 0xD6, 0x5B, 0x65, 0xAB, 0x2C, 0x9C, 0xCA, 0x60, 0xF2, 0x6E, 0x22, 0xE8, 0x01, 0x0F, 0x8C, 0x67, 0xCF, 0xBB, 0xF2, 0x7B, 0x89, 0x02, 0x1D, 0x24, 0x8D, 0xE3, 0xAB, 0x3A, 0x0A, 0xDD, 0x7C, 0x07, 0xD7, 0x85, 0xEB, 0x91, 0xDF, 0x4E, 0xF0, 0xEE, 0xC8, 0x39, 0x43, 0x0F, 0xEB, 0x42, 0x69, 0x3E, 0xDF, 0x81, 0xE7, 0x32, 0x41, 0xC6, 0x5B, 0x24, 0x67, 0x39, 0x06, 0xCD, 0x92, 0x28, 0x35, 0xEC, 0x74, 0x74, 0x3E, 0xCA, 0x51, 0x2A, 0x76, 0xEB, 0x1A, 0x0B, 0xE6, 0x39, 0xA2, 0x23, 0x09, 0xDD, 0xD9, 0x0B, 0x86, 0xAC, 0x56, 0xB7, 0x1E, 0xB8, 0x13, 0xFB, 0x25, 0x86, 0xD9, 0x4D, 0xBF, 0xB8, 0x52, 0xA6, 0x0D, 0x30, 0x0E, 0x5C, 0x80, 0x79, 0xBA, 0xE8, 0x4A, 0x00, 0x9C, 0x6B, 0x12, 0x40, 0xDA, 0xBF, 0x3D, 0x8E, 0x65, 0xE4, 0x7E, 0x7C, 0x9C, 0xD0, 0x9E, 0x48, 0x31, 0x37, 0xF9, 0xFE, 0x0A, 0x73, 0xBE, 0x47, 0xF1, 0x82, 0x6C, 0x92, 0xC8, 0x82, 0x7E, 0xD8, 0xF9, 0xC8, 0xAD, 0xCF, 0x1A, 0x0E, 0x55, 0xD5, 0x6B, 0x92, 0x76, 0x10, 0xA2, 0x36, 0x88, 0x37, 0xE6, 0x3F, 0x95, 0xDA, 0xEF, 0x0B, 0x6A, 0x0C, 0x62, 0x7A, 0x99, 0x73, 0x4C, 0xB8, 0xB0, 0x7A, 0x7E, 0xA5, 0x95, 0x50, 0xBE, 0xDB, 0xDC, 0xFC, 0x0A, 0xF0, 0x29, 0x96, 0x05, 0x5A, 0xBB, 0x42, 0x61, 0xF3, 0x73, 0xCB, 0xB2, 0xEB, 0x4E, 0x7F, 0xD7, 0x28, 0x2D, 0x76, 0x75, 0x18, 0x98, 0xB4, 0xD6, 0x59, 0x71, 0x0F, 0xB3, 0x6E, 0x68, 0xC1, 0xD9, 0xEE, 0x09, 0x0F, 0xED, 0x55, 0x69, 0x9A, 0x5B, 0x7B, 0xB9, 0x76, 0x28, 0xA5, 0xED, 0x28, 0x4E, 0x56, 0x83, 0x26, 0x4A, 0x8E, 0x5A, 0xAE, 0x51, 0x85, 0x60, 0xB8, 0x21, 0x71, 0xC2, 0x2F, 0x81, 0xC0, 0x79, 0xEE, 0x8B, 0x87, 0x95, 0x29, 0x0D, 0xD5, 0x61, 0x4E, 0x50, 0x1D, 0xE6, 0x09, 0xB9, 0xF6, 0xAB, 0x7A, 0x53, 0xAE, 0x60, 0x66, 0xCA, 0x67, 0xE8, 0x6D, 0xF8, 0xB0, 0x0C, 0x09, 0xFF, 0x7B, 0x44, 0x54, 0xC8, 0x20, 0x84, 0x73, 0x30, 0x3C, 0x3B, 0x17, 0x6A, 0x10, 0x3B, 0x99, 0x0F, 0x2F, 0x87, 0x03, 0xBD, 0x46, 0xC2, 0xA4, 0xA8, 0xE4, 0x56, 0x97, 0x7B, 0x95, 0xC2, 0x52, 0x2A, 0x0C, 0xD8, 0x1B, 0x22, 0x58, 0x5B, 0xC9, 0x62, 0xB0, 0x64, 0x9E, 0xD1, 0xFC, 0x01, 0xB2, 0x26, 0xDA, 0xDE, 0xEF, 0x54, 0x83,  };

// Data: CRC 32-Bit LUT Used by CRC32FUN.
#define CRC32TAB b92484cc
#define CRC32TAB_KEY b23ef0ac
static uint64_t CRC32TAB_KEY = (0xB2292F99U);
static uint8_t CRC32TAB[] = { 0x0D, 0x42, 0x42, 0x4B, 0x16, 0x20, 0xE0, 0x11, 0x4D, 0x65, 0x3C, 0xCE, 0xC2, 0x13, 0x20, 0xAC, 0xF5, 0x1A, 0x3A, 0xFE, 0x5E, 0x0B, 0x64, 0x9E, 0x0A, 0x29, 0x67, 0x51, 0xF2, 0x27, 0x66, 0x32, 0x82, 0xB0, 0xB2, 0x29, 0x0A, 0xCF, 0x2E, 0x9D, 0x25, 0xF7, 0x80, 0x59, 0xDA, 0x76, 0xFE, 0x1C, 0x8C, 0x63, 0x06, 0x2D, 0xFF, 0x3B, 0xF5, 0x8C, 0xF3, 0x5D, 0x65, 0xA7, 0xE2, 0xC1, 0x4C, 0xD1, 0x29, 0x7A, 0xD4, 0x4B, 0x57, 0xDF, 0x6C, 0xD8, 0x90, 0x10, 0xE2, 0xC5, 0xC9, 0x2D, 0xB6, 0x6B, 0x04, 0x73, 0xA9, 0x13, 0x44, 0x12, 0xE1, 0x59, 0xBD, 0x5A, 0x0A, 0xA0, 0x21, 0x58, 0x58, 0x34, 0xC3, 0x09, 0x12, 0x9D, 0xDC, 0x04, 0xB2, 0xF8, 0x18, 0xA6, 0x7B, 0x7A, 0xEE, 0xA2, 0xC0, 0xA7, 0x8E, 0xD4, 0x63, 0xA7, 0x6E, 0x7F, 0x42, 0xD2, 0xC8, 0x15, 0xF2, 0xB5, 0x8B, 0xCC, 0xB2, 0xC1, 0x94, 0x43, 0x12, 0x36, 0x40, 0xA6, 0x37, 0xA0, 0x06, 0x5B, 0x9C, 0x89, 0x78, 0xAA, 0xF4, 0xFB, 0xAC, 0xE9, 0xDC, 0xBA, 0x0D, 0x14, 0xFF, 0x36, 0xCC, 0x1F, 0xA5, 0x75, 0x11, 0x8D, 0xAA, 0x17, 0x08, 0x16, 0xCD, 0x0F, 0x02, 0xFD, 0x05, 0xA0, 0x8F, 0x9E, 0x84, 0xCC, 0x2A, 0x1A, 0x6B, 0xD0, 0xAA, 0xCD, 0x7C, 0x53, 0x59, 0xBF, 0x7F, 0x76, 0x8E, 0x56, 0x54, 0xE1, 0x6E, 0x37, 0x19, 0x3A, 0xCF, 0x64, 0xFB, 0x47, 0xCC, 0x6D, 0xA2, 0xA9, 0x3D, 0x3F, 0x2B, 0x9E, 0x0E, 0x8D, 0x3B, 0xE9, 0xEB, 0x71, 0x9A, 0x10, 0x31, 0xF1, 0xFB, 0x8C, 0x89, 0x7B, 0xB1, 0xC5, 0xE8, 0x96, 0x5D, 0x87, 0x1C, 0xF7, 0xB4, 0x8F, 0x54, 0x1A, 0xD7, 0x05, 0xCF, 0xDE, 0xD5, 0xE4, 0xD2, 0x46, 0xEA, 0x07, 0xD0, 0xC6, 0x87, 0xE4, 0x26, 0x23, 0xEB, 0x94, 0x74, 0xAE, 0x3A, 0xB6, 0xC8, 0x12, 0xEC, 0x74, 0x61, 0x85, 0x91, 0xD3, 0xA3, 0x8D, 0x8D, 0x6F, 0x9E, 0x2A, 0x8A, 0x09, 0x5B, 0x53, 0xA6, 0x38, 0x7B, 0x66, 0xDA, 0x78, 0x4C, 0xAB, 0x37, 0x5F, 0x1E, 0xEF, 0xEF, 0x78, 0xDF, 0xCA, 0x7C, 0xC5, 0x8C, 0xB4, 0x77, 0xAC, 0xA6, 0xBC, 0x59, 0x9C, 0x0C, 0x09, 0x56, 0xA2, 0x2A, 0xBF, 0x03, 0xED, 0xB4, 0xAE, 0x4F, 0x8F, 0xEA, 0x32, 0xC7, 0x63, 0x06, 0x6E, 0x14, 0xBC, 0x24, 0xBC, 0x88, 0xE3, 0x52, 0x47, 0x2E, 0x82, 0x15, 0xB0, 0x14, 0xAC, 0x38, 0x5F, 0x9E, 0x85, 0x62, 0xFA, 0xD9, 0x94, 0xFF, 0x17, 0xD9, 0x6E, 0x9B, 0x40, 0x90, 0x73, 0x68, 0x9B, 0xE1, 0x9A, 0xCD, 0x13, 0xAB, 0x29, 0xDB, 0xF2, 0x65, 0xE2, 0xFB, 0x62, 0x48, 0x90, 0x7A, 0x36, 0xDB, 0xBF, 0xA1, 0x14, 0x12, 0x89, 0xDF, 0x37, 0x39, 0x04, 0x2C, 0x99, 0x71, 0xC4, 0xA4, 0x46, 0xF0, 0xAF, 0x7A, 0x32, 0xD3, 0xA1, 0xC1, 0xB9, 0x7B, 0xDC, 0x69, 0xA0, 0x1C, 0x6C, 0x03, 0xBB, 0xC5, 0x2A, 0xCC, 0x69, 0x34, 0x2D, 0x2B, 0x67, 0xD6, 0x1E, 0x35, 0x71, 0x02, 0xC2, 0x12, 0x3F, 0x47, 0xCE, 0x36, 0x47, 0x79, 0xA3, 0x93, 0x68, 0xAD, 0xAD, 0xB9, 0xAC, 0x78, 0x8E, 0xCB, 0xEE, 0xF3, 0x4F, 0x30, 0x35, 0xF8, 0x53, 0xD0, 0x8F, 0xCC, 0xAC, 0x30, 0x60, 0x13, 0x6F, 0x66, 0x26, 0xEF, 0x09, 0xA6, 0xF4, 0x1D, 0x22, 0x74, 0xE3, 0x90, 0xD8, 0x58, 0x34, 0x85, 0x43, 0x07, 0xBF, 0x3F, 0x34, 0x22, 0xB8, 0x56, 0x00, 0x62, 0x97, 0xA3, 0x7D, 0x43, 0x86, 0x6C, 0x70, 0xAC, 0x7A, 0x40, 0xC9, 0xF2, 0x3E, 0xA7, 0xCA, 0x12, 0xCE, 0x61, 0x9E, 0x6A, 0xBA, 0x29, 0xDF, 0x2F, 0x0F, 0x1F, 0xB2, 0xE5, 0xEA, 0x65, 0xFB, 0x8D, 0x87, 0x87, 0x22, 0x1E, 0xFF, 0x42, 0x8D, 0x15, 0xBD, 0xA1, 0x16, 0x8F, 0x02, 0x37, 0x4A, 0x82, 0xCD, 0x91, 0xCE, 0x85, 0x15, 0xA8, 0x88, 0x82, 0x64, 0xCE, 0xAC, 0xAC, 0x97, 0xBD, 0x28, 0x24, 0xE6, 0x32, 0x76, 0x1C, 0x86, 0x1E, 0x11, 0x56, 0xE9, 0xAE, 0x5B, 0xBD, 0xB2, 0xC6, 0xDB, 0x32, 0xBC, 0xFC, 0x64, 0x6F, 0x6D, 0xA5, 0xB8, 0x2B, 0x94, 0xAC, 0x82, 0x9E, 0xBC, 0xD8, 0x31, 0x59, 0xEE, 0x21, 0xDA, 0xEC, 0x61, 0xA0, 0xCD, 0x31, 0x3C, 0x75, 0xB6, 0xB2, 0x5F, 0x55, 0xF0, 0x3E, 0x08, 0x7C, 0x75, 0x76, 0x69, 0x32, 0xF4, 0xE5, 0x51, 0x0F, 0x69, 0xF9, 0xC7, 0xED, 0x7D, 0x47, 0xB6, 0x99, 0xC9, 0x92, 0x0B, 0x3E, 0x21, 0xAA, 0x5C, 0xA9, 0xB8, 0x04, 0x49, 0x72, 0xA2, 0xDE, 0x7B, 0xBA, 0x8C, 0xBE, 0x03, 0x37, 0x4C, 0xE0, 0x05, 0x02, 0xD7, 0x85, 0x8A, 0xD4, 0xDC, 0xB1, 0x55, 0x62, 0x08, 0x0C, 0xC7, 0x91, 0xF3, 0x45, 0x3B, 0xC2, 0xD4, 0xD9, 0xEC, 0x7D, 0x34, 0x8E, 0xD2, 0x14, 0xFE, 0x77, 0x56, 0xF5, 0x1F, 0x9D, 0xA7, 0x22, 0xBF, 0xBD, 0x53, 0x05, 0x2B, 0xCA, 0xE9, 0x04, 0xD6, 0x70, 0x5B, 0xAF, 0x59, 0x4D, 0x9B, 0x1C, 0x5F, 0x8A, 0x1C, 0x46, 0x83, 0x2F, 0xC6, 0xFC, 0x7E, 0x4A, 0x1E, 0x82, 0x9B, 0xEB, 0x7A, 0x94, 0xFD, 0xAB, 0x54, 0x18, 0x59, 0xE3, 0x0C, 0x88, 0x08, 0x8E, 0xD1, 0x32, 0x73, 0x5C, 0x31, 0xAE, 0x9C, 0x8B, 0xA9, 0xAC, 0xB1, 0xC4, 0x75, 0x19, 0xA1, 0x31, 0x30, 0x58, 0x89, 0x54, 0x84, 0xCA, 0x36, 0xE2, 0x93, 0xE4, 0x2B, 0xC7, 0x30, 0x04, 0x26, 0x27, 0xDF, 0xC1, 0xE8, 0xF6, 0x31, 0x2E, 0x01, 0xE1, 0x43, 0x24, 0x85, 0xFD, 0xA5, 0xEC, 0x22, 0x04, 0x5E, 0x5E, 0x4C, 0x23, 0xE0, 0x6C, 0xB5, 0xC1, 0x1A, 0x66, 0x1C, 0x9B, 0x43, 0xD2, 0xED, 0x9B, 0x3F, 0x24, 0x8A, 0xEA, 0x07, 0x96, 0x7D, 0x96, 0xEE, 0xC6, 0xEC, 0x1B, 0x79, 0xCA, 0xE6, 0x4B, 0xD9, 0xDC, 0xFD, 0x49, 0x22, 0x41, 0x17, 0x9A, 0x6C, 0x0F, 0xC4, 0x9D, 0x7A, 0x38, 0x28, 0x1E, 0xDE, 0x72, 0x8E, 0x7A, 0xB7, 0x5E, 0x5A, 0xF4, 0x3D, 0x3B, 0xF5, 0xB7, 0xC8, 0xAE, 0xB8, 0x98, 0x99, 0xEA, 0x47, 0x6C, 0xFE, 0xE9, 0xE7, 0xC6, 0x7D, 0xC5, 0x8E, 0x8A, 0x22, 0xC0, 0xB4, 0xDD, 0x10, 0x06, 0x88, 0xAE, 0x75, 0x9C, 0x64, 0x6C, 0xC2, 0xE9, 0x09, 0x6C, 0x3C, 0xC0, 0x7C, 0xE4, 0xAB, 0x43, 0xCF, 0x45, 0x88, 0xCC, 0xCE, 0x54, 0xEC, 0x7A, 0xBE, 0xFD, 0x2D, 0x12, 0x2C, 0x27, 0xD1, 0x57, 0x42, 0x00, 0x65, 0x2A, 0x8A, 0x50, 0xAC, 0xAA, 0x67, 0xDD, 0x0C, 0x61, 0x09, 0x3F, 0xA9, 0xE1, 0xF4, 0x82, 0xAC, 0xFA, 0x3B, 0x33, 0xBB, 0x1C, 0x37, 0x0C, 0x70, 0x94, 0x49, 0xFE, 0x99, 0x3B, 0x3D, 0x00, 0x13, 0x5E, 0x05, 0x9A, 0x9A, 0x74, 0x94, 0x21, 0xE0, 0xE5, 0x8C, 0x53, 0xC8, 0xA6, 0xAA, 0x84, 0x2E, 0xB3, 0x58, 0xA0, 0xF9, 0xED, 0xB5, 0xA6, 0x6F, 0x20, 0xDA, 0x3F, 0xE0, 0x5B, 0xF4, 0x6C, 0xF3, 0xA2, 0xB3, 0x65, 0x6E, 0xB1, 0x3C, 0x1C, 0x70, 0x77, 0x14, 0x50, 0x45, 0xDF, 0xF0, 0x47, 0x93, 0x7F, 0x28, 0xB2, 0xB6, 0xCC, 0x33, 0xF9, 0xF6, 0x0F, 0x71, 0xA8, 0x02, 0x5E, 0x1B, 0x79, 0xB9, 0x1D, 0xB4, 0xFC, 0xCE, 0xC8, 0x50, 0xC0, 0x04, 0xD5, 0xFA, 0x7D, 0x73, 0x27, 0x3B, 0x0E, 0x2D, 0xA7, 0x24, 0x15, 0x77, 0xA9, 0x6A, 0x30, 0x99, 0xB5, 0x33, 0x2D, 0x5B, 0x1E, 0x5C, 0xEE, 0x08, 0x47, 0xA5, 0xDB, 0x43, 0x51, 0x60, 0x2B, 0x54, 0xB1, 0xF5, 0x91, 0xB5, 0xF4, 0xDE, 0xEB, 0x39, 0x01, 0xAB, 0x89, 0x36, 0x94, 0xF8, 0xF2, 0x0C, 0xEA, 0x83, 0x8B, 0x43, 0xF5, 0x52, 0x54, 0x0E, 0x98, 0xC5, 0xCB, 0x76, 0x05, 0xD5, 0xFF,  };

// Function: CRC 32: sec_c32_f. Needs pointer to LUT referenced by CRC32TAB.
#define CRC32FUN e300852d
#define CRC32FUN_KEY cb7d21277
static uint64_t CRC32FUN_KEY = (0x92DB0F00U);
static uint8_t CRC32FUN[] = { 0x90, 0x0A, 0xCF, 0xD5, 0x70, 0xA8, 0x56, 0x9D, 0x01, 0x40, 0xF6, 0x78, 0x08, 0xFC, 0xD4, 0xCC, 0x42, 0x0D, 0x27, 0x39, 0xE9, 0xFE, 0x08, 0xFA, 0xFE, 0x3A, 0x3E, 0x78, 0x8A, 0x60, 0xC6, 0xFC, 0x9D, 0x49, 0xCC, 0x46, 0xB9, 0xD8, 0x58, 0x83, 0x1B, 0x09, 0x2F, 0x09, 0xEC, 0x0E, 0xE2, 0x74, 0x43, 0x19, 0xAA, 0x63, 0x4A, 0x34, 0x0F,  };

// Data: CRC 64-Bit LUT Used by CRC64FUN.
#define CRC64TAB c48d105b
#define CRC64TAB_KEY dba6034e0
static uint64_t CRC64TAB_KEY = (0xCCD3C6F5U);
static uint8_t CRC64TAB[] = { 0x2D, 0xFE, 0x4E, 0x67, 0x02, 0x32, 0x9C, 0xF2, 0x9F, 0x0C, 0xDC, 0x6C, 0x50, 0xD5, 0x65, 0x7B, 0x6A, 0xAD, 0x61, 0xCF, 0xD5, 0xE1, 0xEC, 0x25, 0xAD, 0xC3, 0x10, 0x9E, 0xDF, 0x11, 0x57, 0x3D, 0xC7, 0x88, 0x07, 0x96, 0x83, 0x02, 0x5A, 0xDD, 0xFE, 0x1A, 0x81, 0x80, 0x1D, 0x6F, 0x93, 0x90, 0x3A, 0xA0, 0x7C, 0x4F, 0x01, 0x06, 0xDD, 0x2C, 0x3D, 0xBB, 0xCB, 0x73, 0x5A, 0x38, 0xCD, 0x85, 0x90, 0x24, 0xC4, 0x70, 0x82, 0x45, 0x30, 0xEF, 0xAA, 0xE3, 0x3E, 0x40, 0xDA, 0x73, 0xB3, 0xE0, 0x2B, 0x26, 0xF6, 0xED, 0x6E, 0x78, 0x49, 0x3E, 0x82, 0x22, 0x01, 0x28, 0xAD, 0xE6, 0x69, 0x67, 0x96, 0x53, 0xC3, 0xFD, 0x7C, 0x49, 0xF6, 0x04, 0xAB, 0xD9, 0x6E, 0x74, 0x70, 0x33, 0x9D, 0x0F, 0x38, 0x0D, 0x75, 0x52, 0x31, 0xCA, 0x5A, 0x2E, 0x26, 0x61, 0x50, 0xF6, 0x42, 0xAD, 0x73, 0xC1, 0xC4, 0x28, 0x80, 0xFC, 0x5C, 0x8B, 0xFB, 0xD8, 0x0E, 0x1D, 0xE2, 0x3D, 0xEA, 0x5B, 0x01, 0xFF, 0x49, 0x89, 0x91, 0x3D, 0xB6, 0xD1, 0x4F, 0x86, 0x39, 0xEA, 0x4C, 0xCC, 0x4C, 0x8C, 0x0B, 0x8B, 0xD7, 0x71, 0x8E, 0xC6, 0x6B, 0x17, 0x59, 0x53, 0x0E, 0xD4, 0x13, 0x33, 0xDD, 0x3C, 0x36, 0x0F, 0xCE, 0x21, 0x88, 0xD7, 0x8F, 0xBD, 0x6F, 0xCD, 0xF2, 0x97, 0x44, 0x93, 0x0E, 0xE1, 0x28, 0x75, 0x64, 0x15, 0x7D, 0x5A, 0x59, 0xC0, 0x4E, 0x85, 0x95, 0xE3, 0x99, 0x35, 0x75, 0xF4, 0x5E, 0x39, 0x86, 0x03, 0xBB, 0x40, 0xE3, 0xBC, 0x9B, 0x38, 0xF4, 0x14, 0x44, 0xAB, 0x44, 0x17, 0x0C, 0xCF, 0xAB, 0x02, 0xF3, 0xD1, 0x94, 0x78, 0x33, 0xCA, 0x3E, 0x06, 0x46, 0xCC, 0xB4, 0xD8, 0x8F, 0x04, 0x04, 0xC8, 0x87, 0xBF, 0x99, 0xB9, 0xDB, 0x3B, 0x28, 0xFD, 0x06, 0x5B, 0xD1, 0x4C, 0x7D, 0xF7, 0x01, 0x0E, 0xA0, 0x3A, 0xB6, 0xF9, 0xD9, 0x6A, 0x30, 0x84, 0x7F, 0x56, 0x90, 0xFB, 0xCB, 0xC9, 0x30, 0x66, 0x7C, 0x94, 0xCE, 0x2F, 0xEF, 0xCA, 0x4D, 0xC2, 0xB5, 0x22, 0x83, 0x9A, 0x8D, 0xAC, 0x1D, 0xBB, 0xF7, 0x4E, 0xCE, 0x1F, 0x45, 0x42, 0x5B, 0x23, 0x82, 0xFE, 0xE4, 0xC8, 0x16, 0x7F, 0xFE, 0xAA, 0x18, 0xE8, 0x15, 0x61, 0x5F, 0x25, 0xBC, 0xC7, 0x67, 0xAD, 0x7D, 0x33, 0x61, 0x69, 0x97, 0x4E, 0xE3, 0x7C, 0xA9, 0x5C, 0x78, 0xCD, 0xDE, 0x6B, 0x67, 0x35, 0x58, 0xD2, 0xC4, 0x79, 0xBC, 0x85, 0x5B, 0x9D, 0xB0, 0x44, 0x88, 0xEA, 0xE3, 0x2C, 0x97, 0x07, 0x20, 0xC3, 0xEA, 0x5C, 0xA2, 0x67, 0xE1, 0x8F, 0x3A, 0x59, 0x6C, 0x92, 0x95, 0x06, 0xF3, 0x4C, 0xEE, 0xE3, 0x3F, 0x67, 0x45, 0x21, 0x72, 0x74, 0x1A, 0x5A, 0x99, 0x9E, 0x2E, 0xFD, 0x6F, 0xA9, 0x8A, 0x35, 0x82, 0xCF, 0xE5, 0x2D, 0xE4, 0x13, 0x5C, 0xEB, 0x00, 0x32, 0x1F, 0x32, 0xA6, 0x9B, 0x5F, 0xF6, 0x91, 0x0F, 0x5A, 0x40, 0xD6, 0x24, 0xB7, 0xC2, 0xCA, 0x84, 0xD3, 0xA5, 0x93, 0x72, 0xEA, 0x28, 0xA8, 0xD9, 0x60, 0xB8, 0xD3, 0xE1, 0xD9, 0x28, 0x4C, 0xFB, 0xDE, 0x6B, 0xB1, 0xF5, 0xFE, 0x75, 0x75, 0xB2, 0xC8, 0xAC, 0x05, 0xA5, 0xCF, 0x04, 0x4B, 0xFA, 0x86, 0x28, 0xF2, 0xCE, 0x1F, 0x4C, 0xE4, 0x43, 0x23, 0xD5, 0x3B, 0x08, 0x0C, 0xF7, 0xA1, 0x31, 0x43, 0x2C, 0x58, 0x1A, 0x38, 0xA7, 0x2B, 0x3E, 0xD3, 0x32, 0x9F, 0xA0, 0x68, 0xBD, 0x34, 0x22, 0x45, 0x7A, 0xA8, 0xEA, 0x17, 0xE1, 0xD6, 0xA4, 0x71, 0x84, 0x33, 0x35, 0xAB, 0x96, 0xA5, 0x0E, 0xB2, 0x18, 0xB1, 0xA7, 0x82, 0x22, 0xC8, 0x1E, 0xFD, 0xA6, 0x3A, 0xA4, 0x28, 0x13, 0xA2, 0x0C, 0x15, 0xA1, 0x40, 0x7E, 0x77, 0x32, 0xC6, 0x2F, 0x01, 0x84, 0x70, 0xE8, 0xE9, 0xC5, 0x9D, 0xCC, 0xD2, 0x00, 0xE3, 0xFC, 0x6E, 0xA3, 0x19, 0x50, 0xE1, 0xA4, 0x84, 0xA5, 0xCF, 0x9E, 0xFF, 0xB5, 0x93, 0x8E, 0x24, 0x36, 0xC0, 0x66, 0x0E, 0x33, 0x8D, 0xF1, 0x2C, 0xC1, 0xB6, 0x5A, 0x28, 0xA7, 0xF2, 0xF4, 0x48, 0x59, 0xF9, 0x5F, 0x54, 0xD2, 0x5D, 0x28, 0xBE, 0x72, 0xAA, 0xA6, 0xD9, 0x4A, 0x25, 0x57, 0x16, 0xE0, 0xB2, 0x44, 0x3D, 0xC3, 0x75, 0xDB, 0x81, 0x84, 0x7B, 0x01, 0x0F, 0xAC, 0x6D, 0x2F, 0xC6, 0x26, 0x92, 0x73, 0xF1, 0xD9, 0xB2, 0x66, 0xCB, 0xB5, 0xC8, 0xEB, 0xC7, 0xA1, 0x47, 0x21, 0x0F, 0x32, 0xD8, 0x0D, 0xFA, 0xDE, 0x49, 0xAC, 0x96, 0xFE, 0x56, 0x8C, 0x82, 0xCF, 0xF9, 0x77, 0x0A, 0x13, 0xB3, 0xE1, 0x58, 0x93, 0x65, 0x81, 0x99, 0x27, 0x0B, 0x88, 0x90, 0x68, 0x69, 0x4A, 0x6D, 0x25, 0x18, 0x77, 0x3D, 0xDB, 0xF4, 0xB4, 0x13, 0xB6, 0x0B, 0x81, 0x40, 0x08, 0x7F, 0x54, 0x89, 0xC1, 0xBF, 0xA8, 0xE9, 0x88, 0xAD, 0x84, 0xD4, 0x1B, 0x9B, 0x7C, 0x06, 0x96, 0xF2, 0x5B, 0x28, 0x24, 0xFF, 0xE7, 0xA6, 0xA0, 0xF2, 0x2C, 0x72, 0xE5, 0x8B, 0x0E, 0x2F, 0x0F, 0xE8, 0xB5, 0xCE, 0xC0, 0x34, 0x80, 0x3C, 0xA1, 0x5D, 0x6D, 0x89, 0x8E, 0x58, 0x21, 0x43, 0x67, 0x4A, 0x75, 0x63, 0xB4, 0x8B, 0x9D, 0x7C, 0xD9, 0x35, 0x09, 0x72, 0x46, 0xD4, 0x6F, 0xFD, 0xC2, 0x76, 0x55, 0x55, 0x5F, 0xC9, 0x18, 0xD0, 0xEC, 0xA8, 0xCF, 0xD0, 0xBC, 0x75, 0x70, 0xB8, 0x43, 0xE9, 0xE3, 0x5E, 0x55, 0x45, 0x30, 0x7C, 0x5A, 0xC0, 0xDD, 0x66, 0xB6, 0xEC, 0xDE, 0x43, 0x04, 0x50, 0x2D, 0x72, 0xAF, 0xDF, 0x46, 0xE2, 0xB8, 0x15, 0xB8, 0xD7, 0x34, 0x94, 0x47, 0x65, 0x0A, 0x94, 0x59, 0x4F, 0x12, 0x3F, 0x52, 0xBE, 0xC8, 0x01, 0x77, 0x06, 0xF5, 0x76, 0x5F, 0x91, 0x5F, 0x45, 0x81, 0x49, 0x42, 0x59, 0x36, 0x5B, 0x5A, 0x54, 0x6F, 0x33, 0x36, 0x34, 0x98, 0xCB, 0x8C, 0xDB, 0x07, 0x89, 0xC2, 0x60, 0x9F, 0xBB, 0xFB, 0x3C, 0x42, 0xA3, 0xD0, 0x40, 0xC8, 0x0F, 0x3E, 0xA1, 0x41, 0x28, 0x31, 0x58, 0xF0, 0xA1, 0x0B, 0xA2, 0x23, 0x62, 0x11, 0x12, 0xB9, 0x67, 0x29, 0x9E, 0x21, 0xF2, 0xF7, 0x9D, 0x8F, 0xB9, 0x44, 0x8B, 0xA8, 0x18, 0xC8, 0x30, 0xAD, 0x2E, 0x79, 0x01, 0x29, 0x38, 0x9C, 0x1E, 0xC6, 0xDE, 0x34, 0xE4, 0x82, 0x7D, 0xCD, 0x7C, 0x2F, 0xCE, 0xAC, 0x31, 0x57, 0xB1, 0x85, 0x8D, 0x8E, 0x12, 0x2D, 0x66, 0x1C, 0x00, 0x86, 0xAE, 0x78, 0x2C, 0x99, 0xC7, 0x91, 0x3F, 0x72, 0x04, 0xBE, 0xC0, 0xA6, 0x2C, 0xE3, 0x3A, 0xB3, 0xC0, 0xA0, 0xAA, 0x80, 0xB8, 0xDD, 0x34, 0xC1, 0x32, 0x67, 0x14, 0x95, 0x8F, 0xC9, 0xBF, 0x41, 0x2E, 0x79, 0x23, 0xDB, 0x6A, 0xA2, 0x25, 0x2B, 0x63, 0x9C, 0x11, 0x30, 0xD5, 0x45, 0xD5, 0x5A, 0xE5, 0xA9, 0xCA, 0xDD, 0x0F, 0xFC, 0x83, 0xC5, 0x31, 0xFB, 0x19, 0x79, 0x2D, 0xDD, 0xC4, 0x9A, 0x68, 0x2B, 0x0A, 0x9A, 0x50, 0x93, 0xD8, 0xD8, 0x14, 0x0C, 0xC0, 0xA5, 0x6B, 0x58, 0x2B, 0xF2, 0xFF, 0x9C, 0x67, 0x11, 0xBB, 0xB2, 0xED, 0x89, 0xFD, 0x8C, 0xB0, 0x56, 0x85, 0xB7, 0x8B, 0xE8, 0xE9, 0x42, 0xFA, 0xAE, 0x90, 0xB3, 0x4D, 0x88, 0x3F, 0x8A, 0xC5, 0xB3, 0x2B, 0x29, 0x5C, 0x14, 0x56, 0x92, 0x1F, 0x61, 0xDD, 0xA5, 0x7A, 0xCC, 0xE6, 0x5E, 0xA1, 0x69, 0x22, 0xE3, 0x2E, 0xBC, 0x38, 0x5B, 0xF9, 0xA8, 0xB4, 0x2B, 0x6A, 0x7C, 0xBE, 0x3C, 0xA0, 0xBA, 0xE0, 0x30, 0xF2, 0xD7, 0x8D, 0x6D, 0x84, 0xFC, 0xDE, 0x1F, 0x74, 0x1F, 0x93, 0xB4, 0x2D, 0x8F, 0x4B, 0xAD, 0xF5, 0xE2, 0xDE, 0x88, 0xAE, 0x50, 0x3E, 0x94, 0x26, 0x3C, 0x0E, 0x9D, 0xFD, 0x96, 0xE8, 0x5D, 0xE7, 0x93, 0x77, 0x2B, 0xC2, 0x9D, 0x29, 0x7A, 0xBF, 0x07, 0x62, 0xE8, 0x0D, 0xB9, 0xD9, 0xD8, 0x9A, 0xF3, 0x15, 0x84, 0xD6, 0xB7, 0x5D, 0x40, 0x40, 0x79, 0x35, 0x33, 0xB5, 0xFB, 0x60, 0x23, 0x0F, 0xED, 0x9F, 0x69, 0xF5, 0x17, 0x05, 0xCC, 0x9E, 0x1D, 0x25, 0x7F, 0x9D, 0xB7, 0x8A, 0x72, 0xAA, 0x67, 0x62, 0xA9, 0xF6, 0xC5, 0x7F, 0xD9, 0xA8, 0x8B, 0x04, 0x83, 0xD8, 0x49, 0x65, 0xB0, 0xCF, 0x9D, 0xA5, 0x8D, 0x7C, 0xBA, 0xCA, 0x37, 0xDA, 0xF5, 0xE4, 0x27, 0xCB, 0x26, 0xD4, 0x06, 0x8A, 0x36, 0x00, 0x15, 0x06, 0xE6, 0x64, 0x25, 0xE0, 0x42, 0xF2, 0xA3, 0x2B, 0xA8, 0x99, 0x37, 0x62, 0x54, 0xD3, 0x19, 0x67, 0x39, 0x22, 0xDD, 0xC5, 0x34, 0x51, 0x4E, 0x97, 0x5D, 0x0B, 0x10, 0xE2, 0x87, 0x16, 0x89, 0xE5, 0xA8, 0x67, 0x7D, 0x80, 0x05, 0xC2, 0x2A, 0xF9, 0xAA, 0xBE, 0x70, 0xF4, 0x89, 0xCC, 0x3C, 0x75, 0x1E, 0xF3, 0xCB, 0xDB, 0xFD, 0x29, 0x29, 0x10, 0x55, 0x26, 0x08, 0x90, 0x6B, 0x48, 0x29, 0xAC, 0x53, 0x75, 0x84, 0x4B, 0x3D, 0xAF, 0xE0, 0x09, 0x68, 0xF3, 0x39, 0x44, 0x2D, 0x83, 0xA2, 0x78, 0x36, 0x2A, 0xE4, 0xAE, 0x36, 0x44, 0x26, 0xE8, 0x16, 0x5C, 0xAF, 0x85, 0xC1, 0xE0, 0x08, 0x3C, 0x90, 0x58, 0x07, 0xC5, 0xE9, 0xEB, 0x4C, 0x9A, 0x00, 0xE0, 0x19, 0xDE, 0x70, 0x34, 0x12, 0x56, 0x45, 0x72, 0xB9, 0x17, 0xAF, 0xE5, 0x5A, 0xCD, 0x7E, 0xE6, 0x77, 0xDF, 0x9A, 0x97, 0x00, 0x53, 0xCE, 0x39, 0xA3, 0x28, 0xA2, 0x60, 0xF3, 0x5D, 0xC7, 0x95, 0xAF, 0xF0, 0x21, 0xA0, 0xF2, 0xC8, 0x55, 0xCA, 0x2A, 0xBB, 0x19, 0xAA, 0x30, 0xF0, 0x31, 0x92, 0x5E, 0x2B, 0x1F, 0x58, 0x92, 0x40, 0x9B, 0x69, 0xAE, 0x77, 0xC6, 0x41, 0x43, 0xFB, 0x44, 0x63, 0x86, 0xA5, 0xF8, 0xCD, 0x16, 0xAC, 0x18, 0x39, 0xEB, 0xAA, 0xCD, 0x8E, 0x93, 0x98, 0xB9, 0x44, 0xEB, 0x93, 0x35, 0x54, 0x97, 0x99, 0x61, 0x54, 0x4D, 0xA0, 0x38, 0x9F, 0x16, 0x60, 0xAC, 0xF8, 0x98, 0x2B, 0xD6, 0xF9, 0xCE, 0x26, 0x42, 0x36, 0xEC, 0xE2, 0xB6, 0x52, 0x0C, 0x59, 0x2F, 0x57, 0x01, 0xA3, 0xF5, 0x69, 0x0A, 0xFF, 0x27, 0xFB, 0xC4, 0xBB, 0x96, 0x6C, 0xAC, 0x7B, 0x00, 0x03, 0x68, 0xD1, 0xDD, 0xEB, 0x04, 0x6D, 0xDE, 0x3D, 0x89, 0x7C, 0x8A, 0x59, 0x6F, 0x75, 0x2C, 0x94, 0x32, 0xF4, 0x16, 0x95, 0x68, 0xBC, 0x38, 0xBA, 0xEA, 0x2B, 0xDB, 0x6A, 0x67, 0xC5, 0x57, 0x2C, 0x4E, 0xC5, 0x06, 0xD8, 0x1E, 0x74, 0xFD, 0xFA, 0xD2, 0x2E, 0x96, 0x7D, 0x86, 0x37, 0xE3, 0x99, 0x62, 0x46, 0x7C, 0x98, 0xF9, 0x82, 0xF3, 0x26, 0x82, 0x44, 0x4B, 0x87, 0x1A, 0xB9, 0xAA, 0x7E, 0xA9, 0x97, 0x30, 0x18, 0x60, 0x9B, 0x9D, 0xF9, 0x94, 0x74, 0xA5, 0xBF, 0xB8, 0xC6, 0x87, 0x39, 0xF1, 0x1B, 0xDC, 0x2B, 0x19, 0x89, 0x0B, 0xF9, 0xCB, 0x35, 0x6F, 0xDC, 0xB3, 0x9F, 0x38, 0x45, 0xC7, 0x9E, 0x53, 0x4D, 0x03, 0x32, 0x18, 0xC6, 0x0B, 0xCB, 0xC8, 0x68, 0xFB, 0xCC, 0xDB, 0xF0, 0x9A, 0xD4, 0x01, 0x65, 0xA1, 0x3F, 0x95, 0x5E, 0xD8, 0x3E, 0x76, 0xB5, 0x61, 0xFF, 0x5F, 0x48, 0xC7, 0x3A, 0x60, 0x14, 0x78, 0xCE, 0x2F, 0x7D, 0x07, 0x2B, 0x7E, 0x06, 0x8C, 0xB1, 0x82, 0x7C, 0x31, 0x06, 0x54, 0xE9, 0x1E, 0x9D, 0x9D, 0xE1, 0x2E, 0xE1, 0xA5, 0x64, 0x1A, 0xB1, 0xED, 0xDD, 0x91, 0x7D, 0x8E, 0x41, 0xA8, 0x51, 0x63, 0xA9, 0x5A, 0x6E, 0x97, 0x5C, 0x5E, 0x5B, 0x5D, 0x05, 0xCB, 0x0A, 0x4F, 0x7D, 0x6E, 0x3B, 0x4D, 0xD3, 0x7E, 0xD7, 0xFC, 0x4E, 0x3A, 0x29, 0xBD, 0x1A, 0x74, 0x90, 0x39, 0x0F, 0xB6, 0x3E, 0x54, 0x59, 0x57, 0x6B, 0xEF, 0x9D, 0x6F, 0xFB, 0xB1, 0xFC, 0xA1, 0x89, 0xB2, 0x91, 0x23, 0x04, 0x17, 0x0D, 0x4C, 0x2A, 0x7E, 0x8F, 0xB7, 0xC3, 0x71, 0xF7, 0x4A, 0xBE, 0x3C, 0x70, 0xDE, 0x16, 0x21, 0xB7, 0xC0, 0xC7, 0x2F, 0xC5, 0x6B, 0xFC, 0x13, 0xDA, 0x88, 0x8E, 0xFF, 0xFB, 0x21, 0xA9, 0x4E, 0x18, 0xFB, 0xC8, 0x05, 0x77, 0x27, 0x7A, 0x48, 0xF9, 0x9B, 0xB6, 0xE5, 0xFF, 0xBE, 0x72, 0x45, 0x5F, 0x5C, 0x34, 0x0F, 0x71, 0xCC, 0xCB, 0xF4, 0x8B, 0xF9, 0x3C, 0xD7, 0xAC, 0x8E, 0x9A, 0x65, 0x86, 0xF5, 0x24, 0x55, 0x6C, 0x51, 0x9B, 0xD0, 0x45, 0xDD, 0x2E, 0xD5, 0x0A, 0xB8, 0x2D, 0x1F, 0x0D, 0xDD, 0xFC, 0x74, 0xEE, 0xB4, 0xB8, 0xA9, 0xEF, 0x0E, 0xA0, 0xCD, 0x65, 0x83, 0xFE, 0x52, 0x9E, 0x17, 0x4A, 0xC1, 0xF7, 0xB8, 0x91, 0xFD, 0x26, 0x5D, 0xC4, 0x9F, 0x60, 0xED, 0xA1, 0x17, 0x80, 0x6A, 0xCF, 0x15, 0x02, 0x42, 0x7B, 0xDE, 0x23, 0x55, 0xEF, 0x76, 0xF9, 0xD2, 0x2A, 0xED, 0x63, 0x35, 0x14, 0xA1, 0x46, 0x30, 0x82, 0xC6, 0xD0, 0xD3, 0x22, 0x48, 0xB4, 0x11, 0xE8, 0x74, 0xBC, 0x72, 0x2F, 0x23, 0xA0, 0x02, 0x27, 0xC7, 0xF2, 0x3D, 0x6D, 0xF9, 0xEC, 0x20, 0x7F, 0xF6, 0x2B, 0xA7, 0xF5, 0xC3, 0xF5, 0xCC, 0x34, 0x85, 0xE8, 0x32, 0x1C, 0x54, 0xF6, 0x25, 0x17, 0xDE, 0x63, 0xAE, 0x8D, 0x31, 0x14, 0xF5, 0x4A, 0x0A, 0x6A, 0xA8, 0x24, 0xD7, 0x40, 0x57, 0xB3, 0x02, 0xF7, 0xA1, 0x7C, 0xE0, 0x54, 0x0E, 0xCC, 0x27, 0xE3, 0xC4, 0xA8, 0xAA, 0x2D, 0x2C, 0xCE, 0x09, 0x48, 0x5E, 0x56, 0x74, 0x48, 0x86, 0xD2, 0xAE, 0xF5, 0x20, 0xAC, 0xF2, 0x43, 0x23, 0x17, 0x4D, 0xEC, 0xCB, 0x21, 0xFA, 0x89, 0xAC, 0x3B, 0xE6, 0xF8, 0xAF, 0x4A, 0x3A, 0x9B, 0xB1, 0x74, 0x7D, 0x4D, 0xCE, 0x96, 0x41, 0xD4, 0xE2, 0x1D, 0xCD, 0x3D, 0x12, 0xB2, 0xD3, 0xD8, 0x16, 0x53, 0x20, 0x6E, 0x49, 0x6A, 0x97, 0x42, 0x8E, 0x07, 0xE7, 0xA7, 0x70, 0x92, 0x0B, 0x9E, 0x77, 0x3E, 0x0D, 0xBE, 0xD6, 0x23, 0xCD, 0xEA, 0x98, 0x22, 0x7E, 0x45, 0xFA, 0xFF, 0xA9, 0x50, 0x9A, 0xD8, 0x44, 0xA4, 0xE3, 0x67, 0x58, 0xDC, 0x67, 0xC1, 0x2D, 0xF6, 0x4F, 0xD4, 0x7D, 0x27, 0x69, 0x7C, 0x79, 0xB1, 0x1A, 0xFA, 0x28, 0x74, 0xFC, 0x20, 0xA5, 0x33, 0x31, 0xB9, 0x1D, 0xE2, 0x6A, 0x4D, 0xEA, 0x18, 0x1D, 0x42, 0x04, 0xEA, 0xDC, 0xC2, 0xF1, 0xFE, 0xA9, 0x36, 0xC9, 0x21, 0x84, 0x25, 0x40, 0x8A, 0xAA, 0x95, 0xFB, 0x1D, 0x34, 0x11, 0x5F, 0x15, 0xA6, 0xBC, 0xCE, 0xB3, 0x0B, 0x31, 0x03, 0x03, 0xE0, 0xD1, 0x4B, 0x5A, 0xF0, 0xD9, 0xB5, 0x52, 0x8F, 0x24, 0xAE, 0xED, 0x0D, 0x8C, 0x2C, 0xA2, 0xCD, 0x1C, 0x85, 0x3D, 0x0D, 0x54, 0x54, 0xD7, 0x74, 0xEA, 0x45, 0x4B, 0x75, 0x7F, 0x32, 0xD7, 0x92, 0xF2, 0x06, 0x94, 0xEB, 0x0E, 0x1E, 0x57, 0x12, 0x50, 0x54, 0xC2, 0xBA, 0x26, 0x6A, 0xBB, 0xB5, 0xD4, 0xDF, 0x86, 0x1B, 0x01, 0xD9, 0xB5, 0xDC, 0xDC, 0xC1, 0x61, 0xFD, 0x84, 0xEA, 0xFD, 0x47, 0xFD, 0x85, 0x51, 0xF6, 0xD1, 0x92, 0xDD, 0xE3, 0x41, 0x0C, 0x84, 0xDF, 0xE4, 0x7C, 0x4B, 0xD8, 0xA9, 0x28, 0x47, 0xEB, 0x58, 0x0B, 0xD8, 0xC7, 0x1C, 0xBB, 0xC7, 0xD1, 0x6A, 0x1A, 0xC7, 0x51, 0xBC, 0x5E, 0xFA, 0x64, 0x5A, 0xA4, 0x40, 0x73, 0xDA, 0x9D, 0x84, 0xF6, 0x7F, 0x67, 0xC2, 0x18, 0x39, 0xD8, 0xD8, 0x10, 0x71, 0x9B,  };

// Function: CRC 64: sec_c64_f. Needs pointer to LUT referenced by CRC64TAB.
#define CRC64FUN d890d8ed
#define CRC64FUN_KEY ab96daef2
static uint64_t CRC64FUN_KEY = (0xDE4D44E2U);
static uint8_t CRC64FUN[] = { 0x5B, 0xB6, 0x1F, 0x50, 0x56, 0xD1, 0x5B, 0x19, 0xE0, 0x45, 0x1E, 0xB9, 0x31, 0xCA, 0x7E, 0x2E, 0x85, 0x3B, 0x6D, 0xBE, 0xB6, 0x48, 0x6F, 0x9C, 0x60, 0xDB, 0xFE, 0x27, 0x53, 0x35, 0x08, 0x94, 0x70, 0xBB, 0x96, 0xA3, 0xE1, 0xA7, 0x08, 0x26, 0x40, 0x32, 0x15, 0xCD, 0xF6, 0x1C, 0x5C, 0xD6, 0x85, 0x27, 0xEF, 0xBF, 0xDA, 0x84,  };

// Function: Memory XOR given RNG function and state: sec_mxr_f.
#define MEMXORRG fe122222
#define MEMXORRG_KEY a29483807
static uint64_t MEMXORRG_KEY = (0xD53091B0U);
static uint8_t MEMXORRG[] = { 0x84, 0x38, 0xD9, 0xF6, 0x99, 0x5D, 0xCA, 0x61, 0x41, 0x88, 0x48, 0xAE, 0x73, 0xCC, 0x5C, 0x34, 0x7E, 0x4E, 0x25, 0xFA, 0xD5, 0xF5, 0x8B, 0x28, 0x89, 0x0B, 0x6C, 0xD2, 0x5F, 0xCE, 0x0D, 0x1D, 0x2F, 0xFA, 0x07, 0xB1, 0x74, 0xBB, 0xC1, 0x33, 0xDE, 0xF0, 0x09, 0xA1, 0xE1, 0xA9, 0x1C, 0xB5, 0x6E, 0x7C, 0x00, 0x23, 0x4E, 0xF3, 0x0C, 0x77, 0xB0, 0x64, 0x70, 0xC7, 0x68, 0x4C, 0x8B, 0x84, 0xF1, 0x63, 0x4F, 0x08, 0x99, 0xA8, 0x8F, 0x17, 0xAE, 0x61, 0x7E, 0x68, 0x61, 0x16, 0x8A, 0xE4, 0x80, 0x51, 0xA4, 0x28, 0xD1, 0x93, 0x44, 0x1F, 0xF3, 0x52, 0xA1, 0x5F, 0x50, 0xDF, 0x2E, 0xBD,  };

// Function: City Hash 64-Bit, up to 8 bytes: sec_h64_f.
#define HCITYB64 e24e40bf
#define HCITYB64_KEY b5aa96f75
static uint64_t HCITYB64_KEY = (0xBE0AA763U);
static uint8_t HCITYB64[] = { 0x4B, 0x95, 0x48, 0x91, 0x28, 0x78, 0x4B, 0x4C, 0x58, 0x7B, 0x27, 0xE3, 0xF2, 0x47, 0x83, 0xA7, 0x67, 0x11, 0x74, 0x75, 0xBA, 0x2A, 0x43, 0x2B, 0x7D, 0xE0, 0x15, 0x0B, 0xB5, 0x35, 0xE1, 0x04, 0x5E, 0x14, 0xB3, 0x13, 0x66, 0x75, 0xA7, 0x70, 0xF4, 0xE2, 0xE1, 0x77, 0x24, 0xB0, 0x59, 0x18, 0x9D, 0xEB, 0x21, 0x85, 0x98, 0x80, 0xFB, 0x38, 0x4F, 0xF4, 0xDA, 0x00, 0xDC, 0x5A, 0x42, 0x84, 0xBB, 0xF8, 0x96, 0x99, 0x20, 0xA8, 0x78, 0xB0, 0x74, 0xFF, 0xB1, 0xE6, 0xD4, 0xA2, 0x86, 0xD0, 0x4C, 0xE3, 0x93, 0xB7, 0x20, 0xBD, 0xFA, 0x32, 0xD5, 0xEF, 0xDA, 0xC2, 0xB3, 0xC9, 0xC3, 0x3C, 0x10, 0x38, 0x12, 0xD0, 0x85, 0x3A, 0x04, 0xD7, 0x35, 0x9A, 0x90, 0xDA, 0x39, 0x83, 0x7F, 0x28, 0xBE, 0xBB, 0x1C, 0x9C, 0x05, 0xE8, 0x2B, 0x12, 0x49, 0x20, 0x28, 0x6F, 0x92, 0x3A, 0x42, 0x55, 0x53, 0xA4, 0xCD, 0xDC, 0xD1, 0x71, 0xC9, 0x9A, 0x4D, 0x18, 0xFA, 0xDB, 0x0C, 0x59, 0xFB, 0xE9, 0x3F, 0x55, 0xC3, 0xAC, 0x7C, 0xA2, 0xD1, 0xBF, 0x8B, 0x35, 0x3F, 0xA6, 0xAF, 0x68, 0x5C, 0xE3, 0x67, 0x8F, 0xBC, 0xDC, 0x15, 0x08, 0x47, 0x54, 0xCE, 0xA5, 0x49, 0x6C, 0x5C, 0xBB, 0x0B, 0xFE, 0x30, 0x88, 0x62, 0x75, 0x0D, 0xC4, 0x95, 0xCC, 0x8D, 0x7B, 0x52, 0x61, 0x94, 0xA8, 0xD6, 0xB5, 0x99, 0xA2, 0x9D, 0x41, 0x87, 0x00, 0xDC, 0x82, 0x55, 0x91, 0xAF, 0x23, 0x61, 0xDE, 0x4D, 0xCB, 0x17, 0xF6, 0xD0, 0xC6, 0xB9, 0x1C, 0xF8, 0x42, 0x60, 0x34, 0x95, 0x68, 0x41, 0x12, 0x40, 0x14, 0xEE, 0x48, 0x0E, 0xBE, 0x15, 0x45, 0x19, 0xCB, 0x38, 0x96, 0x9F, 0x73, 0x76, 0xE3, 0x35, 0x56, 0xAA, 0x10, 0x8C, 0x3C, 0x88, 0xE9, 0x51, 0x8D, 0x3E, 0xD6, 0x32, 0xC0, 0xA3, 0xA8, 0x93, 0xCC, 0x91, 0xE4, 0x6A, 0x31, 0x36, 0xEF, 0xE6, 0xF7, 0x6A, 0x71, 0xF4, 0x44, 0xC4, 0x23, 0xCD, 0x37, 0x16, 0xB6, 0xB1, 0xFE, 0xFC, 0x62, 0xBC, 0x78, 0x12, 0xAC, 0x5C, 0x10, 0x32, 0x7A, 0x51, 0x8E, 0x2B, 0x7D, 0x9C, 0x0D, 0x48, 0xC3, 0x73, 0xAE, 0x0D, 0xAA, 0xC1, 0x1C, 0x1D, 0xB3, 0x84, 0x97, 0xD7, 0x6F, 0x94, 0xCF, 0x37, 0xE6, 0x6C, 0x98, 0x98, 0x90, 0xDF, 0x4B, 0x98, 0x58, 0x51, 0x03, 0xB5, 0x5E, 0x18, 0xE8, 0xA0, 0x4C, 0x67, 0xCA, 0x66, 0xA1, 0x3F, 0x8A, 0x05, 0xE5, 0xC9, 0x08, 0x04, 0x96, 0xD3, 0x71, 0x5A, 0x7D, 0x66, 0x14, 0x25, 0xB8, 0xAC, 0x7C, 0x79, 0xF5, 0xE3, 0xB9, 0x13, 0xCC, 0xC7, 0x7D, 0x28, 0xBC, 0xDF, 0x3A, 0x6A, 0xBF, 0xB4, 0x43, 0x9C, 0x6A, 0x47, 0x26, 0x81, 0x72, 0x3E, 0x48, 0x3A, 0x82, 0x45, 0x6A, 0xF2, 0xAE, 0x1E, 0x59, 0xD8, 0x91, 0x18, 0x1C, 0xF9, 0xF7, 0xE7, 0x18, 0x0E, 0x63, 0xFD, 0xAB, 0xBA, 0x09, 0xC7, 0x08, 0xDA, 0x8D, 0x7F, 0x21, 0x69, 0x88, 0x8D, 0x20, 0xE3, 0xE8, 0xC8, 0x45, 0xE1, 0xC9, 0x15, 0x49, 0x8B, 0xF6, 0x76, 0x1C, 0x96, 0x94, 0x1D, 0xE6, 0x54, 0x0B, 0x72, 0xFA, 0x09, 0xC9, 0x47, 0x9A, 0x3E, 0x7E, 0x7A, 0x31, 0x87, 0x97, 0x7E, 0x91, 0xD7, 0x33, 0x83, 0x31, 0x5A, 0x1C, 0x9A, 0xEA, 0xA7, 0xFC, 0xDB, 0xB0, 0x20, 0x69, 0xFA, 0x64, 0xF9, 0x99, 0x57, 0x4B, 0x9D, 0xC9, 0x41, 0xA0, 0x75, 0x38, 0xE0, 0x97, 0xC5, 0x1C, 0x20, 0xF4, 0x66, 0x66, 0xD0, 0x69, 0x07, 0x2E, 0xE4, 0x91, 0xEC, 0x31, 0xE5, 0x3D, 0xD5, 0x4A, 0x23, 0x21, 0x96, 0xD5, 0xF1, 0xD5, 0x00, 0x86, 0x73, 0x1C, 0xFF, 0x13, 0x2F, 0x3F, 0x47, 0x2A, 0x44, 0xBA, 0x09, 0x68, 0x89, 0xC8, 0x35, 0x68, 0x4E, 0x3F, 0x12, 0xA1, 0xCC, 0x5B, 0x54, 0x8E, 0x6F, 0x20, 0xAF, 0x1D, 0x0D, 0xBE, 0x5A, 0xCF, 0x1D, 0x00, 0x59, 0xCC, 0x69, 0xAB, 0x13, 0xD8, 0xD7, 0xC4, 0x93, 0xEB, 0x93, 0x8C, 0x6C, 0x9E, 0x52, 0xA1, 0x4A, 0x23, 0x81, 0x85, 0x67, 0xB8, 0x80, 0x72, 0x7F, 0x2A, 0x9F, 0x49, 0xD6, 0x8C, 0xDB, 0x4C, 0xBD, 0x45, 0xD8, 0x81, 0x9D, 0x76, 0x43, 0x68, 0xE2, 0x7D, 0x13, 0x06, 0xA5, 0x5D, 0x42, 0xA8, 0xA9, 0xEA, 0x34, 0xCE, 0xEA, 0xE1, 0x89, 0xE7, 0x6F, 0x7D, 0x08, 0x7A, 0x80, 0x13, 0x4E, 0x4D, 0x08, 0xAD, 0x20, 0x98, 0xF1, 0x19, 0xE3,  };

// Function: Murmur Hash 32-Bit: sec_h32_f.
#define HMURMU32 a76381fc
#define HMURMU32_KEY c53719611
static uint64_t HMURMU32_KEY = (0xD44CA940U);
static uint8_t HMURMU32[] = { 0x50, 0x4A, 0x9F, 0x23, 0x5B, 0xF6, 0xCE, 0xAB, 0xAA, 0xE1, 0x11, 0x5E, 0x55, 0xBE, 0x99, 0x10, 0xCA, 0x42, 0xD1, 0x6A, 0xE4, 0xFF, 0x90, 0xE2, 0xF4, 0xCC, 0x2C, 0x9D, 0x2A, 0x9C, 0x49, 0x7D, 0xF4, 0xE8, 0xC1, 0x02, 0x1E, 0x77, 0xC7, 0x84, 0x96, 0x09, 0x53, 0x6A, 0x24, 0x5E, 0x7F, 0x32, 0x6D, 0x43, 0xAE, 0x22, 0x40, 0xF4, 0xCE, 0x09, 0x09, 0x78, 0x39, 0x42, 0xDF, 0x02, 0xCE, 0x52, 0x59, 0x89, 0x45, 0x52, 0x96, 0x5D, 0x8E, 0x9A, 0xA2, 0xFF, 0x8D, 0xB1, 0x56, 0x8B, 0x19, 0xDC, 0x58, 0x05, 0xD3, 0x48, 0xE8, 0x5C, 0x16, 0x83, 0x88, 0xC2, 0xF3, 0x5F, 0xCE, 0xE6, 0xC3, 0xF6, 0xDA, 0x2B, 0x37, 0xC9, 0x15, 0x05, 0x96, 0x98, 0xB6, 0x5A, 0x65, 0xCE, 0xB1, 0xAB, 0x6F, 0xA8, 0x9E, 0xBA, 0x9A, 0xCE, 0x4D, 0x14, 0xBE, 0x2D, 0x65, 0x26, 0x43, 0x98, 0x14, 0x99, 0x8F, 0xEE, 0xF8, 0xCB, 0x84, 0x60, 0x2F, 0xA6, 0xF9, 0x65, 0x42, 0x05, 0x14, 0xD3, 0x08, 0x63, 0x1B, 0xD1, 0xA8, 0xFC, 0xC9, 0x51, 0x54, 0x92, 0x6F, 0x4A, 0x00, 0x68, 0x9B, 0x44, 0x64, 0x1E, 0x07, 0xCF, 0x89, 0x2A, 0x10, 0x5C, 0xB1, 0x41, 0x09, 0xD1, 0xFD, 0x89, 0xF2, 0x2C, 0x17, 0xE8, 0x74, 0xBB, 0x71, 0xDE, 0xA2, 0x21,  };

// Function: Murmur Hash 64-Bit: sec_h64_f.
#define HMURMU64 ccc8f6e9
#define HMURMU64_KEY cc1a092b7
static uint64_t HMURMU64_KEY = (0x74600B23U);
static uint8_t HMURMU64[] = { 0x8B, 0x55, 0xA0, 0x51, 0xE8, 0xA7, 0xCE, 0x6B, 0xFE, 0x6B, 0x90, 0xFF, 0x1D, 0x61, 0x72, 0x3E, 0xD5, 0xDE, 0x97, 0x74, 0x7A, 0xD6, 0xC6, 0x76, 0x42, 0x09, 0x87, 0x59, 0x9A, 0x3D, 0xC8, 0x15, 0x92, 0x55, 0x75, 0x65, 0x97, 0xAC, 0x55, 0x76, 0x21, 0x9F, 0x3B, 0xBF, 0xE6, 0x58, 0x35, 0x5B, 0x6A, 0x38, 0x78, 0x45, 0x58, 0x0D, 0x3E, 0x47, 0x7B, 0xD9, 0xD2, 0x80, 0xFB, 0x6E, 0xD3, 0xB4, 0xF0, 0x61, 0x1F, 0xAD, 0xF4, 0x01, 0x98, 0x54, 0xF3, 0x2D, 0xE1, 0xE6, 0x5C, 0x6D, 0xE9, 0xDF, 0x8B, 0xA3, 0x8C, 0x3E, 0x4D, 0xE8, 0x27, 0x86, 0x5D, 0xCA, 0xD6, 0x16, 0xB6, 0x59, 0x50, 0x39, 0x0D, 0x56, 0xDA, 0x52, 0x82, 0x3F, 0x84, 0x9C, 0xBE, 0xAD, 0x1D, 0x81, 0xF7, 0x84, 0x76, 0xC0, 0xC3, 0x9C, 0xB6, 0x8C, 0x8E, 0x2C, 0x63, 0xD6, 0x64, 0x5B, 0x62, 0x5C, 0x5B, 0x3C, 0x9E, 0x95, 0x93, 0xE4, 0x0C, 0x9D, 0x15, 0x3D, 0x76, 0x54, 0x05, 0xAA, 0x6D, 0x1B, 0x0E, 0x92, 0x68, 0xEE, 0x55, 0xA3, 0x94, 0x22, 0x98, 0x44, 0x5E, 0xBD, 0x45, 0xB1, 0x66, 0xE2, 0x2D, 0x63, 0x7A, 0xA6, 0x1A, 0x28, 0xBF, 0x6F, 0x45, 0xEF, 0x5F, 0x95, 0x0E, 0xC2, 0x1B, 0xD2, 0xD3, 0x98, 0x87, 0xB7, 0x00, 0xC3, 0xE8, 0xB6, 0x2C, 0x8B, 0x1D, 0x0C, 0x84, 0xBB, 0x28, 0xD8, 0x5A, 0x67, 0x11, 0xA2, 0x26, 0x62, 0x5D, 0x84, 0x41, 0x8C, 0x54, 0x41, 0x6E, 0x99, 0x0D, 0x38, 0x64, 0x9E, 0x4C, 0x43, 0x96, 0xDE, 0xC9, 0x4D, 0xB9, 0x73, 0x90, 0xC8, 0x6E, 0x8A, 0x36, 0x67, 0x81, 0x52, 0x8A, 0xF4, 0x27, 0x0C, 0x28, 0xFF, 0x53, 0x04, 0xD0, 0x2B, 0xBA, 0x0E, 0xED, 0x93, 0x77, 0xD3, 0x43, 0x5E, 0xAF, 0x13, 0xCC, 0xD4, 0x4B, 0xA4, 0xEA, 0x87, 0xEF, 0x50, 0xCF, 0x89, 0xA0, 0x61, 0xF2, 0x7D, 0x81, 0xE7, 0x51, 0xF8, 0xF6, 0xCA, 0x18, 0x36, 0xAB, 0x38, 0xBD, 0xA4, 0xF5, 0xBB, 0x9B, 0x36, 0x97, 0x06, 0xC7, 0x3B, 0x96, 0x26, 0x75, 0xD2, 0x92, 0xEC, 0x6E, 0x70, 0xA3, 0xFC, 0xAC, 0x4F, 0x2E, 0xF8, 0x63, 0x1D, 0x88, 0xCD, 0xFD, 0xA8, 0x4D, 0xA0, 0x19, 0x0A, 0x96, 0x2E, 0x22, 0x22, 0xDB, 0x1C, 0x85, 0xCE, 0xF8, 0x6F, 0x6C, 0x5F, 0xD8, 0x92, 0x2A, 0xFA, 0x16, 0xB8, 0xF0, 0x42, 0x70, 0x05, 0xD0, 0xF2, 0x50, 0x44, 0x14, 0x4B, 0x67, 0x6E, 0x36, 0x02, 0x0C, 0x66, 0x0A, 0xE1, 0x67, 0x5C, 0x6D, 0xD3, 0x18, 0xFA, 0xD1, 0xF4, 0xF1, 0xFC, 0xA6, 0x9D, 0xD1, 0x76, 0xD2, 0x71, 0xB1, 0xC1, 0xF8, 0x34, 0x83, 0x24, 0x92, 0x10, 0x72, 0xFE, 0x06, 0xAA, 0x0D, 0xED, 0x3A, 0x72, 0x67, 0x4A, 0xF7, 0x62, 0xA0, 0xC2, 0xBD, 0xA9, 0x72, 0x00, 0x68, 0x2E, 0x99, 0x19, 0xD0, 0x1E, 0xF4, 0x33, 0x9F, 0x59, 0x47, 0xA7, 0x49, 0xAB, 0x73, 0x9A, 0x5F, 0x48, 0x9E, 0xAA, 0x39, 0xE8, 0x80, 0x81, 0x9A, 0x23, 0xEE, 0xCF, 0x07, 0x28, 0x82, 0x65, 0x9D, 0x82, 0x40, 0x92, 0xE7, 0xB3, 0x31, 0x4E, 0x9A, 0xDD, 0x16, 0xC7, 0x50, 0x60, 0x4C, 0x81, 0x9C, 0xDF, 0xBC, 0x95, 0x79, 0xB0, 0x48, 0x1C, 0xBA, 0x61, 0x17, 0x60, 0x83, 0x26, 0xD7, 0xD3, 0xF5, 0xED, 0xAE, 0x37, 0xD3, 0xB9, 0x6B, 0x79, 0x73, 0x07, 0xEA, 0xD8, 0x76, 0x0B, 0x22, 0x89, 0x01, 0xA9, 0xBE, 0xB8, 0x68, 0x16, 0xED, 0xCC, 0x28, 0xBF, 0x76, 0xEF, 0x1B, 0x69, 0x0E, 0xCD, 0xE6, 0x99, 0xED, 0x9B, 0xB5, 0x35, 0x9E, 0x5A, 0x2A, 0x6A, 0x16, 0x5C, 0x92, 0xD0, 0x08, 0x07, 0x59, 0xCC, 0x77, 0xD8, 0xBF, 0x36, 0x8C, 0xAA, 0xCC, 0x3B,  };

